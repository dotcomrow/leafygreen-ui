"use strict";(self.webpackChunkleafygreen_ui=self.webpackChunkleafygreen_ui||[]).push([[1731],{"./packages/menu/src/FocusableMenuItem/FocusableMenuItem.styles.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   h: () => (/* binding */ getFocusableMenuItemWrapperStyles)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js");\n/* harmony import */ var _leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/emotion/dist/esm/index.js");\n/* harmony import */ var _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/tokens/dist/esm/index.js");\n/* harmony import */ var _styles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/menu/src/styles.ts");\n\nvar _templateObject;\n\n\n\nvar getFocusableMenuItemWrapperStyles = function getFocusableMenuItemWrapperStyles(theme) {\n  return (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_0__.css)(_templateObject || (_templateObject = (0,_babel_runtime_helpers_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(["\\n  padding: ", "px;\\n  cursor: unset;\\n  background-color: ", ";\\n"])), _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_1__/* .spacing */ .W0[100], _styles__WEBPACK_IMPORTED_MODULE_2__/* .menuColor */ .co[theme].background["default"]);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9tZW51L3NyYy9Gb2N1c2FibGVNZW51SXRlbS9Gb2N1c2FibGVNZW51SXRlbS5zdHlsZXMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTZDO0FBRUc7QUFFVjtBQUUvQixJQUFNRyxpQ0FBaUMsR0FBRyxTQUFwQ0EsaUNBQWlDQSxDQUFJQyxLQUFZO0VBQUEsT0FBS0osMkRBQUcsQ0FBQUssZUFBQSxLQUFBQSxlQUFBLEdBQUFDLGlHQUFBLDRFQUN6REwsb0VBQU8sQ0FBQyxHQUFHLENBQUMsRUFFSEMsd0RBQVMsQ0FBQ0UsS0FBSyxDQUFDLENBQUNHLFVBQVUsV0FBUTtBQUFBLENBQ3hEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVhZnlncmVlbi11aS8uL3BhY2thZ2VzL21lbnUvc3JjL0ZvY3VzYWJsZU1lbnVJdGVtL0ZvY3VzYWJsZU1lbnVJdGVtLnN0eWxlcy50cz8zM2NmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNzcyB9IGZyb20gJ0BsZWFmeWdyZWVuLXVpL2Vtb3Rpb24nO1xuaW1wb3J0IHsgVGhlbWUgfSBmcm9tICdAbGVhZnlncmVlbi11aS9saWInO1xuaW1wb3J0IHsgc3BhY2luZyB9IGZyb20gJ0BsZWFmeWdyZWVuLXVpL3Rva2Vucyc7XG5cbmltcG9ydCB7IG1lbnVDb2xvciB9IGZyb20gJy4uL3N0eWxlcyc7XG5cbmV4cG9ydCBjb25zdCBnZXRGb2N1c2FibGVNZW51SXRlbVdyYXBwZXJTdHlsZXMgPSAodGhlbWU6IFRoZW1lKSA9PiBjc3NgXG4gIHBhZGRpbmc6ICR7c3BhY2luZ1sxMDBdfXB4O1xuICBjdXJzb3I6IHVuc2V0O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAke21lbnVDb2xvclt0aGVtZV0uYmFja2dyb3VuZC5kZWZhdWx0fTtcbmA7XG4iXSwibmFtZXMiOlsiY3NzIiwic3BhY2luZyIsIm1lbnVDb2xvciIsImdldEZvY3VzYWJsZU1lbnVJdGVtV3JhcHBlclN0eWxlcyIsInRoZW1lIiwiX3RlbXBsYXRlT2JqZWN0IiwiX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbCIsImJhY2tncm91bmQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./packages/menu/src/FocusableMenuItem/FocusableMenuItem.styles.ts\n')},"./packages/menu/src/Menu/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  v: () => (/* reexport */ Menu_Menu)\n});\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js\nvar esm_extends = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/extends.js");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\nvar taggedTemplateLiteral = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js + 2 modules\nvar defineProperty = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 3 modules\nvar slicedToArray = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\nvar objectWithoutProperties = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js");\n// EXTERNAL MODULE: consume shared module (default) react@^17.0.2 (singleton) (fallback: ./node_modules/react/index.js)\nvar index_js_ = __webpack_require__("webpack/sharing/consume/default/react/react");\nvar index_js_default = /*#__PURE__*/__webpack_require__.n(index_js_);\n// EXTERNAL MODULE: ./node_modules/prop-types/index.js\nvar prop_types = __webpack_require__("./node_modules/prop-types/index.js");\nvar prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);\n// EXTERNAL MODULE: ./packages/descendants/dist/esm/index.js\nvar esm = __webpack_require__("./packages/descendants/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/emotion/dist/esm/index.js\nvar dist_esm = __webpack_require__("./packages/emotion/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/hooks/dist/esm/index.js\nvar hooks_dist_esm = __webpack_require__("./packages/hooks/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/leafygreen-provider/dist/esm/index.js\nvar leafygreen_provider_dist_esm = __webpack_require__("./packages/leafygreen-provider/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/lib/dist/esm/index.js\nvar lib_dist_esm = __webpack_require__("./packages/lib/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/popover/dist/esm/index.js\nvar popover_dist_esm = __webpack_require__("./packages/popover/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/menu/src/constants.ts\nvar constants = __webpack_require__("./packages/menu/src/constants.ts");\n;// CONCATENATED MODULE: ./packages/menu/src/HighlightReducer/utils/getNextIndex.ts\n\n\n/**\n * Computes the next index given a direction\n */\n// prettier-ignore\n\n// prettier-ignore\n\n// prettier-ignore\nfunction getNextIndex(direction, currentIndex, totalItems) {\n  if (!(0,lib_dist_esm/* isDefined */.$K)(currentIndex)) return currentIndex;\n  switch (direction) {\n    case \'next\':\n      return (currentIndex + 1) % totalItems;\n    case \'prev\':\n      return (currentIndex - 1 + totalItems) % totalItems;\n    case \'last\':\n      return totalItems - 1;\n    case \'first\':\n    default:\n      return 0;\n  }\n}\n;// CONCATENATED MODULE: ./packages/menu/src/HighlightReducer/utils/getNextEnabled.ts\n\n\n\n/**\n * Finds the index of the subsequent `enabled` descendant element\n */\nfunction getNextEnabledIndex(direction, current, descendants) {\n  var _current$index;\n  // If all descendants are disabled, then we skip this step\n  if (descendants.every(function (d) {\n    return d.props.disabled;\n  })) {\n    return undefined;\n  }\n  var updatedIndex = getNextIndex(direction, (_current$index = current === null || current === void 0 ? void 0 : current.index) !== null && _current$index !== void 0 ? _current$index : 0, descendants.length);\n  var item = (0,esm/* getDescendantByIndex */.$X)(updatedIndex, descendants);\n\n  // If the subsequent item is disabled,\n  // keep searching in that direction for an enabled one\n  while ((_item = item) !== null && _item !== void 0 && _item.props.disabled) {\n    var _item;\n    // If the first/last item is disabled\n    // start the search in the forward/backward direction\n    var nextDirection = function () {\n      switch (direction) {\n        case \'first\':\n          return \'next\';\n        case \'last\':\n          return \'prev\';\n        default:\n          return direction;\n      }\n    }();\n    updatedIndex = getNextIndex(nextDirection, updatedIndex, descendants.length);\n    item = descendants[updatedIndex];\n  }\n  return updatedIndex;\n}\n;// CONCATENATED MODULE: ./packages/menu/src/HighlightReducer/utils/isDescendantsSet.ts\n\nvar isDescendantsSet = function isDescendantsSet(descendants) {\n  return (0,lib_dist_esm/* isDefined */.$K)(descendants) && descendants.length > 0;\n};\n;// CONCATENATED MODULE: ./packages/menu/src/HighlightReducer/utils/getNextFromDirection.ts\n\n\n\n\nvar getNextFromDirection = function getNextFromDirection(direction, current, descendants) {\n  // If descendants is not set\n  // then we don\'t mutate the index\n  if (!isDescendantsSet(descendants)) {\n    return current;\n  }\n  var updatedIndex = getNextEnabledIndex(direction, current, descendants);\n  if ((0,lib_dist_esm/* isDefined */.$K)(updatedIndex)) {\n    var nextDescendant = (0,esm/* getDescendantByIndex */.$X)(updatedIndex, descendants);\n    return nextDescendant;\n  }\n  return current;\n};\n;// CONCATENATED MODULE: ./packages/menu/src/HighlightReducer/HighlightReducer.ts\n\n\n\n\n\nvar getInitialHighlight = function getInitialHighlight(descendants) {\n  return isDescendantsSet(descendants) ? descendants[0] : undefined;\n};\n\n/**\n * Creates a new reducer function for closure for a given `descendants` value\n */\nvar makeHighlightReducerFunction = function makeHighlightReducerFunction(getDescendants) {\n  return function (currentHighlight, action) {\n    var descendants = getDescendants();\n\n    // If we\'ve received a direction, move the highlight\n    if (action.direction) {\n      var nextHighlight = getNextFromDirection(action.direction, currentHighlight, descendants);\n      return nextHighlight || currentHighlight;\n    } else if (action.index) {\n      var _nextHighlight = (0,esm/* getDescendantByIndex */.$X)(action.index, descendants);\n      return _nextHighlight;\n    } else if (action.id) {\n      var _nextHighlight2 = (0,esm/* getDescendantById */.iN)(action.id, descendants);\n      return _nextHighlight2;\n    }\n    return currentHighlight;\n  };\n};\n\n/**\n * Custom hook that handles setting the highlighted descendant index,\n * and fires any `onChange` side effects\n */\nvar useHighlightReducer = function useHighlightReducer(getDescendants, onChange) {\n  // Create a reducer function\n  var highlightReducerFunction = makeHighlightReducerFunction(getDescendants);\n\n  // Create the reducer\n  var _useReducer = (0,index_js_.useReducer)(highlightReducerFunction, getInitialHighlight(getDescendants())),\n    _useReducer2 = (0,slicedToArray/* default */.Z)(_useReducer, 2),\n    highlight = _useReducer2[0],\n    dispatch = _useReducer2[1];\n\n  /**\n   * Custom dispatch that moves the current highlight\n   * in a given direction\n   *\n   * Fires any side-effects in the `onChange` callback\n   */\n  var moveHighlight = function moveHighlight(direction) {\n    var updatedHighlight = highlightReducerFunction(highlight, {\n      direction: direction\n    });\n    onChange === null || onChange === void 0 ? void 0 : onChange(updatedHighlight);\n    dispatch({\n      direction: direction\n    });\n  };\n\n  /**\n   * Custom dispatch that sets the current highlight\n   * to a given `index` or `id`.\n   *\n   * Fires any side-effects in the `onChange` callback\n   */\n  var setHighlight = function setHighlight(indexOrId) {\n    var action = typeof indexOrId === \'string\' ? {\n      id: indexOrId\n    } : {\n      index: indexOrId\n    };\n    var updatedHighlight = highlightReducerFunction(highlight, action);\n    onChange === null || onChange === void 0 ? void 0 : onChange(updatedHighlight);\n    dispatch(action);\n  };\n  return {\n    highlight: highlight,\n    moveHighlight: moveHighlight,\n    setHighlight: setHighlight\n  };\n};\n;// CONCATENATED MODULE: ./packages/menu/src/HighlightReducer/index.ts\n\n// EXTERNAL MODULE: ./packages/menu/src/MenuContext/MenuContext.tsx\nvar MenuContext = __webpack_require__("./packages/menu/src/MenuContext/MenuContext.tsx");\n// EXTERNAL MODULE: ./node_modules/lodash/lodash.js\nvar lodash = __webpack_require__("./node_modules/lodash/lodash.js");\n;// CONCATENATED MODULE: ./packages/menu/src/Menu/utils/useMenuHeight.ts\n\n\n\nvar useMenuHeight = function useMenuHeight(_ref) {\n  var refEl = _ref.refEl,\n    spacing = _ref.spacing,\n    maxHeight = _ref.maxHeight;\n  // This hook causes a second re-render on initial load. `useAvailableSpace` uses `useViewportSize` internally, which has internal state that causes re-renders.\n  var availableSpace = (0,hooks_dist_esm/* useAvailableSpace */.Uu)(refEl, spacing);\n  var memoizedAvailableSpace = (0,index_js_.useMemo)(function () {\n    return availableSpace;\n  }, [availableSpace]);\n  var maxMenuHeightValue = !(0,lodash.isUndefined)(memoizedAvailableSpace) ? "".concat(Math.min(memoizedAvailableSpace, maxHeight), "px") : \'unset\';\n  return maxMenuHeightValue;\n};\n// EXTERNAL MODULE: ./packages/menu/node_modules/polished/dist/polished.esm.js\nvar polished_esm = __webpack_require__("./packages/menu/node_modules/polished/dist/polished.esm.js");\n// EXTERNAL MODULE: ./packages/palette/dist/esm/index.js\nvar palette_dist_esm = __webpack_require__("./packages/palette/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/tokens/dist/esm/index.js\nvar tokens_dist_esm = __webpack_require__("./packages/tokens/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/menu/src/styles.ts\nvar styles = __webpack_require__("./packages/menu/src/styles.ts");\n;// CONCATENATED MODULE: ./packages/menu/src/Menu/Menu.styles.ts\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4;\n\n\n\n\n\nvar getMenuStyles = function getMenuStyles(_ref) {\n  var theme = _ref.theme;\n  return (0,dist_esm.css)(_templateObject || (_templateObject = (0,taggedTemplateLiteral/* default */.Z)(["\\n    width: 210px;\\n    border-radius: ", "px;\\n    overflow: auto;\\n    // FIXME: Should this really be 14px?\\n    padding: ", "px 0;\\n\\n    background-color: ", ";\\n    border: 1px solid ", ";\\n\\n    /* // Light mode only */\\n    ", "\\n  "])), tokens_dist_esm/* spacing */.W0[300], tokens_dist_esm/* spacing */.W0[300] + tokens_dist_esm/* spacing */.W0[50], styles/* menuColor */.co[theme].background["default"], styles/* menuColor */.co[theme].border["default"], theme === \'light\' && (0,dist_esm.css)(_templateObject2 || (_templateObject2 = (0,taggedTemplateLiteral/* default */.Z)(["\\n      box-shadow: 0 2px 4px 1px ", ";\\n    "])), (0,polished_esm/* transparentize */.DZ)(0.85, palette_dist_esm/* palette */.D.black)));\n};\nvar scrollContainerStyle = (0,dist_esm.css)(_templateObject3 || (_templateObject3 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  overflow: auto;\\n  margin-block-start: 0px;\\n  margin-block-end: 0px;\\n  padding-inline-start: 0px;\\n  padding: 0px;\\n"])));\n\n// TODO: Remove dark-in-light mode styles\n// after https://jira.mongodb.org/browse/LG-3974\nvar getDarkInLightModeMenuStyles = function getDarkInLightModeMenuStyles() {\n  return (0,dist_esm.css)(_templateObject4 || (_templateObject4 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  box-shadow: unset;\\n  background-color: ", ";\\n  border: 1px solid ", ";\\n"])), tokens_dist_esm/* color */.$_.dark.background.primary["default"], tokens_dist_esm/* color */.$_.dark.border.primary["default"]);\n};\n;// CONCATENATED MODULE: ./packages/menu/src/Menu/Menu.tsx\n\n\n\n\n\nvar Menu_templateObject;\nvar _excluded = ["align", "justify", "adjustOnMutation", "shouldClose", "spacing", "maxHeight", "usePortal", "initialOpen", "open", "setOpen", "darkMode", "renderDarkMenu", "children", "className", "refEl", "trigger", "portalClassName", "portalContainer", "portalRef", "scrollContainer", "popoverZIndex"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0,defineProperty/* default */.Z)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n *\n * Menus are used when a user needs to take an action.\n *\n * In a menu a user takes an action (like copy/delete a property or navigate to a different section/screen).\n *\n * @param props.children Content to appear inside of Menu.\n * @param props.open Boolean to describe whether or not Menu is open.\n * @param props.setOpen Callback to change the open state of the Menu.\n * @param props.shouldClose Callback to determine whether or not Menu should close when user tries to close it.\n * @param props.className Classname applied to Menu.\n * @param props.align Alignment of Menu relative to another element: `top`, `bottom`, `left`, `right`.\n * @param props.justify Justification of Menu relative to another element: `start`, `middle`, `end`.\n * @param props.refEl Reference element that Menu should be positioned against.\n * @param props.usePortal Boolean to describe if content should be portaled to end of DOM, or appear in DOM tree.\n * @param props.trigger Trigger element can be ReactNode or function, and, if present, internally manages active state of Menu.\n * @param props.darkMode Determines whether or not the component will be rendered in dark theme.\n */\nvar Menu = /*#__PURE__*/index_js_default().forwardRef(function Menu(_ref, forwardRef) {\n  var _ref$align = _ref.align,\n    align = _ref$align === void 0 ? popover_dist_esm/* Align */.xM.Bottom : _ref$align,\n    _ref$justify = _ref.justify,\n    justify = _ref$justify === void 0 ? popover_dist_esm/* Justify */.WD.End : _ref$justify,\n    _ref$adjustOnMutation = _ref.adjustOnMutation,\n    adjustOnMutation = _ref$adjustOnMutation === void 0 ? false : _ref$adjustOnMutation,\n    _ref$shouldClose = _ref.shouldClose,\n    shouldClose = _ref$shouldClose === void 0 ? function () {\n      return true;\n    } : _ref$shouldClose,\n    _ref$spacing = _ref.spacing,\n    spacing = _ref$spacing === void 0 ? 6 : _ref$spacing,\n    _ref$maxHeight = _ref.maxHeight,\n    maxHeight = _ref$maxHeight === void 0 ? 344 : _ref$maxHeight,\n    _ref$usePortal = _ref.usePortal,\n    usePortal = _ref$usePortal === void 0 ? true : _ref$usePortal,\n    _ref$initialOpen = _ref.initialOpen,\n    initialOpen = _ref$initialOpen === void 0 ? false : _ref$initialOpen,\n    controlledOpen = _ref.open,\n    controlledSetOpen = _ref.setOpen,\n    darkModeProp = _ref.darkMode,\n    _ref$renderDarkMenu = _ref.renderDarkMenu,\n    renderDarkMenu = _ref$renderDarkMenu === void 0 ? true : _ref$renderDarkMenu,\n    children = _ref.children,\n    className = _ref.className,\n    refEl = _ref.refEl,\n    trigger = _ref.trigger,\n    portalClassName = _ref.portalClassName,\n    portalContainer = _ref.portalContainer,\n    portalRef = _ref.portalRef,\n    scrollContainer = _ref.scrollContainer,\n    popoverZIndex = _ref.popoverZIndex,\n    rest = (0,objectWithoutProperties/* default */.Z)(_ref, _excluded);\n  var _useDarkMode = (0,leafygreen_provider_dist_esm/* useDarkMode */.vs)(darkModeProp),\n    theme = _useDarkMode.theme,\n    darkMode = _useDarkMode.darkMode;\n  var popoverRef = (0,index_js_.useRef)(null);\n  var triggerRef = (0,index_js_.useRef)(null);\n  var _useState = (0,index_js_.useState)(initialOpen),\n    _useState2 = (0,slicedToArray/* default */.Z)(_useState, 2),\n    uncontrolledOpen = _useState2[0],\n    uncontrolledSetOpen = _useState2[1];\n  var setOpen = typeof controlledOpen === \'boolean\' && controlledSetOpen || uncontrolledSetOpen;\n  var open = controlledOpen !== null && controlledOpen !== void 0 ? controlledOpen : uncontrolledOpen;\n  var handleClose = (0,index_js_.useCallback)(function () {\n    if (shouldClose()) {\n      setOpen(false);\n    }\n  }, [setOpen, shouldClose]);\n  var maxMenuHeightValue = useMenuHeight({\n    refEl: refEl || triggerRef,\n    spacing: spacing,\n    maxHeight: maxHeight\n  });\n  (0,hooks_dist_esm/* useBackdropClick */.Sj)(handleClose, [popoverRef, triggerRef], open);\n  var _useInitDescendants = (0,esm/* useInitDescendants */.Ds)(),\n    descendants = _useInitDescendants.descendants,\n    dispatch = _useInitDescendants.dispatch,\n    getDescendants = _useInitDescendants.getDescendants;\n\n  // Tracks the currently highlighted (focused) item index\n  // Fires `.focus()` when the index is updated\n  var _useHighlightReducer = useHighlightReducer(getDescendants, function (_next) {\n      if ((0,lib_dist_esm/* isDefined */.$K)(_next)) {\n        var nextDescendant = (0,esm/* getDescendantById */.iN)(_next.id, getDescendants());\n        var descendantElement = nextDescendant === null || nextDescendant === void 0 ? void 0 : nextDescendant.ref.current;\n        descendantElement === null || descendantElement === void 0 ? void 0 : descendantElement.focus();\n      }\n    }),\n    highlight = _useHighlightReducer.highlight,\n    moveHighlight = _useHighlightReducer.moveHighlight,\n    setHighlight = _useHighlightReducer.setHighlight;\n\n  // Callback fired when the popover transition finishes.\n  // Handling on this event ensures that the `descendants` elements\n  // exist in the DOM before attempting to set `focus`\n  var handlePopoverOpen = function handlePopoverOpen() {\n    moveHighlight(\'first\');\n  };\n\n  // Fired on global keyDown event\n  function handleKeyDown(e) {\n    var _ref2, _ref3;\n    switch (e.key) {\n      case lib_dist_esm/* keyMap */.Pc.ArrowDown:\n        e.preventDefault(); // Prevents page scrolling\n        moveHighlight(\'next\');\n        break;\n      case lib_dist_esm/* keyMap */.Pc.ArrowUp:\n        e.preventDefault(); // Prevents page scrolling\n        moveHighlight(\'prev\');\n        break;\n      case lib_dist_esm/* keyMap */.Pc.Tab:\n        e.preventDefault(); // Prevent tabbing outside of portal and outside of the DOM when `usePortal={true}`\n        handleClose();\n        (_ref2 = refEl || triggerRef) === null || _ref2 === void 0 || (_ref2 = _ref2.current) === null || _ref2 === void 0 ? void 0 : _ref2.focus(); // Focus the trigger on close\n        break;\n      case lib_dist_esm/* keyMap */.Pc.Escape:\n        handleClose();\n        (_ref3 = refEl || triggerRef) === null || _ref3 === void 0 || (_ref3 = _ref3.current) === null || _ref3 === void 0 ? void 0 : _ref3.focus(); // Focus the trigger on close\n        break;\n      case lib_dist_esm/* keyMap */.Pc.Space:\n      case lib_dist_esm/* keyMap */.Pc.Enter:\n        if (!open) {\n          moveHighlight(\'first\');\n        }\n        break;\n    }\n  }\n  (0,hooks_dist_esm/* useEventListener */.OR)(\'keydown\', handleKeyDown, {\n    enabled: open\n  });\n  var popoverProps = _objectSpread({\n    popoverZIndex: popoverZIndex\n  }, usePortal ? {\n    spacing: spacing,\n    usePortal: usePortal,\n    portalClassName: portalClassName,\n    portalContainer: portalContainer,\n    portalRef: portalRef,\n    scrollContainer: scrollContainer\n  } : {\n    spacing: spacing,\n    usePortal: usePortal\n  });\n  var popoverContent = /*#__PURE__*/index_js_default().createElement(esm/* DescendantsProvider */.nB, {\n    context: MenuContext/* MenuDescendantsContext */.k0,\n    descendants: descendants,\n    dispatch: dispatch\n  }, /*#__PURE__*/index_js_default().createElement(MenuContext/* MenuContext */.pl.Provider, {\n    value: {\n      theme: theme,\n      darkMode: darkMode,\n      highlight: highlight,\n      setHighlight: setHighlight,\n      renderDarkMenu: renderDarkMenu\n    }\n  }, /*#__PURE__*/index_js_default().createElement(popover_dist_esm/* default */.ZP, (0,esm_extends/* default */.Z)({\n    key: "popover",\n    active: open,\n    align: align,\n    justify: justify,\n    refEl: refEl,\n    adjustOnMutation: adjustOnMutation,\n    onEntered: handlePopoverOpen,\n    "data-testid": constants/* LGIDs */.l.root,\n    "data-lgid": constants/* LGIDs */.l.root\n  }, popoverProps), /*#__PURE__*/index_js_default().createElement("div", {\n    "data-theme": theme,\n    className: (0,dist_esm.cx)(getMenuStyles({\n      theme: theme\n    }), (0,dist_esm.css)(Menu_templateObject || (Menu_templateObject = (0,taggedTemplateLiteral/* default */.Z)(["\\n                max-height: ", ";\\n              "])), maxMenuHeightValue), (0,defineProperty/* default */.Z)({}, getDarkInLightModeMenuStyles(), theme === lib_dist_esm/* Theme */.Q2.Light && renderDarkMenu), className),\n    ref: forwardRef\n  }, /*#__PURE__*/index_js_default().createElement("ul", (0,esm_extends/* default */.Z)({}, rest, {\n    className: scrollContainerStyle,\n    role: "menu",\n    onClick: function onClick(e) {\n      return e.stopPropagation();\n    },\n    ref: popoverRef\n  }), children)))));\n  if (trigger) {\n    var triggerClickHandler = function triggerClickHandler(event) {\n      var _event$nativeEvent, _event$nativeEvent$st;\n      event === null || event === void 0 ? void 0 : event.preventDefault();\n      setOpen(function (curr) {\n        return !curr;\n      });\n      if (trigger && typeof trigger !== \'function\') {\n        var _trigger$props, _trigger$props$onClic;\n        (_trigger$props = trigger.props) === null || _trigger$props === void 0 || (_trigger$props$onClic = _trigger$props.onClick) === null || _trigger$props$onClic === void 0 ? void 0 : _trigger$props$onClic.call(_trigger$props, event);\n      }\n\n      // We stop the native event from bubbling, but allow the React.Synthetic event to bubble\n      // This way click handlers on parent components will still fire,\n      // but this click event won\'t propagate up to the document and immediately close the menu.\n      event === null || event === void 0 || (_event$nativeEvent = event.nativeEvent) === null || _event$nativeEvent === void 0 || (_event$nativeEvent$st = _event$nativeEvent.stopPropagation) === null || _event$nativeEvent$st === void 0 ? void 0 : _event$nativeEvent$st.call(_event$nativeEvent);\n    };\n    if (typeof trigger === \'function\') {\n      return trigger((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({\n        onClick: triggerClickHandler,\n        ref: triggerRef,\n        children: popoverContent\n      }, \'aria-expanded\', open), \'aria-haspopup\', true));\n    }\n    var renderedTrigger = /*#__PURE__*/index_js_default().cloneElement(trigger, (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({\n      ref: triggerRef,\n      onClick: triggerClickHandler,\n      children: /*#__PURE__*/index_js_default().createElement((index_js_default()).Fragment, null, trigger.props.children, popoverContent)\n    }, \'aria-expanded\', open), \'aria-haspopup\', true));\n    return renderedTrigger;\n  }\n  return popoverContent;\n});\nMenu.displayName = \'Menu\';\nMenu.propTypes = {\n  children: (prop_types_default()).node,\n  className: (prop_types_default()).string,\n  align: prop_types_default().oneOf(Object.values(popover_dist_esm/* Align */.xM)),\n  justify: prop_types_default().oneOf(Object.values(popover_dist_esm/* Justify */.WD)),\n  refEl: prop_types_default().shape({\n    current: typeof window !== \'undefined\' ? prop_types_default().instanceOf(Element) : (prop_types_default()).any\n  }),\n  portalRef: prop_types_default().shape({\n    current: typeof window !== \'undefined\' ? prop_types_default().instanceOf(Element) : (prop_types_default()).any\n  }),\n  usePortal: (prop_types_default()).bool,\n  trigger: prop_types_default().oneOfType([(prop_types_default()).node, (prop_types_default()).func]),\n  open: (prop_types_default()).bool,\n  setOpen: (prop_types_default()).func,\n  darkMode: (prop_types_default()).bool\n};\n/* harmony default export */ const Menu_Menu = (Menu);\n;// CONCATENATED MODULE: ./packages/menu/src/Menu/index.ts\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/menu/src/Menu/index.ts\n')}}]);