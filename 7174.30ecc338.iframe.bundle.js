(self.webpackChunkleafygreen_ui=self.webpackChunkleafygreen_ui||[]).push([[7174],{"./packages/a11y/dist/esm/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Lk: () => (/* binding */ b),\n/* harmony export */   TX: () => (/* binding */ w),\n/* harmony export */   Tb: () => (/* binding */ y),\n/* harmony export */   nk: () => (/* binding */ d)\n/* harmony export */ });\n/* unused harmony export useAccessibleForm */\n/* harmony import */ var _leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/emotion/dist/esm/index.js");\n/* harmony import */ var _leafygreen_ui_hooks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/hooks/dist/esm/index.js");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("webpack/sharing/consume/default/react/react");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\n\nfunction l(r, e) {\n  e > r.length && (e = r.length);\n  for (var n = 0, t = Array(e); n < e; n++) t[n] = r[n];\n  return t;\n}\nfunction u(r, e, n) {\n  return (e = function (r) {\n    var e = function (r, e) {\n      if ("object" != _typeof(r) || !r) return r;\n      var n = r[Symbol.toPrimitive];\n      if (void 0 !== n) {\n        var t = n.call(r, e);\n        if ("object" != _typeof(t)) return t;\n        throw new TypeError("@@toPrimitive must return a primitive value.");\n      }\n      return String(r);\n    }(r, "string");\n    return "symbol" == _typeof(e) ? e : e + "";\n  }(e)) in r ? Object.defineProperty(r, e, {\n    value: n,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : r[e] = n, r;\n}\nfunction c() {\n  return c = Object.assign ? Object.assign.bind() : function (r) {\n    for (var e = 1; e < arguments.length; e++) {\n      var n = arguments[e];\n      for (var t in n) ({}).hasOwnProperty.call(n, t) && (r[t] = n[t]);\n    }\n    return r;\n  }, c.apply(null, arguments);\n}\nfunction f(r, e) {\n  return function (r) {\n    if (Array.isArray(r)) return r;\n  }(r) || function (r, e) {\n    var n = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];\n    if (null != n) {\n      var t,\n        i,\n        o,\n        a,\n        l = [],\n        u = !0,\n        c = !1;\n      try {\n        if (o = (n = n.call(r)).next, 0 === e) ;else for (; !(u = (t = o.call(n)).done) && (l.push(t.value), l.length !== e); u = !0);\n      } catch (r) {\n        c = !0, i = r;\n      } finally {\n        try {\n          if (!u && null != n["return"] && (a = n["return"](), Object(a) !== a)) return;\n        } finally {\n          if (c) throw i;\n        }\n      }\n      return l;\n    }\n  }(r, e) || function (r, e) {\n    if (r) {\n      if ("string" == typeof r) return l(r, e);\n      var n = {}.toString.call(r).slice(8, -1);\n      return "Object" === n && r.constructor && (n = r.constructor.name), "Map" === n || "Set" === n ? Array.from(r) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? l(r, e) : void 0;\n    }\n  }(r, e) || function () {\n    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n  }();\n}\nfunction s(r, e) {\n  return e || (e = r.slice(0)), Object.freeze(Object.defineProperties(r, {\n    raw: {\n      value: Object.freeze(e)\n    }\n  }));\n}\nvar p;\nfunction d(e) {\n  return null != e && "string" == typeof e ? (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_0__.css)(p || (p = s(["\\n      @media (prefers-reduced-motion: reduce) {\\n        ", "\\n      }\\n    "])), e) : "";\n}\nvar m = function m(r) {\n  var e = n({\n      prefix: "lgui-input",\n      id: r\n    }),\n    t = n({\n      prefix: "lgui-label"\n    });\n  return {\n    labelProps: {\n      id: t,\n      htmlFor: e\n    },\n    inputProps: u({\n      id: e\n    }, "aria-labelledby", t)\n  };\n};\nfunction y() {\n  var r = f((0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(!1), 2),\n    e = r[0],\n    n = r[1],\n    t = function t(r) {\n      n(r.matches);\n    };\n  return (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(function () {\n    if (window && window.matchMedia && "function" == typeof window.matchMedia) {\n      var r = window.matchMedia("(prefers-reduced-motion: reduce)");\n      return n(r.matches), r.addEventListener("change", t), function () {\n        return r.removeEventListener("change", t);\n      };\n    }\n  }, []), e;\n}\nfunction b(r, e) {\n  r["aria-label"] || r["aria-labelledby"] || console.error("For screen-reader accessibility, aria-label or aria-labelledby must be provided".concat(e ? " to ".concat(e) : "", "."));\n}\nvar v,\n  h = ["children", "className"],\n  g = (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_0__.css)(v || (v = s(["\\n  clip: rect(0, 0, 0, 0);\\n  clip-path: inset(50%);\\n  height: 1px;\\n  width: 1px;\\n  margin: -1px;\\n  overflow: hidden;\\n  padding: 0;\\n  position: absolute;\\n"])));\nfunction w(r) {\n  var n = r.children,\n    i = r.className,\n    o = function (r, e) {\n      if (null == r) return {};\n      var n,\n        t,\n        i = function (r, e) {\n          if (null == r) return {};\n          var n = {};\n          for (var t in r) if ({}.hasOwnProperty.call(r, t)) {\n            if (e.indexOf(t) >= 0) continue;\n            n[t] = r[t];\n          }\n          return n;\n        }(r, e);\n      if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(r);\n        for (t = 0; t < o.length; t++) n = o[t], e.indexOf(n) >= 0 || {}.propertyIsEnumerable.call(r, n) && (i[n] = r[n]);\n      }\n      return i;\n    }(r, h);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement("div", c({}, o, {\n    className: (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_0__.cx)(g, i)\n  }), n);\n}\nw.displayName = "VisuallyHidden", w.propTypes =  false ? 0 : {};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/a11y/dist/esm/index.js\n')},"./packages/descendants/dist/esm/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   $X: () => (/* binding */ v),\n/* harmony export */   Ds: () => (/* binding */ D),\n/* harmony export */   Jo: () => (/* binding */ E),\n/* harmony export */   Pv: () => (/* binding */ d),\n/* harmony export */   Yf: () => (/* binding */ S),\n/* harmony export */   iN: () => (/* binding */ y),\n/* harmony export */   nB: () => (/* binding */ s)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/typeof.js");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("webpack/sharing/consume/default/react/react");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _leafygreen_ui_hooks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/hooks/dist/esm/index.js");\n/* harmony import */ var lodash_isEqual__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/lodash/isEqual.js");\n/* harmony import */ var lodash_isEqual__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_isEqual__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var lodash_isUndefined__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/lodash/isUndefined.js");\n/* harmony import */ var lodash_isUndefined__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_isUndefined__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n\nvar s = function s(n) {\n    var e = n.context,\n      i = n.children,\n      o = n.descendants,\n      u = n.dispatch,\n      c = e.Provider,\n      a = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {\n        return {\n          descendants: o,\n          dispatch: u\n        };\n      }, [o, u]);\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(c, {\n      value: a\n    }, i);\n  },\n  d = function d(r) {\n    var t = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({\n      descendants: [],\n      dispatch: function dispatch() {}\n    });\n    return t.displayName = null != r ? r : "DescendantsContext", t;\n  };\nfunction p(r, t) {\n  return r.findIndex(function (r) {\n    return r.id === t;\n  });\n}\nvar y = function y(r, t) {\n    return t.find(function (t) {\n      return t.id === r;\n    });\n  },\n  v = function v(r, t) {\n    return t[r];\n  };\nfunction m(r, t) {\n  (null == t || t > r.length) && (t = r.length);\n  for (var n = 0, e = Array(t); n < t; n++) e[n] = r[n];\n  return e;\n}\nfunction b(r, t, n) {\n  return (t = function (r) {\n    var t = function (r, t) {\n      if ("object" != (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(r) || !r) return r;\n      var n = r[Symbol.toPrimitive];\n      if (void 0 !== n) {\n        var e = n.call(r, t);\n        if ("object" != (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(e)) return e;\n        throw new TypeError("@@toPrimitive must return a primitive value.");\n      }\n      return String(r);\n    }(r, "string");\n    return "symbol" == (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(t) ? t : t + "";\n  }(t)) in r ? Object.defineProperty(r, t, {\n    value: n,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : r[t] = n, r;\n}\nfunction h(r, t) {\n  var n = Object.keys(r);\n  if (Object.getOwnPropertySymbols) {\n    var e = Object.getOwnPropertySymbols(r);\n    t && (e = e.filter(function (t) {\n      return Object.getOwnPropertyDescriptor(r, t).enumerable;\n    })), n.push.apply(n, e);\n  }\n  return n;\n}\nfunction g(r) {\n  for (var t = 1; t < arguments.length; t++) {\n    var n = null != arguments[t] ? arguments[t] : {};\n    t % 2 ? h(Object(n), !0).forEach(function (t) {\n      b(r, t, n[t]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(r, Object.getOwnPropertyDescriptors(n)) : h(Object(n)).forEach(function (t) {\n      Object.defineProperty(r, t, Object.getOwnPropertyDescriptor(n, t));\n    });\n  }\n  return r;\n}\nfunction O(r, t) {\n  return function (r) {\n    if (Array.isArray(r)) return r;\n  }(r) || function (r, t) {\n    var n = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];\n    if (null != n) {\n      var e,\n        i,\n        o,\n        u,\n        c = [],\n        a = !0,\n        f = !1;\n      try {\n        if (o = (n = n.call(r)).next, 0 === t) ;else for (; !(a = (e = o.call(n)).done) && (c.push(e.value), c.length !== t); a = !0);\n      } catch (r) {\n        f = !0, i = r;\n      } finally {\n        try {\n          if (!a && null != n["return"] && (u = n["return"](), Object(u) !== u)) return;\n        } finally {\n          if (f) throw i;\n        }\n      }\n      return c;\n    }\n  }(r, t) || w(r, t) || function () {\n    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n  }();\n}\nfunction j(r) {\n  return function (r) {\n    if (Array.isArray(r)) return m(r);\n  }(r) || function (r) {\n    if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);\n  }(r) || w(r) || function () {\n    throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n  }();\n}\nfunction w(r, t) {\n  if (r) {\n    if ("string" == typeof r) return m(r, t);\n    var n = {}.toString.call(r).slice(8, -1);\n    return "Object" === n && r.constructor && (n = r.constructor.name), "Map" === n || "Set" === n ? Array.from(r) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? m(r, t) : void 0;\n  }\n}\nvar P = function P(r) {\n  return r.map(function (r, t) {\n    return g(g({}, r), {}, {\n      index: t\n    });\n  });\n};\nvar S = function S(r, n, o) {\n    var a = (0,_leafygreen_ui_hooks__WEBPACK_IMPORTED_MODULE_1__/* .useForwardedRef */ .ts)(null != n ? n : null, null),\n      f = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(r),\n      l = f.descendants,\n      s = f.dispatch,\n      d = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)("_".concat(Math.random().toString(36).substr(2, 9))),\n      y = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {\n        return p(l, d.current);\n      }, [l]);\n    return (0,_leafygreen_ui_hooks__WEBPACK_IMPORTED_MODULE_1__/* .useIsomorphicLayoutEffect */ .LI)(function () {\n      var r = d.current;\n      return document.contains(a.current) && s({\n        type: "register",\n        id: r,\n        ref: a\n      }), function () {\n        s({\n          type: "remove",\n          id: r\n        });\n      };\n    }, [s, a]), (0,_leafygreen_ui_hooks__WEBPACK_IMPORTED_MODULE_1__/* .useIsomorphicLayoutEffect */ .LI)(function () {\n      s({\n        type: "update",\n        id: d.current,\n        props: o\n      });\n    }, [s, o]), {\n      ref: a,\n      index: y,\n      id: d.current\n    };\n  },\n  E = function E(r) {\n    return {\n      descendants: (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(r).descendants\n    };\n  },\n  A = function A(r, t) {\n    switch (t.type) {\n      case "register":\n        if (!t.ref.current) return r;\n        if (!(p(r, t.id) >= 0)) {\n          var n = t.ref.current,\n            e = function (r, t) {\n              if (!r) return -1;\n              if (0 === t.length) return 0;\n              for (var n = t.length - 1; n >= 0; n--) {\n                var e = t[n],\n                  i = e.element;\n                if (e) {\n                  if (i === r) return n;\n                  if (o = i, Boolean(r.compareDocumentPosition(o) & Node.DOCUMENT_POSITION_PRECEDING)) return n + 1;\n                }\n              }\n              var o;\n              return 0;\n            }(n, r),\n            i = function (r, t, n) {\n              if (null == n || !(n in r)) return [].concat(j(r), [t]);\n              var e = r.slice(0, n),\n                i = r.slice(n);\n              return [].concat(j(e), [t], j(i));\n            }(r, {\n              ref: t.ref,\n              element: n,\n              id: t.id,\n              props: t.props,\n              index: e\n            }, e);\n          return P(i);\n        }\n        return r;\n      case "update":\n        var o = p(r, t.id);\n        if (o >= 0) {\n          var u = r[o],\n            c = lodash_isEqual__WEBPACK_IMPORTED_MODULE_2___default()(u.props, t.props);\n          if (!lodash_isUndefined__WEBPACK_IMPORTED_MODULE_3___default()(t.props) && !c) return u.props = t.props, r;\n        }\n        return r;\n      case "remove":\n        var a = p(r, t.id);\n        if (a >= 0) {\n          var s = function (r, t) {\n            if (null == t || r && !(t in r)) return j(r);\n            var n = r.slice(0, t),\n              e = r.slice(t + 1);\n            return [].concat(j(n), j(e));\n          }(r, a);\n          return P(s);\n        }\n        return r;\n    }\n    return r;\n  },\n  D = function D() {\n    var r = O((0,_leafygreen_ui_hooks__WEBPACK_IMPORTED_MODULE_1__/* .useStateRef */ .YM)([]), 3),\n      t = r[0],\n      n = r[1],\n      e = r[2],\n      i = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (r) {\n        var t = A(e(), r);\n        n(t);\n      }, [e, n]);\n    return {\n      descendants: t,\n      dispatch: i,\n      getDescendants: e\n    };\n  };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/descendants/dist/esm/index.js\n')},"./packages/tabs/src/Tab/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  Z: () => (/* reexport */ Tab_Tab)\n});\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\nvar objectWithoutProperties = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js");\n// EXTERNAL MODULE: consume shared module (default) react@^17.0.2 (singleton) (fallback: ./node_modules/react/index.js)\nvar index_js_ = __webpack_require__("webpack/sharing/consume/default/react/react");\nvar index_js_default = /*#__PURE__*/__webpack_require__.n(index_js_);\n;// CONCATENATED MODULE: ./packages/tabs/src/Tab/Tab.tsx\n\nvar _excluded = ["children"];\n\n\n/**\n * # Tab\n *\n * Tab panel component\n *\n * ```\n  <Tab name=\'First Tab\'>Tab 1</Tab>\n```\n * @param props.children Content that will appear inside of Tab panel.\n * @param props.className Adds a className to the root element.\n * @param props.default If Tabs component is uncontrolled, this determines what Tab will be selected on first render.\n * @param props.disabled Boolean that determines if the Tab is disabled.\n * @param props.name Name that will appear in Tab List.\n * @param props.href Destination when name is rendered as `a` tag.\n * @param props.selected Whether this tab is currently selected\n * @param props.to Destination when name is rendered as `Link` tag.\n *\n */\nfunction Tab(_ref) {\n  var children = _ref.children,\n    rest = (0,objectWithoutProperties/* default */.Z)(_ref, _excluded);\n  // default and name are not an HTML properties\n  // onClick applies to TabTitle component, not Tab component\n  delete rest["default"], delete rest.name, delete rest.onClick, delete rest.href;\n  return /*#__PURE__*/index_js_default().createElement("div", rest, children);\n}\nTab.displayName = \'Tab\';\nTab.propTypes =  false ? 0 : {};\n/* harmony default export */ const Tab_Tab = (Tab);\n;// CONCATENATED MODULE: ./packages/tabs/src/Tab/index.ts\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy90YWJzL3NyYy9UYWIvaW5kZXgudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBMEI7QUFDUztBQUluQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTRSxHQUFHQSxDQUFBQyxJQUFBLEVBQWtDO0VBQUEsSUFBL0JDLFFBQVEsR0FBQUQsSUFBQSxDQUFSQyxRQUFRO0lBQUtDLElBQUksR0FBQUMsMENBQUEsQ0FBQUgsSUFBQSxFQUFBSSxTQUFBO0VBQzlCO0VBQ0E7RUFDQSxPQUFPRixJQUFJLFdBQVEsRUFBRSxPQUFPQSxJQUFJLENBQUNHLElBQUksRUFBRSxPQUFPSCxJQUFJLENBQUNJLE9BQU8sRUFBRSxPQUFPSixJQUFJLENBQUNLLElBQUk7RUFFNUUsb0JBQU9WLGdDQUFBLFFBQVNLLElBQUksRUFBR0QsUUFBYyxDQUFDO0FBQ3hDO0FBRUFGLEdBQUcsQ0FBQ1UsV0FBVyxHQUFHLEtBQUs7QUFFdkJWLEdBQUcsQ0FBQ1csU0FBUyxHQUFBQyxNQUFBLEdBQUcsQ0FTZjtBQUVELDhDQUFlWixHQUFHLEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWFmeWdyZWVuLXVpLy4vcGFja2FnZXMvdGFicy9zcmMvVGFiL1RhYi50c3g/OTc1MyIsIndlYnBhY2s6Ly9sZWFmeWdyZWVuLXVpLy4vcGFja2FnZXMvdGFicy9zcmMvVGFiL2luZGV4LnRzPzJmNGMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5cbmltcG9ydCB7IFRhYlByb3BzIH0gZnJvbSAnLi9UYWIudHlwZXMnO1xuXG4vKipcbiAqICMgVGFiXG4gKlxuICogVGFiIHBhbmVsIGNvbXBvbmVudFxuICpcbiAqIGBgYFxuICA8VGFiIG5hbWU9J0ZpcnN0IFRhYic+VGFiIDE8L1RhYj5cbmBgYFxuICogQHBhcmFtIHByb3BzLmNoaWxkcmVuIENvbnRlbnQgdGhhdCB3aWxsIGFwcGVhciBpbnNpZGUgb2YgVGFiIHBhbmVsLlxuICogQHBhcmFtIHByb3BzLmNsYXNzTmFtZSBBZGRzIGEgY2xhc3NOYW1lIHRvIHRoZSByb290IGVsZW1lbnQuXG4gKiBAcGFyYW0gcHJvcHMuZGVmYXVsdCBJZiBUYWJzIGNvbXBvbmVudCBpcyB1bmNvbnRyb2xsZWQsIHRoaXMgZGV0ZXJtaW5lcyB3aGF0IFRhYiB3aWxsIGJlIHNlbGVjdGVkIG9uIGZpcnN0IHJlbmRlci5cbiAqIEBwYXJhbSBwcm9wcy5kaXNhYmxlZCBCb29sZWFuIHRoYXQgZGV0ZXJtaW5lcyBpZiB0aGUgVGFiIGlzIGRpc2FibGVkLlxuICogQHBhcmFtIHByb3BzLm5hbWUgTmFtZSB0aGF0IHdpbGwgYXBwZWFyIGluIFRhYiBMaXN0LlxuICogQHBhcmFtIHByb3BzLmhyZWYgRGVzdGluYXRpb24gd2hlbiBuYW1lIGlzIHJlbmRlcmVkIGFzIGBhYCB0YWcuXG4gKiBAcGFyYW0gcHJvcHMuc2VsZWN0ZWQgV2hldGhlciB0aGlzIHRhYiBpcyBjdXJyZW50bHkgc2VsZWN0ZWRcbiAqIEBwYXJhbSBwcm9wcy50byBEZXN0aW5hdGlvbiB3aGVuIG5hbWUgaXMgcmVuZGVyZWQgYXMgYExpbmtgIHRhZy5cbiAqXG4gKi9cbmZ1bmN0aW9uIFRhYih7IGNoaWxkcmVuLCAuLi5yZXN0IH06IFRhYlByb3BzKSB7XG4gIC8vIGRlZmF1bHQgYW5kIG5hbWUgYXJlIG5vdCBhbiBIVE1MIHByb3BlcnRpZXNcbiAgLy8gb25DbGljayBhcHBsaWVzIHRvIFRhYlRpdGxlIGNvbXBvbmVudCwgbm90IFRhYiBjb21wb25lbnRcbiAgZGVsZXRlIHJlc3QuZGVmYXVsdCwgZGVsZXRlIHJlc3QubmFtZSwgZGVsZXRlIHJlc3Qub25DbGljaywgZGVsZXRlIHJlc3QuaHJlZjtcblxuICByZXR1cm4gPGRpdiB7Li4ucmVzdH0+e2NoaWxkcmVufTwvZGl2Pjtcbn1cblxuVGFiLmRpc3BsYXlOYW1lID0gJ1RhYic7XG5cblRhYi5wcm9wVHlwZXMgPSB7XG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBkZWZhdWx0OiBQcm9wVHlwZXMuYm9vbCxcbiAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sLFxuICBocmVmOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBuYW1lOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMubm9kZV0pLFxuICBzZWxlY3RlZDogUHJvcFR5cGVzLmJvb2wsXG4gIHRvOiBQcm9wVHlwZXMuc3RyaW5nLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgVGFiO1xuIiwiZXhwb3J0IHsgZGVmYXVsdCB9IGZyb20gJy4vVGFiJztcbmV4cG9ydCB0eXBlIHsgVGFiUHJvcHMgfSBmcm9tICcuL1RhYi50eXBlcyc7XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJQcm9wVHlwZXMiLCJUYWIiLCJfcmVmIiwiY2hpbGRyZW4iLCJyZXN0IiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIiwiX2V4Y2x1ZGVkIiwibmFtZSIsIm9uQ2xpY2siLCJocmVmIiwiY3JlYXRlRWxlbWVudCIsImRpc3BsYXlOYW1lIiwicHJvcFR5cGVzIiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwibm9kZSIsImNsYXNzTmFtZSIsInN0cmluZyIsImJvb2wiLCJkaXNhYmxlZCIsIm9uZU9mVHlwZSIsInNlbGVjdGVkIiwidG8iLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./packages/tabs/src/Tab/index.ts\n')},"./packages/tabs/src/Tabs/Tabs.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  Z: () => (/* binding */ Tabs_Tabs)\n});\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js\nvar esm_extends = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/extends.js");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js + 2 modules\nvar defineProperty = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 3 modules\nvar slicedToArray = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\nvar objectWithoutProperties = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js");\n// EXTERNAL MODULE: consume shared module (default) react@^17.0.2 (singleton) (fallback: ./node_modules/react/index.js)\nvar index_js_ = __webpack_require__("webpack/sharing/consume/default/react/react");\nvar index_js_default = /*#__PURE__*/__webpack_require__.n(index_js_);\n// EXTERNAL MODULE: ./packages/a11y/dist/esm/index.js\nvar esm = __webpack_require__("./packages/a11y/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/descendants/dist/esm/index.js\nvar dist_esm = __webpack_require__("./packages/descendants/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/emotion/dist/esm/index.js\nvar emotion_dist_esm = __webpack_require__("./packages/emotion/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/hooks/dist/esm/index.js\nvar hooks_dist_esm = __webpack_require__("./packages/hooks/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/leafygreen-provider/dist/esm/index.js\nvar leafygreen_provider_dist_esm = __webpack_require__("./packages/leafygreen-provider/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/lib/dist/esm/index.js\nvar lib_dist_esm = __webpack_require__("./packages/lib/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/typography/dist/esm/index.js\nvar typography_dist_esm = __webpack_require__("./packages/typography/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/tabs/src/constants.ts\nvar constants = __webpack_require__("./packages/tabs/src/constants.ts");\n;// CONCATENATED MODULE: ./packages/tabs/src/context/TabDescendantsContext.ts\n\nvar TabDescendantsContext = (0,dist_esm/* createDescendantsContext */.Pv)(\'TabDescendantsContext\');\n\n/**\n * Access list of tab descendants\n */\nfunction useTabDescendantsContext() {\n  var _useDescendantsContex = (0,dist_esm/* useDescendantsContext */.Jo)(TabDescendantsContext),\n    descendants = _useDescendantsContex.descendants;\n  return {\n    tabDescendants: descendants\n  };\n}\n;// CONCATENATED MODULE: ./packages/tabs/src/context/TabPanelDescendantsContext.ts\n\nvar TabPanelDescendantsContext = (0,dist_esm/* createDescendantsContext */.Pv)(\'TabPanelsDescendantsContext\');\n\n/**\n * Access list of tab panel descendants\n */\nfunction useTabPanelDescendantsContext() {\n  var _useDescendantsContex = (0,dist_esm/* useDescendantsContext */.Jo)(TabPanelDescendantsContext),\n    descendants = _useDescendantsContex.descendants;\n  return {\n    tabPanelDescendants: descendants\n  };\n}\n;// CONCATENATED MODULE: ./packages/tabs/src/context/TabsContext.ts\n\nvar TabsContext = /*#__PURE__*/(0,index_js_.createContext)({\n  as: \'button\',\n  darkMode: false,\n  forceRenderAllTabPanels: false,\n  selectedIndex: 0\n});\nvar useTabsContext = function useTabsContext() {\n  return (0,index_js_.useContext)(TabsContext);\n};\n;// CONCATENATED MODULE: ./packages/tabs/src/context/index.ts\n\n\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\nvar taggedTemplateLiteral = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js");\n;// CONCATENATED MODULE: ./packages/tabs/src/TabPanel/TabPanel.styles.ts\n\nvar _templateObject;\n\nvar hiddenTabPanelStyle = (0,emotion_dist_esm.css)(_templateObject || (_templateObject = (0,taggedTemplateLiteral/* default */.Z)(["\\n  display: none;\\n"])));\n;// CONCATENATED MODULE: ./packages/tabs/src/TabPanel/TabPanel.tsx\n\n\n\n\n\n\nvar TabPanel = function TabPanel(_ref) {\n  var children = _ref.children,\n    disabled = _ref.disabled;\n  var _useDescendant = (0,dist_esm/* useDescendant */.Yf)(TabPanelDescendantsContext),\n    id = _useDescendant.id,\n    index = _useDescendant.index,\n    ref = _useDescendant.ref;\n  var _useTabDescendantsCon = useTabDescendantsContext(),\n    tabDescendants = _useTabDescendantsCon.tabDescendants;\n  var _useTabsContext = useTabsContext(),\n    forceRenderAllTabPanels = _useTabsContext.forceRenderAllTabPanels,\n    selectedIndex = _useTabsContext.selectedIndex;\n  var relatedTab = (0,index_js_.useMemo)(function () {\n    return tabDescendants.find(function (tabDescendant) {\n      return tabDescendant.index === index;\n    });\n  }, [tabDescendants, index]);\n  var selected = index === selectedIndex;\n  var shouldRender = !disabled && (forceRenderAllTabPanels || selected);\n  return /*#__PURE__*/index_js_default().createElement("div", {\n    ref: ref\n  }, shouldRender ? /*#__PURE__*/index_js_default().createElement("div", {\n    "aria-labelledby": relatedTab === null || relatedTab === void 0 ? void 0 : relatedTab.id,\n    className: (0,emotion_dist_esm.cx)((0,defineProperty/* default */.Z)({}, hiddenTabPanelStyle, !selected)),\n    id: id,\n    role: "tabpanel"\n  }, children) : null);\n};\nTabPanel.displayName = \'TabPanel\';\n/* harmony default export */ const TabPanel_TabPanel = (TabPanel);\n;// CONCATENATED MODULE: ./packages/tabs/src/TabPanel/index.ts\n\n// EXTERNAL MODULE: ./packages/polymorphic/dist/esm/index.js\nvar polymorphic_dist_esm = __webpack_require__("./packages/polymorphic/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/palette/dist/esm/index.js\nvar palette_dist_esm = __webpack_require__("./packages/palette/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/tokens/dist/esm/index.js\nvar tokens_dist_esm = __webpack_require__("./packages/tokens/dist/esm/index.js");\n;// CONCATENATED MODULE: ./packages/tabs/src/TabTitle/TabTitle.styles.ts\n\n\nvar TabTitle_styles_templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14;\n\n\n\nvar TAB_TITLE_BODY_1_HEIGHT = 44;\nvar TAB_TITLE_BODY_2_HEIGHT = 52;\nvar listTitleModeStyles = {\n  light: {\n    base: (0,emotion_dist_esm.css)(TabTitle_styles_templateObject || (TabTitle_styles_templateObject = (0,taggedTemplateLiteral/* default */.Z)(["\\n      color: ", ";\\n    "])), palette_dist_esm/* palette */.D.gray.dark1),\n    hover: (0,emotion_dist_esm.css)(_templateObject2 || (_templateObject2 = (0,taggedTemplateLiteral/* default */.Z)(["\\n      &:hover {\\n        cursor: pointer;\\n        color: ", ";\\n        &:after {\\n          background-color: ", ";\\n        }\\n      }\\n    "])), palette_dist_esm/* palette */.D.gray.dark3, palette_dist_esm/* palette */.D.gray.light2),\n    focus: (0,emotion_dist_esm.css)(_templateObject3 || (_templateObject3 = (0,taggedTemplateLiteral/* default */.Z)(["\\n      &:focus-visible {\\n        color: ", ";\\n\\n        &:after {\\n          background-color: ", ";\\n        }\\n      }\\n    "])), palette_dist_esm/* palette */.D.blue.base, palette_dist_esm/* palette */.D.blue.light1),\n    selected: (0,emotion_dist_esm.css)(_templateObject4 || (_templateObject4 = (0,taggedTemplateLiteral/* default */.Z)(["\\n      &,\\n      &:hover {\\n        color: ", ";\\n        font-weight: ", ";\\n\\n        &:after {\\n          transform: scaleX(1);\\n          background-color: ", ";\\n        }\\n      }\\n    "])), palette_dist_esm/* palette */.D.green.dark2, tokens_dist_esm/* fontWeights */.vC.bold, palette_dist_esm/* palette */.D.green.dark1),\n    disabled: (0,emotion_dist_esm.css)(_templateObject5 || (_templateObject5 = (0,taggedTemplateLiteral/* default */.Z)(["\\n      cursor: not-allowed;\\n      color: ", ";\\n    "])), palette_dist_esm/* palette */.D.gray.light1)\n  },\n  dark: {\n    base: (0,emotion_dist_esm.css)(_templateObject6 || (_templateObject6 = (0,taggedTemplateLiteral/* default */.Z)(["\\n      color: ", ";\\n    "])), palette_dist_esm/* palette */.D.gray.light1),\n    hover: (0,emotion_dist_esm.css)(_templateObject7 || (_templateObject7 = (0,taggedTemplateLiteral/* default */.Z)(["\\n      &:hover {\\n        cursor: pointer;\\n        color: ", ";\\n\\n        &:after {\\n          background-color: ", ";\\n        }\\n      }\\n    "])), palette_dist_esm/* palette */.D.white, palette_dist_esm/* palette */.D.gray.dark2),\n    focus: (0,emotion_dist_esm.css)(_templateObject8 || (_templateObject8 = (0,taggedTemplateLiteral/* default */.Z)(["\\n      &:focus-visible {\\n        color: ", ";\\n\\n        &:after {\\n          background-color: ", ";\\n        }\\n      }\\n    "])), palette_dist_esm/* palette */.D.blue.light1, palette_dist_esm/* palette */.D.blue.light1),\n    selected: (0,emotion_dist_esm.css)(_templateObject9 || (_templateObject9 = (0,taggedTemplateLiteral/* default */.Z)(["\\n      &,\\n      &:hover {\\n        color: ", ";\\n        font-weight: ", ";\\n\\n        &:after {\\n          transform: scaleX(1);\\n          background-color: ", ";\\n        }\\n      }\\n    "])), palette_dist_esm/* palette */.D.gray.light2, tokens_dist_esm/* fontWeights */.vC.bold, palette_dist_esm/* palette */.D.green.dark1),\n    disabled: (0,emotion_dist_esm.css)(_templateObject10 || (_templateObject10 = (0,taggedTemplateLiteral/* default */.Z)(["\\n      cursor: not-allowed;\\n      color: ", ";\\n    "])), palette_dist_esm/* palette */.D.gray.dark2)\n  }\n};\nvar listTitleFontSize = (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, tokens_dist_esm/* BaseFontSize */.Y2.Body1, (0,emotion_dist_esm.css)(_templateObject11 || (_templateObject11 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    font-size: ", "px;\\n    line-height: ", "px;\\n    height: ", "px;\\n  "])), tokens_dist_esm/* typeScales */.yL.body1.fontSize, tokens_dist_esm/* typeScales */.yL.body1.lineHeight, TAB_TITLE_BODY_1_HEIGHT)), tokens_dist_esm/* BaseFontSize */.Y2.Body2, (0,emotion_dist_esm.css)(_templateObject12 || (_templateObject12 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    font-size: ", "px;\\n    line-height: ", "px;\\n    height: ", "px;\\n  "])), tokens_dist_esm/* typeScales */.yL.body2.fontSize, tokens_dist_esm/* typeScales */.yL.body2.lineHeight, TAB_TITLE_BODY_2_HEIGHT));\nvar listTitleStyles = (0,emotion_dist_esm.css)(_templateObject13 || (_templateObject13 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  font-family: ", ";\\n  font-weight: ", ";\\n  position: relative;\\n  display: inline-flex;\\n  flex-direction: column;\\n  align-items: flex-start;\\n  justify-content: center;\\n  max-width: 300px;\\n  padding: 12px 16px;\\n  background-color: transparent;\\n  border: 0px;\\n  margin: 0;\\n  text-decoration: none;\\n  transition: ", "ms color ease-in-out;\\n\\n  &:focus:not(:disabled) {\\n    outline: none;\\n    font-weight: ", ";\\n  }\\n\\n  // We create a pseudo element that\'s the width of the bolded text\\n  // This way there\'s no layout shift on hover when the text is bolded.\\n  &:before {\\n    content: attr(data-text);\\n    height: 0;\\n    font-weight: ", ";\\n    visibility: hidden;\\n    overflow: hidden;\\n    user-select: none;\\n    pointer-events: none;\\n  }\\n\\n  &:after {\\n    content: \'\';\\n    position: absolute;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    height: 4px;\\n    border-radius: 4px 4px 0 0;\\n    transition: all ", "ms ease-in-out;\\n    background-color: transparent;\\n    transform: scaleX(0.8);\\n  }\\n\\n  &:hover:after {\\n    transform: scaleX(0.95);\\n  }\\n\\n  &:active:after {\\n    &:after {\\n      transform: scaleX(1);\\n    }\\n  }\\n"])), tokens_dist_esm/* fontFamilies */.Vl["default"], tokens_dist_esm/* fontWeights */.vC.medium, tokens_dist_esm/* transitionDuration */.nV["default"], tokens_dist_esm/* fontWeights */.vC.bold, tokens_dist_esm/* fontWeights */.vC.bold, tokens_dist_esm/* transitionDuration */.nV["default"]);\nvar listTitleChildrenStyles = (0,emotion_dist_esm.css)(_templateObject14 || (_templateObject14 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  width: 100%;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n\\n  // Cannot use flexbox here to center children because it breaks text-overflow: ellipsis\\n  > svg {\\n    vertical-align: text-bottom;\\n    margin-right: 4px;\\n  }\\n"])));\n;// CONCATENATED MODULE: ./packages/tabs/src/TabTitle/TabTitle.tsx\n\n\n\nvar _excluded = ["children", "className", "disabled", "name", "onClick"];\n\n\n\n\n\n\n\n\nvar TabTitle = (0,polymorphic_dist_esm/* InferredPolymorphic */.$A)(function (_ref, fwdRef) {\n  var children = _ref.children,\n    className = _ref.className,\n    _ref$disabled = _ref.disabled,\n    disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n    name = _ref.name,\n    onClick = _ref.onClick,\n    rest = (0,objectWithoutProperties/* default */.Z)(_ref, _excluded);\n  var baseFontSize = (0,typography_dist_esm/* useUpdatedBaseFontSize */.hN)();\n  var _useDescendant = (0,dist_esm/* useDescendant */.Yf)(TabDescendantsContext, fwdRef),\n    index = _useDescendant.index,\n    ref = _useDescendant.ref,\n    id = _useDescendant.id;\n  var _useTabPanelDescendan = useTabPanelDescendantsContext(),\n    tabPanelDescendants = _useTabPanelDescendan.tabPanelDescendants;\n  var _useTabsContext = useTabsContext(),\n    as = _useTabsContext.as,\n    darkMode = _useTabsContext.darkMode,\n    selectedIndex = _useTabsContext.selectedIndex;\n  var _useInferredPolymorph = (0,polymorphic_dist_esm/* useInferredPolymorphic */.pn)(as, rest, \'button\'),\n    Component = _useInferredPolymorph.Component;\n  var theme = darkMode ? lib_dist_esm/* Theme */.Q2.Dark : lib_dist_esm/* Theme */.Q2.Light;\n  var selected = index === selectedIndex;\n  var relatedTabPanel = (0,index_js_.useMemo)(function () {\n    return tabPanelDescendants.find(function (tabPanelDescendant) {\n      return tabPanelDescendant.index === index;\n    });\n  }, [tabPanelDescendants, index]);\n  var handleClick = (0,index_js_.useCallback)(function (event) {\n    onClick === null || onClick === void 0 ? void 0 : onClick(event, index);\n  }, [index, onClick]);\n  var nodeText = (0,lib_dist_esm/* getNodeTextContent */.$$)(name);\n  return /*#__PURE__*/index_js_default().createElement(Component, (0,esm_extends/* default */.Z)({\n    "aria-controls": relatedTabPanel === null || relatedTabPanel === void 0 ? void 0 : relatedTabPanel.id,\n    "aria-selected": !disabled && selected,\n    className: (0,emotion_dist_esm.cx)(listTitleFontSize[baseFontSize], listTitleStyles, listTitleModeStyles[theme].base, (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, listTitleModeStyles[theme].selected, !disabled && selected), listTitleModeStyles[theme].hover, !disabled && !selected), listTitleModeStyles[theme].disabled, disabled), listTitleModeStyles[theme].focus, className),\n    "data-text": nodeText,\n    disabled: disabled,\n    id: id,\n    name: nodeText,\n    onClick: handleClick,\n    ref: ref,\n    role: "tab",\n    tabIndex: selected ? 0 : -1\n  }, rest), /*#__PURE__*/index_js_default().createElement("div", {\n    className: listTitleChildrenStyles\n  }, children));\n});\nTabTitle.displayName = \'TabTitle\';\n/* harmony default export */ const TabTitle_TabTitle = (TabTitle);\n;// CONCATENATED MODULE: ./packages/tabs/src/TabTitle/index.ts\n\n// EXTERNAL MODULE: ./packages/tabs/src/utils/index.ts + 1 modules\nvar utils = __webpack_require__("./packages/tabs/src/utils/index.ts");\n// EXTERNAL MODULE: ./packages/tabs/src/Tabs/Tabs.styles.ts\nvar Tabs_styles = __webpack_require__("./packages/tabs/src/Tabs/Tabs.styles.ts");\n;// CONCATENATED MODULE: ./packages/tabs/src/Tabs/Tabs.tsx\n\n\n\n\nvar Tabs_excluded = ["as", "baseFontSize", "children", "className", "darkMode", "inlineChildren", "selected", "setSelected", "forceRenderAllTabPanels", "data-lgid", "aria-labelledby", "aria-label"],\n  _excluded2 = ["disabled", "onClick", "onKeyDown", "name"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0,defineProperty/* default */.Z)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * # Tabs\n *\n * Tabs component\n *\n * ```\n<Tabs selected={0} setSelected={() => execute callback when new Tab is selected}>\n  <Tab name=\'First Tab\'>Tab 1</Tab>\n  <Tab name=\'Second Tab\'>Tab 2</Tab>\n</Tabs>\n```\n * @param props.as HTML Element that wraps name in Tab List.\n * @param props.children Content to appear inside of Tabs component.\n * @param props.className className applied to Tabs container.\n * @param props.selected Index of the Tab that should appear active. If value passed, component will be controlled by consumer.\n * @param props.setSelected Callback to be executed when Tab is selected. Receives index of activated Tab as the first argument.\n */\nvar Tabs = function Tabs(props) {\n  (0,esm/* validateAriaLabelProps */.Lk)(props, \'Tabs\');\n  var _props$as = props.as,\n    as = _props$as === void 0 ? \'button\' : _props$as,\n    baseFontSizeProp = props.baseFontSize,\n    children = props.children,\n    className = props.className,\n    darkModeProp = props.darkMode,\n    inlineChildren = props.inlineChildren,\n    controlledSelected = props.selected,\n    setControlledSelected = props.setSelected,\n    _props$forceRenderAll = props.forceRenderAllTabPanels,\n    forceRenderAllTabPanels = _props$forceRenderAll === void 0 ? false : _props$forceRenderAll,\n    _props$dataLgid = props[\'data-lgid\'],\n    dataLgId = _props$dataLgid === void 0 ? constants/* LGIDS_TABS */.D.root : _props$dataLgid,\n    ariaLabelledby = props[\'aria-labelledby\'],\n    ariaLabel = props[\'aria-label\'],\n    rest = (0,objectWithoutProperties/* default */.Z)(props, Tabs_excluded);\n  var baseFontSize = (0,typography_dist_esm/* useUpdatedBaseFontSize */.hN)(baseFontSizeProp);\n  var _useDarkMode = (0,leafygreen_provider_dist_esm/* useDarkMode */.vs)(darkModeProp),\n    theme = _useDarkMode.theme,\n    darkMode = _useDarkMode.darkMode;\n  var id = (0,hooks_dist_esm/* useIdAllocator */.ue)({\n    prefix: rest.id || \'tabs\'\n  });\n  var _useInitDescendants = (0,dist_esm/* useInitDescendants */.Ds)(),\n    tabDescendants = _useInitDescendants.descendants,\n    tabDispatch = _useInitDescendants.dispatch;\n  var _useInitDescendants2 = (0,dist_esm/* useInitDescendants */.Ds)(),\n    tabPanelDescendants = _useInitDescendants2.descendants,\n    tabPanelDispatch = _useInitDescendants2.dispatch;\n  var isControlled = typeof controlledSelected !== \'undefined\';\n  var _useState = (0,index_js_.useState)(0),\n    _useState2 = (0,slicedToArray/* default */.Z)(_useState, 2),\n    uncontrolledSelected = _useState2[0],\n    setUncontrolledSelected = _useState2[1];\n  var selected = isControlled ? controlledSelected : uncontrolledSelected,\n    setSelected = isControlled ? setControlledSelected : setUncontrolledSelected;\n  var accessibilityProps = (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, \'aria-label\', ariaLabel), \'aria-labelledby\', ariaLabelledby);\n  var handleClickTab = (0,index_js_.useCallback)(function (e, index) {\n    setSelected === null || setSelected === void 0 ? void 0 : setSelected(index);\n  }, [setSelected]);\n  var tabTitleElements = tabDescendants.map(function (descendant) {\n    return descendant.element;\n  });\n  var handleKeyDown = (0,index_js_.useCallback)(function (e) {\n    if (e.metaKey || e.ctrlKey) return;\n    if (e.key !== lib_dist_esm/* keyMap */.Pc.ArrowRight && e.key !== lib_dist_esm/* keyMap */.Pc.ArrowLeft) return;\n    var enabledIndices = (0,utils/* getEnabledIndices */.M)(tabTitleElements);\n    var numberOfEnabledTabs = enabledIndices.length;\n    var activeIndex = enabledIndices.indexOf(selected);\n    var indexToUpdateTo = enabledIndices[(e.key === lib_dist_esm/* keyMap */.Pc.ArrowRight ? activeIndex + 1 : activeIndex - 1 + numberOfEnabledTabs) % numberOfEnabledTabs];\n    setSelected === null || setSelected === void 0 ? void 0 : setSelected(indexToUpdateTo);\n    tabTitleElements[indexToUpdateTo].focus();\n  }, [selected, setSelected, tabTitleElements]);\n  var renderedTabs = index_js_default().Children.map(children, function (child) {\n    if (!(0,lib_dist_esm/* isComponentType */.Kf)(child, \'Tab\')) {\n      return child;\n    }\n    var _child$props = child.props,\n      disabled = _child$props.disabled,\n      onClick = _child$props.onClick,\n      _onKeyDown = _child$props.onKeyDown,\n      name = _child$props.name,\n      rest = (0,objectWithoutProperties/* default */.Z)(_child$props, _excluded2);\n    var tabProps = _objectSpread({\n      disabled: disabled,\n      name: name,\n      onKeyDown: function onKeyDown(event) {\n        _onKeyDown === null || _onKeyDown === void 0 ? void 0 : _onKeyDown(event);\n        handleKeyDown(event);\n      },\n      onClick: !disabled ? function (event, index) {\n        onClick === null || onClick === void 0 ? void 0 : onClick(event);\n        handleClickTab(event, index);\n      } : undefined\n    }, rest);\n    return /*#__PURE__*/index_js_default().createElement(TabTitle_TabTitle, tabProps, name);\n  });\n  var renderedTabPanels = index_js_default().Children.map(children, function (child) {\n    if (!(0,lib_dist_esm/* isComponentType */.Kf)(child, \'Tab\')) {\n      return child;\n    }\n    var _child$props2 = child.props,\n      children = _child$props2.children,\n      disabled = _child$props2.disabled;\n    return /*#__PURE__*/index_js_default().createElement(TabPanel_TabPanel, {\n      disabled: disabled\n    }, children);\n  });\n  return /*#__PURE__*/index_js_default().createElement(leafygreen_provider_dist_esm/* default */.ZP, {\n    baseFontSize: baseFontSize === 16 ? 16 : 14\n  }, /*#__PURE__*/index_js_default().createElement(dist_esm/* DescendantsProvider */.nB, {\n    context: TabDescendantsContext,\n    descendants: tabDescendants,\n    dispatch: tabDispatch\n  }, /*#__PURE__*/index_js_default().createElement(dist_esm/* DescendantsProvider */.nB, {\n    context: TabPanelDescendantsContext,\n    descendants: tabPanelDescendants,\n    dispatch: tabPanelDispatch\n  }, /*#__PURE__*/index_js_default().createElement(TabsContext.Provider, {\n    value: {\n      as: as,\n      darkMode: darkMode,\n      forceRenderAllTabPanels: forceRenderAllTabPanels,\n      selectedIndex: selected\n    }\n  }, /*#__PURE__*/index_js_default().createElement("div", (0,esm_extends/* default */.Z)({}, rest, {\n    className: className,\n    "data-lgid": dataLgId\n  }), /*#__PURE__*/index_js_default().createElement("div", {\n    className: Tabs_styles/* tabContainerStyle */.cd,\n    id: id\n  }, /*#__PURE__*/index_js_default().createElement("div", (0,esm_extends/* default */.Z)({\n    className: (0,emotion_dist_esm.cx)((0,Tabs_styles/* getListThemeStyles */.YT)(theme), Tabs_styles/* tabListElementClassName */.em),\n    "data-lgid": constants/* LGIDS_TABS */.D.tabList,\n    role: "tablist",\n    "aria-orientation": "horizontal"\n  }, accessibilityProps), renderedTabs), /*#__PURE__*/index_js_default().createElement("div", {\n    className: Tabs_styles/* inlineChildrenContainerStyle */.uv\n  }, /*#__PURE__*/index_js_default().createElement("div", {\n    className: Tabs_styles/* inlineChildrenWrapperStyle */.kl\n  }, inlineChildren))), /*#__PURE__*/index_js_default().createElement("div", {\n    className: Tabs_styles/* tabPanelsElementClassName */.FX,\n    "data-lgid": constants/* LGIDS_TABS */.D.tabPanels\n  }, renderedTabPanels))))));\n};\nTabs.displayName = \'Tabs\';\nTabs.propTypes =  false ? 0 : {};\n/* harmony default export */ const Tabs_Tabs = (Tabs);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/tabs/src/Tabs/Tabs.tsx\n')},"./packages/tabs/src/utils/getEnabledIndices/getEnabledIndices.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   M: () => (/* binding */ getEnabledIndices)\n/* harmony export */ });\nfunction getEnabledIndices(tabTitleElements) {\n  return tabTitleElements.filter(function (tabTitleEl) {\n    return !tabTitleEl.hasAttribute('disabled');\n  }).map(function (tabTitleEl) {\n    return tabTitleElements.indexOf(tabTitleEl);\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy90YWJzL3NyYy91dGlscy9nZXRFbmFibGVkSW5kaWNlcy9nZXRFbmFibGVkSW5kaWNlcy50cyIsIm1hcHBpbmdzIjoiOzs7QUFBTyxTQUFTQSxpQkFBaUJBLENBQUNDLGdCQUFvQyxFQUFFO0VBQ3RFLE9BQU9BLGdCQUFnQixDQUNwQkMsTUFBTSxDQUFDLFVBQUFDLFVBQVU7SUFBQSxPQUFJLENBQUNBLFVBQVUsQ0FBQ0MsWUFBWSxDQUFDLFVBQVUsQ0FBQztFQUFBLEVBQUMsQ0FDMURDLEdBQUcsQ0FBQyxVQUFBRixVQUFVO0lBQUEsT0FBSUYsZ0JBQWdCLENBQUNLLE9BQU8sQ0FBQ0gsVUFBVSxDQUFDO0VBQUEsRUFBQztBQUM1RCIsInNvdXJjZXMiOlsid2VicGFjazovL2xlYWZ5Z3JlZW4tdWkvLi9wYWNrYWdlcy90YWJzL3NyYy91dGlscy9nZXRFbmFibGVkSW5kaWNlcy9nZXRFbmFibGVkSW5kaWNlcy50cz8xZjQzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBnZXRFbmFibGVkSW5kaWNlcyh0YWJUaXRsZUVsZW1lbnRzOiBBcnJheTxIVE1MRWxlbWVudD4pIHtcbiAgcmV0dXJuIHRhYlRpdGxlRWxlbWVudHNcbiAgICAuZmlsdGVyKHRhYlRpdGxlRWwgPT4gIXRhYlRpdGxlRWwuaGFzQXR0cmlidXRlKCdkaXNhYmxlZCcpKVxuICAgIC5tYXAodGFiVGl0bGVFbCA9PiB0YWJUaXRsZUVsZW1lbnRzLmluZGV4T2YodGFiVGl0bGVFbCkpO1xufVxuIl0sIm5hbWVzIjpbImdldEVuYWJsZWRJbmRpY2VzIiwidGFiVGl0bGVFbGVtZW50cyIsImZpbHRlciIsInRhYlRpdGxlRWwiLCJoYXNBdHRyaWJ1dGUiLCJtYXAiLCJpbmRleE9mIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./packages/tabs/src/utils/getEnabledIndices/getEnabledIndices.ts\n")},"?4f7e":()=>{}}]);