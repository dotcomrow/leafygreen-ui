(self.webpackChunkleafygreen_ui=self.webpackChunkleafygreen_ui||[]).push([[1326],{"./packages/text-area/src/TextArea.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  Generated: () => (/* binding */ Generated),\n  LiveExample: () => (/* binding */ LiveExample),\n  __namedExportsOrder: () => (/* binding */ __namedExportsOrder),\n  "default": () => (/* binding */ TextArea_stories)\n});\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js\nvar esm_extends = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/extends.js");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\nvar objectWithoutProperties = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js");\n// EXTERNAL MODULE: consume shared module (default) react@^17.0.2 (singleton) (fallback: ./node_modules/react/index.js)\nvar index_js_ = __webpack_require__("webpack/sharing/consume/default/react/react");\nvar index_js_default = /*#__PURE__*/__webpack_require__.n(index_js_);\n// EXTERNAL MODULE: ./tools/storybook-utils/dist/esm/index.js\nvar esm = __webpack_require__("./tools/storybook-utils/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/leafygreen-provider/dist/esm/index.js\nvar dist_esm = __webpack_require__("./packages/leafygreen-provider/dist/esm/index.js");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js + 2 modules\nvar defineProperty = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 3 modules\nvar slicedToArray = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js");\n// EXTERNAL MODULE: ./packages/form-field/dist/esm/index.js\nvar form_field_dist_esm = __webpack_require__("./packages/form-field/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/hooks/dist/esm/index.js\nvar hooks_dist_esm = __webpack_require__("./packages/hooks/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/typography/dist/esm/index.js\nvar typography_dist_esm = __webpack_require__("./packages/typography/dist/esm/index.js");\n;// CONCATENATED MODULE: ./packages/text-area/src/constants.ts\nvar LGID_ROOT = \'lg-text_area\';\nvar constants_LGIDS_TEXT_AREA = {\n  root: LGID_ROOT\n};\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\nvar taggedTemplateLiteral = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js");\n// EXTERNAL MODULE: ./packages/emotion/dist/esm/index.js\nvar emotion_dist_esm = __webpack_require__("./packages/emotion/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/tokens/dist/esm/index.js\nvar tokens_dist_esm = __webpack_require__("./packages/tokens/dist/esm/index.js");\n;// CONCATENATED MODULE: ./packages/text-area/src/TextArea/TextArea.styles.ts\n\nvar _templateObject, _templateObject2;\n\n\nvar TEXT_AREA_MIN_HEIGHT = 64;\nvar textAreaContainerStyles = (0,emotion_dist_esm.css)(_templateObject || (_templateObject = (0,taggedTemplateLiteral/* default */.Z)(["\\n  height: auto;\\n  display: flex;\\n  padding: 0;\\n"])));\nvar textAreaStyles = (0,emotion_dist_esm.css)(_templateObject2 || (_templateObject2 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  width: 100%;\\n  min-height: ", "px;\\n  display: flex;\\n  resize: none;\\n  padding: ", "px ", "px;\\n"])), TEXT_AREA_MIN_HEIGHT, tokens_dist_esm/* spacing */.W0[200], tokens_dist_esm/* spacing */.W0[300]);\n;// CONCATENATED MODULE: ./packages/text-area/src/TextArea/TextArea.types.ts\n\nvar State = form_field_dist_esm/* FormFieldState */.nY;\n;// CONCATENATED MODULE: ./packages/text-area/src/TextArea/TextArea.tsx\n\n\n\nvar _excluded = ["label", "description", "className", "errorMessage", "successMessage", "darkMode", "disabled", "state", "id", "value", "onChange", "onBlur", "handleValidation", "aria-label", "aria-labelledby", "aria-invalid", "baseFontSize", "data-lgid", "defaultValue"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0,defineProperty/* default */.Z)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n\n\n\n\n\n\n\n\n\n\n/**\n * # TextArea\n *\n * TextArea component\n *\n * ```\n<TextArea label=\'Input Label\' onChange={() => execute when value of input field changes}/>\n```\n * @param props.id ID associated with the TextArea component.\n * @param props.label Text shown in bold above the input element.\n * @param props.description Text that gives more detail about the requirements for the input.\n * @param props.disabled Whether or not the field is currently disabled.\n * @param props.onChange Callback to be executed when the value of the input field changes.\n * @param props.onBlur Callback to be executed when the input stops being focused.\n * @param props.placeholder The placeholder text shown in the input field before the user begins typing.\n * @param props.errorMessage The error message shown below the input element if the value is invalid.\n * @param props.successMessage The success message shown below the input element if the value is valid.\n * @param props.state The current state of the TextArea. This can be `none` or `error`.\n * @param props.value The current value of the input field. If a value is passed to this prop, component will be controlled by consumer.\n * @param props.className ClassName supplied to the TextArea container.\n * @param props.darkMode Determines whether or not the component appears in dark theme.\n * @param props.handleValidation Validation callback used to validate input.\n * @param props.baseFontSize Override the global `baseFontSize` set in LeafygreenProvider. This will only change the font size of the input text, not the label or description.\n * @param props.defaultValue The default value of the input field. Unlike value, component will not be controlled if defaultValue is passed.\n */\n\nvar TextArea = /*#__PURE__*/(0,index_js_.forwardRef)(function TextArea(_ref, forwardedRef) {\n  var label = _ref.label,\n    description = _ref.description,\n    className = _ref.className,\n    _ref$errorMessage = _ref.errorMessage,\n    errorMessage = _ref$errorMessage === void 0 ? \'This input needs your attention\' : _ref$errorMessage,\n    _ref$successMessage = _ref.successMessage,\n    successMessage = _ref$successMessage === void 0 ? \'Success\' : _ref$successMessage,\n    darkModeProp = _ref.darkMode,\n    _ref$disabled = _ref.disabled,\n    disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n    _ref$state = _ref.state,\n    state = _ref$state === void 0 ? State.None : _ref$state,\n    idProp = _ref.id,\n    controlledValue = _ref.value,\n    onChange = _ref.onChange,\n    onBlur = _ref.onBlur,\n    handleValidation = _ref.handleValidation,\n    ariaLabel = _ref[\'aria-label\'],\n    ariaLabelledby = _ref[\'aria-labelledby\'],\n    ariaInvalid = _ref[\'aria-invalid\'],\n    baseFontSizeProp = _ref.baseFontSize,\n    _ref$dataLgid = _ref[\'data-lgid\'],\n    dataLgId = _ref$dataLgid === void 0 ? constants_LGIDS_TEXT_AREA.root : _ref$dataLgid,\n    _ref$defaultValue = _ref.defaultValue,\n    defaultValue = _ref$defaultValue === void 0 ? \'\' : _ref$defaultValue,\n    rest = (0,objectWithoutProperties/* default */.Z)(_ref, _excluded);\n  var baseFontSize = (0,typography_dist_esm/* useUpdatedBaseFontSize */.hN)(baseFontSizeProp);\n  var id = (0,hooks_dist_esm/* useIdAllocator */.ue)({\n    prefix: \'textarea\',\n    id: idProp\n  });\n  var _useDarkMode = (0,dist_esm/* useDarkMode */.vs)(darkModeProp),\n    darkMode = _useDarkMode.darkMode;\n  var isControlled = typeof controlledValue === \'string\';\n  var _useState = (0,index_js_.useState)(defaultValue),\n    _useState2 = (0,slicedToArray/* default */.Z)(_useState, 2),\n    uncontrolledValue = _useState2[0],\n    setValue = _useState2[1];\n  var value = isControlled ? controlledValue : uncontrolledValue;\n\n  // Validation\n  var validation = (0,hooks_dist_esm/* useValidation */.V$)(handleValidation);\n  var handleBlur = function handleBlur(e) {\n    if (onBlur) {\n      onBlur(e);\n    }\n    validation.onBlur(e);\n  };\n  var handleChange = function handleChange(e) {\n    if (onChange) {\n      onChange(e);\n    }\n    if (!isControlled) {\n      setValue(e.target.value);\n    }\n    validation.onChange(e);\n  };\n  if (!label && !ariaLabelledby) {\n    console.error(\'For screen-reader accessibility, label or aria-labelledby must be provided to TextArea.\');\n  }\n  var ariaProps = {\n    \'aria-invalid\': ariaInvalid,\n    \'aria-label\': ariaLabel,\n    \'aria-labelledby\': ariaLabelledby\n  };\n  var formFieldProps = _objectSpread({\n    baseFontSize: baseFontSize,\n    className: className,\n    darkMode: darkMode,\n    \'data-lgid\': dataLgId,\n    description: description,\n    disabled: disabled,\n    errorMessage: errorMessage,\n    id: id,\n    label: label,\n    state: state,\n    successMessage: successMessage\n  }, ariaProps);\n  var textAreaProps = _objectSpread({\n    className: textAreaStyles,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    ref: forwardedRef,\n    title: label != null ? label : undefined,\n    value: value\n  }, rest);\n  return /*#__PURE__*/index_js_default().createElement(form_field_dist_esm/* FormField */.Wi, formFieldProps, /*#__PURE__*/index_js_default().createElement(form_field_dist_esm/* FormFieldInputContainer */.IR, {\n    className: textAreaContainerStyles\n  }, /*#__PURE__*/index_js_default().createElement("textarea", textAreaProps)));\n});\nTextArea.displayName = \'TextArea\';\nTextArea.propTypes =  false ? 0 : {};\n;// CONCATENATED MODULE: ./packages/text-area/src/TextArea/index.ts\n\n\n// EXTERNAL MODULE: ./tools/test-harnesses/dist/esm/index.js\nvar test_harnesses_dist_esm = __webpack_require__("./tools/test-harnesses/dist/esm/index.js");\n;// CONCATENATED MODULE: ./packages/text-area/src/utils/getTestUtils/getTestUtils.ts\n\n\n\n\nvar getTestUtils = function getTestUtils() {\n  var lgId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : LGIDS_TEXT_AREA.root;\n  /**\n   * Queries the DOM for the element using the `data-lgid` data attribute.\n   * Will throw if no element is found.\n   */\n  var element = getByLgId(lgId);\n\n  /**\n   * Queries the `element` for the label element. Will return `null` if the label is not found.\n   */\n  var _getLabel = queryBySelector(element, "[data-lgid=".concat(LGIDS_TYPOGRAPHY.label, "]"));\n\n  /**\n   * Queries the `element` for the description element. Will return `null` if the desription is not found.\n   */\n  var _getDescription = queryBySelector(element, "[data-lgid=".concat(LGIDS_TYPOGRAPHY.description, "]"));\n\n  /**\n   * Queries the `element` for the input element. Will return `null` if the input is not found.\n   */\n  var _getInput = queryBySelector(element, "textarea");\n\n  /**\n   * Queries the `element` for the error message element. Will return `null` if the error message is not found.\n   */\n  var _getErrorMessage = queryBySelector(element, "[data-lgid=\\"".concat(LGIDS_FORM_FIELD.errorMessage, "\\"]"));\n\n  /**\n   * Returns the aria-disabled attribute on the input.\n   */\n  var isInputAriaDisabled = function isInputAriaDisabled() {\n    return _getInput.getAttribute(\'aria-disabled\') === \'true\';\n  };\n\n  /**\n   * Returns the aria-disabled attribute on the input.\n   */\n  var isInputReadOnly = function isInputReadOnly() {\n    return _getInput.readOnly;\n  };\n\n  /**\n   * Returns the input value.\n   */\n  var _getInputValue = function getInputValue() {\n    return _getInput.value;\n  };\n\n  /**\n   * Queries the `element` for `aria-invalid`.\n   */\n  var _isError = function isError() {\n    var ariaInvalid = queryBySelector(element, \'textarea[aria-invalid="true"]\');\n    return !!ariaInvalid;\n  };\n  return {\n    getLabel: function getLabel() {\n      return _getLabel;\n    },\n    getDescription: function getDescription() {\n      return _getDescription;\n    },\n    getInput: function getInput() {\n      return _getInput;\n    },\n    getErrorMessage: function getErrorMessage() {\n      return _getErrorMessage;\n    },\n    isDisabled: function isDisabled() {\n      return isInputAriaDisabled() && isInputReadOnly();\n    },\n    isError: function isError() {\n      return _isError();\n    },\n    getInputValue: function getInputValue() {\n      return _getInputValue();\n    }\n  };\n};\n;// CONCATENATED MODULE: ./packages/text-area/src/utils/index.ts\n\n;// CONCATENATED MODULE: ./packages/text-area/src/index.ts\n\n\n;// CONCATENATED MODULE: ./packages/text-area/src/TextArea.stories.tsx\n\n\nvar TextArea_stories_excluded = ["darkMode", "baseFontSize"];\n\n\n\n\nvar meta = {\n  title: \'Components/TextArea\',\n  component: TextArea,\n  parameters: {\n    "default": \'LiveExample\',\n    generate: {\n      combineArgs: {\n        darkMode: [false, true],\n        baseFontSize: [13, 16],\n        label: [undefined, \'Label\'],\n        description: [undefined, \'This is a description for the text area\'],\n        state: Object.values(State),\n        disabled: [false, true]\n      },\n      excludeCombinations: [{\n        label: undefined,\n        description: \'This is a description for the text area\'\n      }]\n    }\n  },\n  argTypes: {\n    baseFontSize: {\n      options: [undefined, 13, 16],\n      control: {\n        type: \'radio\'\n      }\n    },\n    label: {\n      control: \'text\'\n    },\n    description: {\n      control: \'text\'\n    },\n    errorMessage: {\n      control: \'text\'\n    },\n    darkMode: esm/* storybookArgTypes */.bN.darkMode\n  },\n  args: {\n    label: \'Label\',\n    description: \'This is a description for the text area\',\n    errorMessage: \'This is an error message\',\n    disabled: false,\n    placeholder: \'Placeholder\'\n  }\n};\n/* harmony default export */ const TextArea_stories = (meta);\nvar LiveExample = function LiveExample(_ref) {\n  var darkMode = _ref.darkMode,\n    baseFontSize = _ref.baseFontSize,\n    args = (0,objectWithoutProperties/* default */.Z)(_ref, TextArea_stories_excluded);\n  return /*#__PURE__*/index_js_default().createElement(dist_esm/* default */.ZP, {\n    baseFontSize: baseFontSize\n  }, /*#__PURE__*/index_js_default().createElement(TextArea, (0,esm_extends/* default */.Z)({\n    darkMode: darkMode\n  }, args)));\n};\nLiveExample.parameters = {\n  chromatic: {\n    disableSnapshot: true\n  }\n};\nLiveExample.argTypes = {\n  baseFontSize: {\n    options: [14, 16],\n    control: {\n      type: \'radio\'\n    },\n    description: \'Storybook prop only. This font size is passed into the LeafygreenProvider. \'\n  }\n};\nLiveExample.args = {\n  // @ts-expect-error\n  baseFontSize: 14\n};\nvar Generated = function Generated() {};\nLiveExample.parameters = {\n  ...LiveExample.parameters,\n  docs: {\n    ...LiveExample.parameters?.docs,\n    source: {\n      originalSource: "({\\n  darkMode,\\n  baseFontSize,\\n  ...args\\n}: TextAreaProps & FontSizeProps) => <LeafygreenProvider baseFontSize={baseFontSize}>\\n    <TextArea darkMode={darkMode} {...args} />\\n  </LeafygreenProvider>",\n      ...LiveExample.parameters?.docs?.source\n    }\n  }\n};\nGenerated.parameters = {\n  ...Generated.parameters,\n  docs: {\n    ...Generated.parameters?.docs,\n    source: {\n      originalSource: "() => {}",\n      ...Generated.parameters?.docs?.source\n    }\n  }\n};;const __namedExportsOrder = ["LiveExample","Generated"];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/text-area/src/TextArea.stories.tsx\n')},"./packages/form-field/dist/esm/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IR: () => (/* binding */ qe),\n/* harmony export */   Me: () => (/* binding */ S),\n/* harmony export */   Wi: () => (/* binding */ Ne),\n/* harmony export */   e7: () => (/* binding */ le),\n/* harmony export */   nY: () => (/* binding */ J)\n/* harmony export */ });\n/* unused harmony exports FormFieldContext, FormFieldProvider, LGIDS_FORM_FIELD, defaultFormFieldContext, useFormFieldContext */\n/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/typeof.js");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("webpack/sharing/consume/default/react/react");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/emotion/dist/esm/index.js");\n/* harmony import */ var _leafygreen_ui_leafygreen_provider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/leafygreen-provider/dist/esm/index.js");\n/* harmony import */ var _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/tokens/dist/esm/index.js");\n/* harmony import */ var _leafygreen_ui_typography__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/typography/dist/esm/index.js");\n/* harmony import */ var _leafygreen_ui_icon__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/icon/dist/esm/index.js");\n/* harmony import */ var _leafygreen_ui_hooks__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./packages/hooks/dist/esm/index.js");\n/* harmony import */ var _leafygreen_ui_lib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./packages/lib/dist/esm/index.js");\n/* harmony import */ var _leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("./packages/palette/dist/esm/index.js");\n\n\n\n\n\n\n\n\n\n\nvar j = "lg-form_field",\n  P = {\n    root: j,\n    description: "".concat(j, "-description"),\n    errorMessage: "".concat(j, "-error_message"),\n    feedback: "".concat(j, "-feedback"),\n    input: "".concat(j, "-input"),\n    label: "".concat(j, "-label"),\n    optional: "".concat(j, "-optional"),\n    successMessage: "".concat(j, "-success_message")\n  },\n  S = {\n    error: "This input needs your attention",\n    success: "Success"\n  };\nfunction F(e, n, r) {\n  return (n = function (e) {\n    var n = function (e, n) {\n      if ("object" != (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(e) || !e) return e;\n      var r = e[Symbol.toPrimitive];\n      if (void 0 !== r) {\n        var t = r.call(e, n);\n        if ("object" != (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(t)) return t;\n        throw new TypeError("@@toPrimitive must return a primitive value.");\n      }\n      return String(e);\n    }(e, "string");\n    return "symbol" == (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(n) ? n : n + "";\n  }(n)) in e ? Object.defineProperty(e, n, {\n    value: r,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[n] = r, e;\n}\nfunction M() {\n  return M = Object.assign ? Object.assign.bind() : function (e) {\n    for (var n = 1; n < arguments.length; n++) {\n      var r = arguments[n];\n      for (var t in r) ({}).hasOwnProperty.call(r, t) && (e[t] = r[t]);\n    }\n    return e;\n  }, M.apply(null, arguments);\n}\nfunction D(e, n) {\n  var r = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var t = Object.getOwnPropertySymbols(e);\n    n && (t = t.filter(function (n) {\n      return Object.getOwnPropertyDescriptor(e, n).enumerable;\n    })), r.push.apply(r, t);\n  }\n  return r;\n}\nfunction I(e) {\n  for (var n = 1; n < arguments.length; n++) {\n    var r = null != arguments[n] ? arguments[n] : {};\n    n % 2 ? D(Object(r), !0).forEach(function (n) {\n      F(e, n, r[n]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : D(Object(r)).forEach(function (n) {\n      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(r, n));\n    });\n  }\n  return e;\n}\nfunction H(e, n) {\n  if (null == e) return {};\n  var r,\n    t,\n    i = function (e, n) {\n      if (null == e) return {};\n      var r = {};\n      for (var t in e) if ({}.hasOwnProperty.call(e, t)) {\n        if (n.indexOf(t) >= 0) continue;\n        r[t] = e[t];\n      }\n      return r;\n    }(e, n);\n  if (Object.getOwnPropertySymbols) {\n    var a = Object.getOwnPropertySymbols(e);\n    for (t = 0; t < a.length; t++) r = a[t], n.indexOf(r) >= 0 || {}.propertyIsEnumerable.call(e, r) && (i[r] = e[r]);\n  }\n  return i;\n}\nfunction V(e, n) {\n  return n || (n = e.slice(0)), Object.freeze(Object.defineProperties(e, {\n    raw: {\n      value: Object.freeze(n)\n    }\n  }));\n}\nvar L,\n  _,\n  C,\n  T,\n  W,\n  X,\n  q,\n  A,\n  B,\n  G,\n  J = {\n    None: "none",\n    Error: "error",\n    Valid: "valid"\n  },\n  K = {\n    disabled: !1,\n    size: _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .Size */ .$u.Default,\n    state: J.None\n  },\n  Q = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createContext(K),\n  R = function R(n) {\n    var r = n.value,\n      t = n.children;\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Q.Provider, {\n      value: r\n    }, t);\n  },\n  U = function U() {\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(Q);\n  },\n  Y = function Y(e) {\n    var n = e.baseFontSize,\n      r = e.size;\n    return r === _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .Size */ .$u.XSmall || r === _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .Size */ .$u.Small ? (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.css)(L || (L = V(["\\n      font-size: ", "px;\\n      line-height: ", "px;\\n    "])), _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .typeScales */ .yL.body1.fontSize, _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .typeScales */ .yL.body1.lineHeight) : r === _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .Size */ .$u.Default ? (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.css)(_ || (_ = V(["\\n      font-size: ", "px;\\n      line-height: ", "px;\\n    "])), n, _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .typeScales */ .yL.body1.lineHeight) : r === _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .Size */ .$u.Large ? (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.css)(C || (C = V(["\\n      font-size: ", "px;\\n      line-height: ", "px;\\n    "])), _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .typeScales */ .yL.large.fontSize, _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .typeScales */ .yL.large.lineHeight) : void 0;\n  },\n  Z = function Z(e) {\n    return e === J.Error ? _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .Variant */ .$e.Error : e === J.Valid ? _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .Variant */ .$e.Success : _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .Variant */ .$e.Primary;\n  },\n  $ = (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.css)(T || (T = V(["\\n  display: flex;\\n  flex-direction: column;\\n"]))),\n  ee = (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.css)(W || (W = V(["\\n  margin-bottom: ", "px;\\n"])), _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .spacing */ .W0[100]),\n  ne = (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.css)(X || (X = V(["\\n  display: flex;\\n  gap: ", "px;\\n"])), _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .spacing */ .W0[100]),\n  re = (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.css)(q || (q = V(["\\n  padding-top: ", "px;\\n"])), _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .spacing */ .W0[100]),\n  te = (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.css)(A || (A = V(["\\n  opacity: 0;\\n"]))),\n  ie = (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.css)(B || (B = V(["\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n"]))),\n  ae = function ae(e) {\n    return (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.css)(G || (G = V(["\\n    height: ", "px;\\n  "])), e === _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .Size */ .$u.Large ? _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .typeScales */ .yL.large.lineHeight : _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .typeScales */ .yL.body1.lineHeight);\n  },\n  oe = ["baseFontSize", "disabled", "errorMessage", "hideFeedback", "id", "size", "state", "successMessage"],\n  le = function le(n) {\n    var r = n.baseFontSize,\n      t = n.disabled,\n      a = n.errorMessage,\n      l = n.hideFeedback,\n      s = void 0 !== l && l,\n      d = n.id,\n      c = n.size,\n      p = n.state,\n      f = n.successMessage,\n      b = H(n, oe),\n      m = (0,_leafygreen_ui_leafygreen_provider__WEBPACK_IMPORTED_MODULE_2__/* .useDarkMode */ .vs)().theme,\n      g = (0,_leafygreen_ui_typography__WEBPACK_IMPORTED_MODULE_4__/* .useUpdatedBaseFontSize */ .hN)(r),\n      x = Y({\n        baseFontSize: g,\n        size: c\n      }),\n      w = p === J.Error,\n      O = (w || p === J.Valid) && !t,\n      E = O ? {\n        glyph: w ? "Warning" : "Checkmark",\n        fill: _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .color */ .$_[m].icon[Z(p)]["default"],\n        title: w ? "Error" : "Valid"\n      } : void 0;\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", M({\n      id: d,\n      "data-lgid": P.feedback,\n      "data-testid": P.feedback,\n      className: (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.cx)(ne, F(F({}, re, O), te, s)),\n      "aria-live": "polite",\n      "aria-relevant": "all"\n    }, b), O && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, E && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {\n      className: (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.cx)(ie, ae(c))\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_leafygreen_ui_icon__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP, M({}, E, {\n      "aria-hidden": !0\n    }))), w ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_leafygreen_ui_typography__WEBPACK_IMPORTED_MODULE_4__/* .Error */ .jj, {\n      "data-lgid": P.errorMessage,\n      "data-testid": P.errorMessage,\n      className: x\n    }, a) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_leafygreen_ui_typography__WEBPACK_IMPORTED_MODULE_4__/* .Body */ .uT, {\n      "data-lgid": P.successMessage,\n      "data-testid": P.successMessage,\n      className: x\n    }, f)));\n  };\nle.displayName = "FormFieldFeedback";\nvar se,\n  de,\n  ce,\n  ue,\n  pe,\n  fe,\n  be,\n  me,\n  ge,\n  he,\n  ve,\n  ye,\n  xe,\n  we,\n  ke,\n  Oe,\n  Ee = ["label", "description", "state", "id", "disabled"],\n  ze = ["label", "description", "children", "baseFontSize", "state", "size", "disabled", "errorMessage", "successMessage", "className", "darkMode", "optional", "id"],\n  Ne = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(function (n, r) {\n    var t = n.label,\n      o = n.description,\n      s = n.children,\n      d = n.baseFontSize,\n      c = n.state,\n      u = void 0 === c ? J.None : c,\n      p = n.size,\n      f = void 0 === p ? _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .Size */ .$u.Default : p,\n      b = n.disabled,\n      m = void 0 !== b && b,\n      g = n.errorMessage,\n      v = void 0 === g ? S.error : g,\n      y = n.successMessage,\n      k = void 0 === y ? S.success : y,\n      E = n.className,\n      z = n.darkMode,\n      N = n.optional,\n      j = n.id,\n      D = H(n, ze),\n      V = (0,_leafygreen_ui_typography__WEBPACK_IMPORTED_MODULE_4__/* .useUpdatedBaseFontSize */ .hN)(d),\n      L = Y({\n        baseFontSize: V,\n        size: f\n      }),\n      _ = function (e) {\n        var n,\n          r = e.label,\n          t = e.description,\n          i = e.state,\n          a = e.id,\n          o = e.disabled,\n          l = H(e, Ee),\n          s = (0,_leafygreen_ui_hooks__WEBPACK_IMPORTED_MODULE_6__/* .useIdAllocator */ .ue)({\n            prefix: P.label\n          }),\n          d = (0,_leafygreen_ui_hooks__WEBPACK_IMPORTED_MODULE_6__/* .useIdAllocator */ .ue)({\n            prefix: P.description\n          }),\n          c = (0,_leafygreen_ui_hooks__WEBPACK_IMPORTED_MODULE_6__/* .useIdAllocator */ .ue)({\n            prefix: P.feedback\n          }),\n          u = (0,_leafygreen_ui_hooks__WEBPACK_IMPORTED_MODULE_6__/* .useIdAllocator */ .ue)({\n            prefix: P.input\n          }),\n          p = null != a ? a : u,\n          f = i === J.Error,\n          b = i !== J.None,\n          m = r ? s : l["aria-labelledby"],\n          g = r || m ? void 0 : l["aria-label"],\n          h = "".concat(t ? d : "", " ").concat(b ? c : "").trim(),\n          v = null !== (n = l["aria-invalid"]) && void 0 !== n ? n : f;\n        return {\n          labelId: s,\n          descriptionId: d,\n          feedbackId: c,\n          inputId: p,\n          inputProps: {\n            id: p,\n            "aria-labelledby": m,\n            "aria-describedby": h,\n            "aria-label": g,\n            "aria-disabled": o,\n            readOnly: l.readOnly ? l.readOnly : o,\n            "aria-invalid": v\n          }\n        };\n      }(I({\n        label: t,\n        description: o,\n        state: u,\n        id: j,\n        disabled: m\n      }, D)),\n      C = _.labelId,\n      T = _.descriptionId,\n      W = _.feedbackId,\n      X = _.inputId,\n      q = _.inputProps,\n      A = {\n        baseFontSize: V,\n        disabled: m,\n        errorMessage: v,\n        id: W,\n        size: f,\n        state: u,\n        successMessage: k\n      };\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_leafygreen_ui_leafygreen_provider__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .ZP, {\n      darkMode: z\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(R, {\n      value: {\n        disabled: m,\n        size: f,\n        state: u,\n        inputProps: q,\n        optional: N\n      }\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", M({\n      className: (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.cx)(L, E),\n      ref: r\n    }, D), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {\n      className: (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.cx)($, F({}, ee, !(!t && !o)))\n    }, t && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_leafygreen_ui_typography__WEBPACK_IMPORTED_MODULE_4__/* .Label */ .__, {\n      "data-testid": P.label,\n      className: L,\n      htmlFor: X,\n      id: C,\n      disabled: m\n    }, t), o && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_leafygreen_ui_typography__WEBPACK_IMPORTED_MODULE_4__/* .Description */ .dk, {\n      "data-testid": P.description,\n      className: L,\n      id: T,\n      disabled: m\n    }, o)), s, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(le, A))));\n  });\nNe.displayName = "FormField";\nvar je = (0,_leafygreen_ui_lib__WEBPACK_IMPORTED_MODULE_7__/* .createUniqueClassName */ .hy)("form-field-input"),\n  Pe = (0,_leafygreen_ui_lib__WEBPACK_IMPORTED_MODULE_7__/* .createUniqueClassName */ .hy)("form-field-icon"),\n  Se = function Se(e) {\n    return "0 0 0 100px ".concat(e, " inset");\n  },\n  Fe = (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.css)(se || (se = V(["\\n  display: flex;\\n  align-items: center;\\n  gap: ", "px;\\n  font-size: inherit;\\n  line-height: inherit;\\n  font-family: ", ";\\n  width: 100%;\\n  height: 36px;\\n  font-weight: ", ";\\n  border: 1px solid;\\n  z-index: 1;\\n  outline: none;\\n  border-radius: 6px;\\n  transition: ", "ms ease-in-out;\\n  transition-property: border-color, box-shadow;\\n  z-index: 0;\\n\\n  & .", " {\\n    font-family: ", ";\\n    color: inherit;\\n    background-color: inherit;\\n    font-size: inherit;\\n    line-height: inherit;\\n    outline: none;\\n    border: none;\\n  }\\n\\n  & .", " svg,\\n  & svg {\\n    min-height: 16px;\\n    min-width: 16px;\\n  }\\n"])), _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .spacing */ .W0[1], _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .fontFamilies */ .Vl["default"], _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .fontWeights */ .vC.regular, _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .transitionDuration */ .nV["default"], je, _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .fontFamilies */ .Vl["default"], Pe),\n  Me = function Me(e) {\n    return (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.css)(ce || (ce = V(["\\n  @supports selector(:has(a, b)) {\\n    &:focus-within:not(:has(.", ":focus)) {\\n      ", \'\\n    }\\n  }\\n\\n  /* Fallback for when "has" is unsupported */\\n  @supports not selector(:has(a, b)) {\\n    &:focus-within {\\n      \', "\\n    }\\n  }\\n"])), Pe, e, e);\n  },\n  De = F(F({}, _leafygreen_ui_lib__WEBPACK_IMPORTED_MODULE_7__/* .Theme */ .Q2.Light, Me("\\n     {\\n      box-shadow: ".concat(_leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .focusRing */ .kN.light.input, ";\\n      border-color: ").concat(_leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_8__/* .palette */ .D.white, ";\\n    }\\n  "))), _leafygreen_ui_lib__WEBPACK_IMPORTED_MODULE_7__/* .Theme */ .Q2.Dark, Me("\\n     {\\n      box-shadow: ".concat(_leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .focusRing */ .kN.dark.input, ";\\n      border-color: ").concat(_leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_8__/* .palette */ .D.gray.dark4, ";\\n    }\\n  "))),\n  Ie = "&:has(button.".concat(Pe, ")"),\n  He = F(F(F(F({}, _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .Size */ .$u.XSmall, (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.css)(ue || (ue = V(["\\n    height: 22px;\\n    padding-inline: ", "px;\\n\\n    ", " {\\n      padding-inline-end: ", "px;\\n    }\\n  "])), _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .spacing */ .W0[200], Ie, _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .spacing */ .W0[100])), _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .Size */ .$u.Small, (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.css)(pe || (pe = V(["\\n    height: 28px;\\n    padding-inline: ", "px;\\n\\n    ", " {\\n      padding-inline-end: ", "px;\\n    }\\n  "])), _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .spacing */ .W0[200], Ie, _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .spacing */ .W0[100])), _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .Size */ .$u.Default, (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.css)(fe || (fe = V(["\\n    height: 36px;\\n    padding-inline: ", "px;\\n\\n    ", " {\\n      padding-inline-end: ", "px;\\n    }\\n  "])), _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .spacing */ .W0[300], Ie, _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .spacing */ .W0[150])), _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .Size */ .$u.Large, (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.css)(be || (be = V(["\\n    height: 48px;\\n    padding-inline: ", "px;\\n\\n    ", " {\\n      padding-inline-end: ", "px;\\n    }\\n  "])), _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .spacing */ .W0[300], Ie, _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .spacing */ .W0[200]));\nfunction Ve(e) {\n  var n = e.disabled,\n    r = e.size,\n    a = e.state,\n    o = e.theme;\n  return (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.cx)(Fe, function (e) {\n    var n = e === _leafygreen_ui_lib__WEBPACK_IMPORTED_MODULE_7__/* .Theme */ .Q2.Dark ? _leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_8__/* .palette */ .D.gray.dark4 : _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .color */ .$_.light.background.primary["default"];\n    return (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.css)(de || (de = V(["\\n    color: ", ";\\n    background: ", ";\\n    border: 1px solid;\\n\\n    & .", " {\\n      &:-webkit-autofill {\\n        color: ", ";\\n        background: ", ";\\n        border: 1px solid ", ";\\n        -webkit-text-fill-color: ", ";\\n        box-shadow: ", ";\\n\\n        &:focus {\\n          box-shadow: ", ",\\n            ", ";\\n          border-color: ", ";\\n        }\\n\\n        &:hover:not(:focus) {\\n          box-shadow: ", ",\\n            ", ";\\n        }\\n      }\\n\\n      &::placeholder {\\n        font-weight: ", ";\\n        color: ", ";\\n      }\\n    }\\n  "])), _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .color */ .$_[e].text.primary["default"], n, je, _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .color */ .$_[e].text.primary["default"], n, _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .color */ .$_[e].border.primary["default"], _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .color */ .$_[e].text.primary["default"], Se(n), Se(n), _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .focusRing */ .kN[e].input, _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .color */ .$_[e].border.primary.focus, Se(n), _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .hoverRing */ .m$[e].gray, _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .fontWeights */ .vC.regular, _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .color */ .$_[e].text.placeholder["default"]);\n  }(o), He[r], F(F({}, (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.cx)(function (e) {\n    var n = e.theme,\n      r = e.state;\n    return F(F(F({}, J.Error, (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.css)(me || (me = V(["\\n      border-color: ", ";\\n\\n      &:hover,\\n      &:active {\\n        &:not(:focus) {\\n          box-shadow: ", ";\\n        }\\n      }\\n    "])), _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .color */ .$_[n].border.error["default"], _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .hoverRing */ .m$[n].red)), J.None, (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.css)(ge || (ge = V(["\\n      border-color: ", ";\\n\\n      &:hover,\\n      &:active {\\n        &:not(:focus) {\\n          box-shadow: ", ";\\n        }\\n      }\\n    "])), _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .color */ .$_[n].border.primary["default"], _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .hoverRing */ .m$[n].gray)), J.Valid, (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.css)(he || (he = V(["\\n      border-color: ", ";\\n\\n      &:hover,\\n      &:active {\\n        &:not(:focus) {\\n          box-shadow: ", ";\\n        }\\n      }\\n    "])), _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .color */ .$_[n].border.success["default"], _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .hoverRing */ .m$[n].green))[r];\n  }({\n    theme: o,\n    state: a\n  }), De[o]), !n), function (e) {\n    return (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.css)(ve || (ve = V(["\\n    cursor: not-allowed;\\n    color: ", ";\\n    background-color: ", ";\\n    border-color: ", ";\\n\\n    &:hover,\\n    &:active {\\n      &:not(:focus) {\\n        box-shadow: inherit;\\n      }\\n    }\\n\\n    & .", " {\\n      cursor: not-allowed;\\n      pointer-events: none;\\n      color: ", ";\\n\\n      &::placeholder {\\n        color: inherit;\\n      }\\n\\n      &:-webkit-autofill {\\n        &,\\n        &:hover,\\n        &:focus {\\n          appearance: none;\\n\\n          border: 1px solid ", ";\\n          -webkit-text-fill-color: ", ";\\n          box-shadow: ", ";\\n        }\\n\\n        &:hover:not(:focus) {\\n          box-shadow: inherit;\\n        }\\n      }\\n    }\\n  "])), _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .color */ .$_[e].text.disabled["default"], _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .color */ .$_[e].background.disabled["default"], _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .color */ .$_[e].border.disabled["default"], je, _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .color */ .$_[e].text.disabled["default"], _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .color */ .$_[e].border.disabled.hover, _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .color */ .$_[e].text.disabled.hover, Se(_leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .color */ .$_[e].background.disabled.hover));\n  }(o), n));\n}\nvar Le = (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.css)(ye || (ye = V(["\\n  width: 100%;\\n"]))),\n  _e = (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.css)(xe || (xe = V(["\\n  display: flex;\\n  align-items: center;\\n  gap: ", "px;\\n"])), _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .spacing */ .W0[100]),\n  Ce = function Ce(e) {\n    return (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.css)(we || (we = V(["\\n    color: ", ";\\n  "])), _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .color */ .$_[e].icon.disabled["default"]);\n  },\n  Te = function Te(e) {\n    return (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.css)(ke || (ke = V(["\\n    color: ", ";\\n  "])), _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .color */ .$_[e].icon.secondary["default"]);\n  },\n  We = function We(e) {\n    return (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.css)(Oe || (Oe = V(["\\n    color: ", ";\\n\\n    font-size: 12px;\\n    line-height: 12px;\\n    font-style: italic;\\n    font-weight: ", ";\\n    display: flex;\\n    align-items: center;\\n    > p {\\n      margin: 0;\\n    }\\n  "])), _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .color */ .$_[e].text.secondary["default"], _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .fontWeights */ .vC.regular);\n  },\n  Xe = ["contentEnd", "className", "children"],\n  qe = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(function (n, r) {\n    var t = n.contentEnd,\n      a = n.className,\n      s = n.children,\n      d = H(n, Xe),\n      c = (0,_leafygreen_ui_leafygreen_provider__WEBPACK_IMPORTED_MODULE_2__/* .useDarkMode */ .vs)().theme,\n      u = U(),\n      p = u.disabled,\n      f = u.size,\n      b = u.state,\n      m = u.inputProps,\n      g = u.optional,\n      h = Ve({\n        disabled: p,\n        size: null != f ? f : _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .Size */ .$u.Default,\n        state: b,\n        theme: c\n      }),\n      v = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(s, I(I({}, m), {}, {\n        className: (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.cx)(je, s.props.className)\n      })),\n      y = b === J.None && !p && g,\n      x = y || t;\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", M({}, d, {\n      ref: r,\n      className: (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.cx)(h, a)\n    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {\n      className: Le\n    }, v), x && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {\n      className: _e\n    }, y && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {\n      "data-lgid": P.optional,\n      className: We(c)\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("p", null, "Optional")), t && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(t, {\n      className: (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.cx)(Pe, Te(c), F({}, Ce(c), p), t.props.className)\n    })));\n  });\nqe.displayName = "FormFieldInputWrapper";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/form-field/dist/esm/index.js\n')},"./tools/storybook-utils/dist/esm/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bN: () => (/* binding */ n),\n/* harmony export */   xZ: () => (/* binding */ r)\n/* harmony export */ });\n/* unused harmony exports IntrinsicElements, StoryMeta, storybookExcludedArgTypes */\n/* harmony import */ var lodash_mergeWith__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/lodash/mergeWith.js");\n/* harmony import */ var lodash_mergeWith__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_mergeWith__WEBPACK_IMPORTED_MODULE_0__);\n\nvar e = ["small", "button", "a", "abbr", "address", "article", "aside", "b", "big", "blockquote", "caption", "cite", "code", "dd", "del", "details", "dfn", "dialog", "div", "em", "fieldset", "figcaption", "figure", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "i", "ins", "kbd", "keygen", "label", "legend", "li", "main", "map", "mark", "menu", "menuitem", "meter", "nav", "noscript", "ol", "p", "picture", "pre", "progress", "q", "rp", "rt", "ruby", "s", "samp", "slot", "script", "section", "select", "span", "strong", "style", "sub", "summary", "sup", "template", "tbody", "td", "tfoot", "th", "thead", "time", "title", "tr", "u", "ul"],\n  n = {\n    baseFontSize: {\n      description: "The base font size passed to the LeafyGreenProvider that wraps the component",\n      control: {\n        type: "radio"\n      },\n      options: [14, 16]\n    },\n    updatedBaseFontSize: {\n      description: "The base font size passed to the LeafyGreenProvider that wraps the component. Uses the updated font size values for Euclid Circular A.",\n      control: {\n        type: "radio"\n      },\n      options: [13, 16]\n    },\n    darkMode: {\n      description: "Render the component in dark mode.",\n      control: "boolean"\n    },\n    children: {\n      description: "Element rendered inside the component",\n      control: "text"\n    },\n    as: {\n      description: "The component will be rendered in HTML as the element selected here",\n      options: e,\n      type: {\n        name: "string"\n      },\n      control: {\n        type: "select"\n      },\n      defaultValue: "button"\n    }\n  },\n  t = {\n    "aria-controls": {\n      control: "none"\n    },\n    "aria-describedby": {\n      control: "none"\n    },\n    "aria-label": {\n      control: "none"\n    },\n    "aria-labelledby": {\n      control: "none"\n    },\n    "data-lgid": {\n      control: "none"\n    },\n    className: {\n      control: "none"\n    },\n    id: {\n      control: "none"\n    },\n    onBlur: {\n      control: "none"\n    },\n    onCancel: {\n      control: "none"\n    },\n    onChange: {\n      control: "none"\n    },\n    onClear: {\n      control: "none"\n    },\n    onClick: {\n      control: "none"\n    },\n    onClose: {\n      control: "none"\n    },\n    onConfirm: {\n      control: "none"\n    },\n    onDismiss: {\n      control: "none"\n    },\n    onFilter: {\n      control: "none"\n    },\n    onSubmit: {\n      control: "none"\n    },\n    portalClassName: {\n      control: "none"\n    },\n    portalContainer: {\n      control: "none"\n    },\n    popoverZIndex: {\n      control: "none"\n    },\n    ref: {\n      control: "none"\n    },\n    scrollContainer: {\n      control: "none"\n    },\n    usePortal: {\n      control: "none"\n    }\n  },\n  r = ["aria-controls", "aria-describedby", "aria-label", "aria-labelledby", "aria-describedby", "className", "data-lgid", "id", "onBlur", "onCancel", "onChange", "onClear", "onClick", "onConfirm", "onDismiss", "onFilter", "popoverZIndex", "portalClassName", "portalContainer", "ref", "setOpen", "scrollContainer", "usePortal"],\n  a = function a() {\n    return o(arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, {}, function (o, e) {\n      return Array.isArray(o) ? o.concat(e) : "string" == typeof o ? o : void 0;\n    });\n  };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./tools/storybook-utils/dist/esm/index.js\n')},"./tools/test-harnesses/dist/esm/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* unused harmony exports findByLgId, getByLgId, queryBySelector, renderAsyncTest */\n/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/typeof.js");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("webpack/sharing/consume/default/react/react");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _testing_library_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/@testing-library/dom/dist/@testing-library/dom.esm.js");\n\n\n\nfunction i(t, e) {\n  (null == e || e > t.length) && (e = t.length);\n  for (var n = 0, r = Array(e); n < e; n++) r[n] = t[n];\n  return r;\n}\nfunction u(t, e, n) {\n  return (e = function (t) {\n    var e = function (t, e) {\n      if ("object" != _typeof(t) || !t) return t;\n      var n = t[Symbol.toPrimitive];\n      if (void 0 !== n) {\n        var r = n.call(t, e);\n        if ("object" != _typeof(r)) return r;\n        throw new TypeError("@@toPrimitive must return a primitive value.");\n      }\n      return String(t);\n    }(t, "string");\n    return "symbol" == _typeof(e) ? e : e + "";\n  }(e)) in t ? Object.defineProperty(t, e, {\n    value: n,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : t[e] = n, t;\n}\nfunction c(t, e) {\n  var n = Object.keys(t);\n  if (Object.getOwnPropertySymbols) {\n    var r = Object.getOwnPropertySymbols(t);\n    e && (r = r.filter(function (e) {\n      return Object.getOwnPropertyDescriptor(t, e).enumerable;\n    })), n.push.apply(n, r);\n  }\n  return n;\n}\nfunction l(t) {\n  for (var e = 1; e < arguments.length; e++) {\n    var n = null != arguments[e] ? arguments[e] : {};\n    e % 2 ? c(Object(n), !0).forEach(function (e) {\n      u(t, e, n[e]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : c(Object(n)).forEach(function (e) {\n      Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e));\n    });\n  }\n  return t;\n}\nfunction a(t, e) {\n  return function (t) {\n    if (Array.isArray(t)) return t;\n  }(t) || function (t, e) {\n    var n = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];\n    if (null != n) {\n      var r,\n        o,\n        i,\n        u,\n        c = [],\n        l = !0,\n        a = !1;\n      try {\n        if (i = (n = n.call(t)).next, 0 === e) {\n          if (Object(n) !== n) return;\n          l = !1;\n        } else for (; !(l = (r = i.call(n)).done) && (c.push(r.value), c.length !== e); l = !0);\n      } catch (t) {\n        a = !0, o = t;\n      } finally {\n        try {\n          if (!l && null != n["return"] && (u = n["return"](), Object(u) !== u)) return;\n        } finally {\n          if (a) throw o;\n        }\n      }\n      return c;\n    }\n  }(t, e) || function (t, e) {\n    if (t) {\n      if ("string" == typeof t) return i(t, e);\n      var n = {}.toString.call(t).slice(8, -1);\n      return "Object" === n && t.constructor && (n = t.constructor.name), "Map" === n || "Set" === n ? Array.from(t) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? i(t, e) : void 0;\n    }\n  }(t, e) || function () {\n    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n  }();\n}\nfunction f(t) {\n  return f = "function" == typeof Symbol && "symbol" == (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(Symbol.iterator) ? function (t) {\n    return (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(t);\n  } : function (t) {\n    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(t);\n  }, f(t);\n}\nvar y = function y(n, r) {\n  var o = "async-test-component",\n    i = function i() {\n      var r = a(e(!1), 2),\n        i = r[0],\n        u = r[1];\n      return /*#__PURE__*/t.createElement(t.Fragment, null, /*#__PURE__*/t.createElement("button", {\n        "data-testid": "test-component-button",\n        onClick: function onClick() {\n          i ? u(!1) : setTimeout(function () {\n            u(!0);\n          }, 500);\n        }\n      }), i && /*#__PURE__*/t.createElement("div", {\n        "data-testid": o\n      }, /*#__PURE__*/t.createElement(t.Fragment, null, /*#__PURE__*/t.createElement("p", null, "Inside Modal"), n)));\n    },\n    u = r( /*#__PURE__*/t.createElement(i, null)),\n    c = u.getByTestId("test-component-button");\n  return l(l({}, u), {}, {\n    openButton: c,\n    asyncTestComponentId: o\n  });\n};\nvar d = "data-lgid",\n  m = function m() {\n    for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++) e[n] = arguments[n];\n    return function (t) {\n      if (!t || "function" != typeof t.querySelector || "function" != typeof t.querySelectorAll) throw new TypeError("Expected container to be an Element, a Document or a DocumentFragment but got ".concat((e = t, "object" === f(e) ? null === e ? "null" : e.constructor.name : f(e)), "."));\n      var e;\n    }(e[0]), _testing_library_dom__WEBPACK_IMPORTED_MODULE_1__.queryAllByAttribute.apply(void 0, [d].concat(e));\n  },\n  p = a((0,_testing_library_dom__WEBPACK_IMPORTED_MODULE_1__.buildQueries)(m, function (t, e) {\n    return "Found multiple elements by: [".concat(d, \'="\').concat(e, \'"]\');\n  }, function (t, e) {\n    return "Unable to find an element by: [".concat(d, \'="\').concat(e, \'"]\');\n  }), 5),\n  s = p[0],\n  b = p[1],\n  g = p[2],\n  v = p[3],\n  I = p[4],\n  O = Object.freeze({\n    __proto__: null,\n    findAllByTestId: v,\n    findByTestId: I,\n    getAllByTestId: b,\n    getByTestId: g,\n    queryAllByTestId: m,\n    queryByTestId: s\n  });\nvar j = function () {\n    var t = function () {\n      if ("undefined" != typeof window) return window.document;\n    }();\n    if (!t) return {\n      findByLgId: void 0,\n      getByLgId: void 0,\n      queryByLgId: void 0\n    };\n    var e = (0,_testing_library_dom__WEBPACK_IMPORTED_MODULE_1__.getQueriesForElement)(t.body, O);\n    return {\n      findByLgId: e.findByTestId,\n      getByLgId: e.getByTestId,\n      queryByLgId: e.queryByTestId\n    };\n  }(),\n  w = function w(t, e) {\n    return t.querySelector(e);\n  },\n  B = j.findByLgId,\n  S = j.getByLgId;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./tools/test-harnesses/dist/esm/index.js\n')},"?4f7e":()=>{}}]);