(self.webpackChunkleafygreen_ui=self.webpackChunkleafygreen_ui||[]).push([[4647],{"./packages/a11y/dist/esm/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Lk: () => (/* binding */ b),\n/* harmony export */   TX: () => (/* binding */ w),\n/* harmony export */   Tb: () => (/* binding */ y),\n/* harmony export */   nk: () => (/* binding */ d)\n/* harmony export */ });\n/* unused harmony export useAccessibleForm */\n/* harmony import */ var _leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/emotion/dist/esm/index.js");\n/* harmony import */ var _leafygreen_ui_hooks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/hooks/dist/esm/index.js");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("webpack/sharing/consume/default/react/react");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\n\nfunction l(r, e) {\n  e > r.length && (e = r.length);\n  for (var n = 0, t = Array(e); n < e; n++) t[n] = r[n];\n  return t;\n}\nfunction u(r, e, n) {\n  return (e = function (r) {\n    var e = function (r, e) {\n      if ("object" != _typeof(r) || !r) return r;\n      var n = r[Symbol.toPrimitive];\n      if (void 0 !== n) {\n        var t = n.call(r, e);\n        if ("object" != _typeof(t)) return t;\n        throw new TypeError("@@toPrimitive must return a primitive value.");\n      }\n      return String(r);\n    }(r, "string");\n    return "symbol" == _typeof(e) ? e : e + "";\n  }(e)) in r ? Object.defineProperty(r, e, {\n    value: n,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : r[e] = n, r;\n}\nfunction c() {\n  return c = Object.assign ? Object.assign.bind() : function (r) {\n    for (var e = 1; e < arguments.length; e++) {\n      var n = arguments[e];\n      for (var t in n) ({}).hasOwnProperty.call(n, t) && (r[t] = n[t]);\n    }\n    return r;\n  }, c.apply(null, arguments);\n}\nfunction f(r, e) {\n  return function (r) {\n    if (Array.isArray(r)) return r;\n  }(r) || function (r, e) {\n    var n = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];\n    if (null != n) {\n      var t,\n        i,\n        o,\n        a,\n        l = [],\n        u = !0,\n        c = !1;\n      try {\n        if (o = (n = n.call(r)).next, 0 === e) ;else for (; !(u = (t = o.call(n)).done) && (l.push(t.value), l.length !== e); u = !0);\n      } catch (r) {\n        c = !0, i = r;\n      } finally {\n        try {\n          if (!u && null != n["return"] && (a = n["return"](), Object(a) !== a)) return;\n        } finally {\n          if (c) throw i;\n        }\n      }\n      return l;\n    }\n  }(r, e) || function (r, e) {\n    if (r) {\n      if ("string" == typeof r) return l(r, e);\n      var n = {}.toString.call(r).slice(8, -1);\n      return "Object" === n && r.constructor && (n = r.constructor.name), "Map" === n || "Set" === n ? Array.from(r) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? l(r, e) : void 0;\n    }\n  }(r, e) || function () {\n    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n  }();\n}\nfunction s(r, e) {\n  return e || (e = r.slice(0)), Object.freeze(Object.defineProperties(r, {\n    raw: {\n      value: Object.freeze(e)\n    }\n  }));\n}\nvar p;\nfunction d(e) {\n  return null != e && "string" == typeof e ? (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_0__.css)(p || (p = s(["\\n      @media (prefers-reduced-motion: reduce) {\\n        ", "\\n      }\\n    "])), e) : "";\n}\nvar m = function m(r) {\n  var e = n({\n      prefix: "lgui-input",\n      id: r\n    }),\n    t = n({\n      prefix: "lgui-label"\n    });\n  return {\n    labelProps: {\n      id: t,\n      htmlFor: e\n    },\n    inputProps: u({\n      id: e\n    }, "aria-labelledby", t)\n  };\n};\nfunction y() {\n  var r = f((0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(!1), 2),\n    e = r[0],\n    n = r[1],\n    t = function t(r) {\n      n(r.matches);\n    };\n  return (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(function () {\n    if (window && window.matchMedia && "function" == typeof window.matchMedia) {\n      var r = window.matchMedia("(prefers-reduced-motion: reduce)");\n      return n(r.matches), r.addEventListener("change", t), function () {\n        return r.removeEventListener("change", t);\n      };\n    }\n  }, []), e;\n}\nfunction b(r, e) {\n  r["aria-label"] || r["aria-labelledby"] || console.error("For screen-reader accessibility, aria-label or aria-labelledby must be provided".concat(e ? " to ".concat(e) : "", "."));\n}\nvar v,\n  h = ["children", "className"],\n  g = (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_0__.css)(v || (v = s(["\\n  clip: rect(0, 0, 0, 0);\\n  clip-path: inset(50%);\\n  height: 1px;\\n  width: 1px;\\n  margin: -1px;\\n  overflow: hidden;\\n  padding: 0;\\n  position: absolute;\\n"])));\nfunction w(r) {\n  var n = r.children,\n    i = r.className,\n    o = function (r, e) {\n      if (null == r) return {};\n      var n,\n        t,\n        i = function (r, e) {\n          if (null == r) return {};\n          var n = {};\n          for (var t in r) if ({}.hasOwnProperty.call(r, t)) {\n            if (e.indexOf(t) >= 0) continue;\n            n[t] = r[t];\n          }\n          return n;\n        }(r, e);\n      if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(r);\n        for (t = 0; t < o.length; t++) n = o[t], e.indexOf(n) >= 0 || {}.propertyIsEnumerable.call(r, n) && (i[n] = r[n]);\n      }\n      return i;\n    }(r, h);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement("div", c({}, o, {\n    className: (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_0__.cx)(g, i)\n  }), n);\n}\nw.displayName = "VisuallyHidden", w.propTypes =  false ? 0 : {};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/a11y/dist/esm/index.js\n')},"./packages/emotion/dist/esm/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cache: () => (/* binding */ y),\n/* harmony export */   css: () => (/* binding */ m),\n/* harmony export */   cx: () => (/* binding */ o),\n/* harmony export */   "default": () => (/* binding */ t),\n/* harmony export */   extractCritical: () => (/* binding */ g),\n/* harmony export */   flush: () => (/* binding */ a),\n/* harmony export */   getRegisteredStyles: () => (/* binding */ i),\n/* harmony export */   hydrate: () => (/* binding */ s),\n/* harmony export */   injectGlobal: () => (/* binding */ n),\n/* harmony export */   keyframes: () => (/* binding */ l),\n/* harmony export */   merge: () => (/* binding */ c),\n/* harmony export */   renderStylesToNodeStream: () => (/* binding */ S),\n/* harmony export */   renderStylesToString: () => (/* binding */ p),\n/* harmony export */   sheet: () => (/* binding */ d)\n/* harmony export */ });\n/* harmony import */ var _emotion_server_create_instance__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/@emotion/server/create-instance/dist/emotion-server-create-instance.browser.esm.js");\n/* harmony import */ var _emotion_css_create_instance__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/emotion/node_modules/@emotion/css/create-instance/dist/emotion-css-create-instance.esm.js");\n\n\nvar t = (0,_emotion_css_create_instance__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)({\n    key: "leafygreen-ui",\n    prepend: !0\n  }),\n  a = t.flush,\n  s = t.hydrate,\n  o = t.cx,\n  c = t.merge,\n  i = t.getRegisteredStyles,\n  n = t.injectGlobal,\n  l = t.keyframes,\n  m = t.css,\n  d = t.sheet,\n  y = t.cache,\n  f = (0,_emotion_server_create_instance__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(y),\n  g = f.extractCritical,\n  p = f.renderStylesToString,\n  S = f.renderStylesToNodeStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9lbW90aW9uL2Rpc3QvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWdCQSxJQUFBQSxDQUFBLEdBSFNDLGlGQUFBLENBTGlCO0lBQ3RCQyxHQUFBLEVBQUs7SUFDTEMsT0FBQSxHQUFTO0VBQUE7RUNMWEMsQ0FBQSxHQVVFSixDQUFBLENBVkZLLEtBQUE7RUFDQUMsQ0FBQSxHQVNFTixDQUFBLENBVEZPLE9BQUE7RUFDQUMsQ0FBQSxHQVFFUixDQUFBLENBUkZTLEVBQUE7RUFDQUMsQ0FBQSxHQU9FVixDQUFBLENBUEZXLEtBQUE7RUFDQUMsQ0FBQSxHQU1FWixDQUFBLENBTkZhLG1CQUFBO0VBQ0FDLENBQUEsR0FLRWQsQ0FBQSxDQUxGZSxZQUFBO0VBQ0FDLENBQUEsR0FJRWhCLENBQUEsQ0FKRmlCLFNBQUE7RUFDQUMsQ0FBQSxHQUdFbEIsQ0FBQSxDQUhGbUIsR0FBQTtFQUNBQyxDQUFBLEdBRUVwQixDQUFBLENBRkZxQixLQUFBO0VBQ0FDLENBQUEsR0FDRXRCLENBQUEsQ0FERnVCLEtBQUE7RUFHS0MsQ0FBQSxHQUlIQyxvRkFBQSxDQUFvQkgsQ0FBQTtFQUh0QkksQ0FBQSxHQUFlRixDQUFBLENBQWZHLGVBQUE7RUFDQUMsQ0FBQSxHQUFvQkosQ0FBQSxDQUFwQkssb0JBQUE7RUFDQUMsQ0FBQSxHQUF3Qk4sQ0FBQSxDQUF4Qk8sd0JBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWFmeWdyZWVuLXVpLy4uLy4uL3NyYy9lbW90aW9uLnRzP2U5ZGYiLCJ3ZWJwYWNrOi8vbGVhZnlncmVlbi11aS8uLi8uLi9zcmMvaW5kZXgudHM/MGUzZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY3JlYXRlRW1vdGlvbiwgeyBPcHRpb25zIH0gZnJvbSAnQGVtb3Rpb24vY3NzL2NyZWF0ZS1pbnN0YW5jZSc7XG5cbi8vIEluIGNhc2UgdGhlIG9yaWdpbmFsIGVtb3Rpb24sIGFuZCBjcmVhdGUtZW1vdGlvbiBwYWNrYWdlcyBiZWNvbWUgdW5zdXBwb3J0ZWQsXG4vLyB3ZSBzaG91bGQgY29uc2lkZXIgaW1wbGVtZW50aW5nIG91ciBvd24gd3JhcHBlciBhcm91bmQgY3JlYXRlQ2FjaGUgbGlrZSB3aGF0J3Ncbi8vIGJlaW5nIGRvbmUgaGVyZTpcbi8vXG4vLyBodHRwczovL2dpdGh1Yi5jb20vZW1vdGlvbi1qcy9lbW90aW9uL2Jsb2IvZW1vdGlvbiU0MDEwLjAuNi9wYWNrYWdlcy9jcmVhdGUtZW1vdGlvbi9zcmMvaW5kZXguanNcbmZ1bmN0aW9uIGNyZWF0ZUVtb3Rpb25JbnN0YW5jZSgpIHtcbiAgY29uc3QgY29uZmlnOiBPcHRpb25zID0ge1xuICAgIGtleTogJ2xlYWZ5Z3JlZW4tdWknLFxuICAgIHByZXBlbmQ6IHRydWUsXG4gIH07XG5cbiAgcmV0dXJuIGNyZWF0ZUVtb3Rpb24oY29uZmlnKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlRW1vdGlvbkluc3RhbmNlKCk7XG4iLCJpbXBvcnQgY3JlYXRlRW1vdGlvblNlcnZlciBmcm9tICdAZW1vdGlvbi9zZXJ2ZXIvY3JlYXRlLWluc3RhbmNlJztcblxuaW1wb3J0IGVtb3Rpb24gZnJvbSAnLi9lbW90aW9uJztcblxuZXhwb3J0IGNvbnN0IHtcbiAgZmx1c2gsXG4gIGh5ZHJhdGUsXG4gIGN4LFxuICBtZXJnZSxcbiAgZ2V0UmVnaXN0ZXJlZFN0eWxlcyxcbiAgaW5qZWN0R2xvYmFsLFxuICBrZXlmcmFtZXMsXG4gIGNzcyxcbiAgc2hlZXQsXG4gIGNhY2hlLFxufSA9IGVtb3Rpb247XG5cbmV4cG9ydCBjb25zdCB7XG4gIGV4dHJhY3RDcml0aWNhbCxcbiAgcmVuZGVyU3R5bGVzVG9TdHJpbmcsXG4gIHJlbmRlclN0eWxlc1RvTm9kZVN0cmVhbSxcbn0gPSBjcmVhdGVFbW90aW9uU2VydmVyKGNhY2hlKTtcblxuZXhwb3J0IGRlZmF1bHQgZW1vdGlvbjtcbiJdLCJuYW1lcyI6WyJ0IiwiciIsImtleSIsInByZXBlbmQiLCJhIiwiZmx1c2giLCJzIiwiaHlkcmF0ZSIsIm8iLCJjeCIsImMiLCJtZXJnZSIsImkiLCJnZXRSZWdpc3RlcmVkU3R5bGVzIiwibiIsImluamVjdEdsb2JhbCIsImwiLCJrZXlmcmFtZXMiLCJtIiwiY3NzIiwiZCIsInNoZWV0IiwieSIsImNhY2hlIiwiZiIsImUiLCJnIiwiZXh0cmFjdENyaXRpY2FsIiwicCIsInJlbmRlclN0eWxlc1RvU3RyaW5nIiwiUyIsInJlbmRlclN0eWxlc1RvTm9kZVN0cmVhbSIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./packages/emotion/dist/esm/index.js\n')},"./packages/hooks/dist/esm/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   D9: () => (/* binding */ U),\n/* harmony export */   DK: () => (/* binding */ C),\n/* harmony export */   Iy: () => (/* binding */ R),\n/* harmony export */   LI: () => (/* binding */ M),\n/* harmony export */   OR: () => (/* binding */ P),\n/* harmony export */   OZ: () => (/* binding */ E),\n/* harmony export */   Sj: () => (/* binding */ A),\n/* harmony export */   Uu: () => (/* binding */ S),\n/* harmony export */   Uv: () => (/* binding */ L),\n/* harmony export */   V$: () => (/* binding */ H),\n/* harmony export */   YM: () => (/* binding */ z),\n/* harmony export */   nP: () => (/* binding */ j),\n/* harmony export */   qX: () => (/* binding */ T),\n/* harmony export */   rr: () => (/* binding */ d),\n/* harmony export */   ts: () => (/* binding */ I),\n/* harmony export */   ue: () => (/* binding */ D)\n/* harmony export */ });\n/* unused harmony exports useForceRerender, useObservedRef, usePoller */\n/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/typeof.js");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("webpack/sharing/consume/default/react/react");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/lodash/debounce.js");\n/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_debounce__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lodash_isUndefined__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/lodash/isUndefined.js");\n/* harmony import */ var lodash_isUndefined__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_isUndefined__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _leafygreen_ui_lib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/lib/dist/esm/index.js");\n/* harmony import */ var lodash_isEqual__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/lodash/isEqual.js");\n/* harmony import */ var lodash_isEqual__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(lodash_isEqual__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\n\n\nvar d = function d(n, t) {\n  var e = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    if (n && n.current && t && t.current) {\n      var r = n.current.offsetTop,\n        o = t.current,\n        i = o.scrollTop;\n      (r > o.offsetHeight || r < i) && t.current.scrollTo({\n        top: r - e,\n        behavior: "smooth"\n      });\n    }\n  }, [t, n, e]);\n};\nfunction s(n, r) {\n  (null == r || r > n.length) && (r = n.length);\n  for (var t = 0, e = Array(r); t < r; t++) e[t] = n[t];\n  return e;\n}\nfunction p(n, r, t) {\n  return (r = function (n) {\n    var r = function (n, r) {\n      if ("object" != (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(n) || !n) return n;\n      var t = n[Symbol.toPrimitive];\n      if (void 0 !== t) {\n        var e = t.call(n, r);\n        if ("object" != (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(e)) return e;\n        throw new TypeError("@@toPrimitive must return a primitive value.");\n      }\n      return String(n);\n    }(n, "string");\n    return "symbol" == (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(r) ? r : r + "";\n  }(r)) in n ? Object.defineProperty(n, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : n[r] = t, n;\n}\nfunction y(n, r) {\n  var t = Object.keys(n);\n  if (Object.getOwnPropertySymbols) {\n    var e = Object.getOwnPropertySymbols(n);\n    r && (e = e.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(n, r).enumerable;\n    })), t.push.apply(t, e);\n  }\n  return t;\n}\nfunction m(n) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? y(Object(t), !0).forEach(function (r) {\n      p(n, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(n, Object.getOwnPropertyDescriptors(t)) : y(Object(t)).forEach(function (r) {\n      Object.defineProperty(n, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return n;\n}\nfunction b(n, r) {\n  return function (n) {\n    if (Array.isArray(n)) return n;\n  }(n) || function (n, r) {\n    var t = null == n ? null : "undefined" != typeof Symbol && n[Symbol.iterator] || n["@@iterator"];\n    if (null != t) {\n      var e,\n        o,\n        i,\n        u,\n        c = [],\n        a = !0,\n        l = !1;\n      try {\n        if (i = (t = t.call(n)).next, 0 === r) ;else for (; !(a = (e = i.call(t)).done) && (c.push(e.value), c.length !== r); a = !0);\n      } catch (n) {\n        l = !0, o = n;\n      } finally {\n        try {\n          if (!a && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;\n        } finally {\n          if (l) throw o;\n        }\n      }\n      return c;\n    }\n  }(n, r) || w(n, r) || function () {\n    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n  }();\n}\nfunction h(n) {\n  return function (n) {\n    if (Array.isArray(n)) return s(n);\n  }(n) || function (n) {\n    if ("undefined" != typeof Symbol && null != n[Symbol.iterator] || null != n["@@iterator"]) return Array.from(n);\n  }(n) || w(n) || function () {\n    throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n  }();\n}\nfunction g(n) {\n  return g = "function" == typeof Symbol && "symbol" == (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(Symbol.iterator) ? function (n) {\n    return (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(n);\n  } : function (n) {\n    return n && "function" == typeof Symbol && n.constructor === Symbol && n !== Symbol.prototype ? "symbol" : (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(n);\n  }, g(n);\n}\nfunction w(n, r) {\n  if (n) {\n    if ("string" == typeof n) return s(n, r);\n    var t = {}.toString.call(n).slice(8, -1);\n    return "Object" === t && n.constructor && (t = n.constructor.name), "Map" === t || "Set" === t ? Array.from(n) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? s(n, r) : void 0;\n  }\n}\nfunction O() {\n  return {\n    width: window.innerWidth,\n    height: window.innerHeight\n  };\n}\nfunction j() {\n  var n = b((0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null), 2),\n    e = n[0],\n    o = n[1];\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    o(O());\n    var n = lodash_debounce__WEBPACK_IMPORTED_MODULE_1___default()(function () {\n      return o(O());\n    }, 100);\n    return window.addEventListener("resize", n), function () {\n      return window.removeEventListener("resize", n);\n    };\n  }, []), e;\n}\nvar S = function S(n) {\n  var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 8,\n    t = j();\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {\n    if (t && n && n.current) {\n      var e = n.current.getBoundingClientRect(),\n        o = e.top,\n        i = e.bottom;\n      return Math.max(t.height - i, o) - r;\n    }\n  }, [t, n, r]);\n};\nfunction P(n, t) {\n  var e = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},\n    i = e.options,\n    u = e.enabled,\n    c = void 0 === u || u,\n    a = e.dependencies,\n    l = void 0 === a ? [c, n] : a,\n    f = e.element,\n    v = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(function () {});\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    v.current = t;\n  }, [t]), (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    if (!1 !== c) {\n      if ("once" === c || !0 === c) {\n        var r = function r(n) {\n            v.current(n);\n          },\n          t = m(m({}, i), {}, {\n            once: "once" === c\n          });\n        return (null != f ? f : document).addEventListener(n, r, t), function () {\n          (null != f ? f : document).removeEventListener(n, r, t);\n        };\n      }\n      console.error("Received value of type ".concat(g(c), " for property `enabled`. Expected a boolean."));\n    }\n  }, l);\n}\nfunction A(n, r) {\n  var t = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];\n  function e(n) {\n    var t,\n      e = n.target;\n    return Array.isArray(r) ? r.some(function (n) {\n      var r;\n      return null === (r = n.current) || void 0 === r ? void 0 : r.contains(e);\n    }) : (null === (t = r.current) || void 0 === t ? void 0 : t.contains(e)) || !1;\n  }\n  P("mousedown", function (n) {\n    e(n) || (n.preventDefault(), n.stopPropagation());\n  }, {\n    enabled: t\n  }), P("click", function (r) {\n    e(r) || (r.stopPropagation(), n());\n  }, {\n    options: {\n      capture: !0\n    },\n    enabled: t\n  });\n}\nvar E = function E(n, o, i) {\n  var u = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {\n      return !lodash_isUndefined__WEBPACK_IMPORTED_MODULE_2___default()(n);\n    }, []),\n    c = b((0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(i), 2),\n    v = c[0],\n    d = c[1],\n    s = function s(n) {\n      null == o || o(n), u || d(n.target.value);\n    };\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    lodash_isUndefined__WEBPACK_IMPORTED_MODULE_2___default()(n) && lodash_isUndefined__WEBPACK_IMPORTED_MODULE_2___default()(i) && _leafygreen_ui_lib__WEBPACK_IMPORTED_MODULE_3__/* .consoleOnce */ .X3.error("Warning: `useControlledValue` hook is being used without a value or initialValue. This will cause a React warning when the input changes. Please decide between using a controlled or uncontrolled input element, and provide either a controlledValue or initialValue to `useControlledValue`");\n  }, [n, i]), {\n    isControlled: u,\n    value: u ? n : v,\n    handleChange: s,\n    setUncontrolledValue: d,\n    updateValue: function updateValue(n, r) {\n      if (r.current) {\n        r.current.value = n;\n        var t = (0,_leafygreen_ui_lib__WEBPACK_IMPORTED_MODULE_3__/* .createSyntheticEvent */ .yA)(new Event("change", {\n          cancelable: !0,\n          bubbles: !0\n        }), r.current);\n        s(t);\n      }\n    }\n  };\n};\nfunction C(r) {\n  var t = null == r ? void 0 : r.prefix;\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function () {\n    var r = function (r) {\n      return function (t) {\n        if (t) {\n          if (r.get(t)) return r.get(t);\n          var e = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createRef();\n          return r.set(t, e), e;\n        }\n        _leafygreen_ui_lib__WEBPACK_IMPORTED_MODULE_3__/* .consoleOnce */ .X3.error("`useDynamicRefs`: Cannot get ref without key");\n      };\n    }(new Map());\n    return r;\n  }, [t]);\n}\nvar T = function T(n, r) {\n  return P("keydown", function (r) {\n    return function (n, r) {\n      27 === n.keyCode && (n.stopImmediatePropagation(), r());\n    }(r, n);\n  }, r);\n};\nfunction V() {\n  var n = b(t({}), 2)[1];\n  return i(function () {\n    return n({});\n  }, []);\n}\nfunction x(n) {\n  var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},\n    t = r.initialValue,\n    i = r.deps,\n    u = void 0 === i ? [] : i,\n    c = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(t);\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {\n    return {\n      get current() {\n        return c.current;\n      },\n      set current(r) {\n        c.current = r, n(r);\n      }\n    };\n  }, [n, c].concat(h(u)));\n}\nfunction I(n, r) {\n  var t = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (n, r) {\n    Array.isArray(n) ? n.forEach(t) : "function" == typeof n ? n(r) : n && (n.current = r);\n  }, []);\n  return x((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (r) {\n    return t(n, r);\n  }, [n, t]), {\n    initialValue: r\n  });\n}\nvar k = 0;\nfunction D(n) {\n  var e = n.prefix;\n  return function (n) {\n    var e = n.id,\n      o = n.prefix,\n      i = b((0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(e), 2),\n      u = i[0],\n      c = i[1];\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n      null == u && c(k += 1);\n    }, [u, o]), e || "".concat(null != o ? o : "lg", "-").concat(u);\n  }({\n    id: n.id,\n    prefix: e\n  });\n}\nvar M = function M() {\n  return ("undefined" == typeof window ? react__WEBPACK_IMPORTED_MODULE_0__.useEffect : react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect).apply(void 0, arguments);\n};\nfunction R(n, e, o) {\n  var i = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3],\n    u = b((0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(), 2),\n    c = u[0],\n    a = u[1];\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    if (i) {\n      var r = new MutationObserver(function () {\n        a(o.apply(void 0, arguments));\n      });\n      return n && r.observe(n, e), function () {\n        return r.disconnect();\n      };\n    }\n  }, [n, e, o, i]), c;\n}\nfunction L(n) {\n  var r = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n  return void 0 !== r.current && lodash_isEqual__WEBPACK_IMPORTED_MODULE_4___default()(r.current, n) || (r.current = n), r.current;\n}\nfunction B(n) {\n  var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},\n    i = e.interval,\n    u = void 0 === i ? 3e4 : i,\n    c = e.immediate,\n    a = void 0 === c || c,\n    l = e.enabled,\n    f = void 0 === l || l,\n    v = o(),\n    d = function () {\n      var n = function n() {\n          return "visible" === document.visibilityState;\n        },\n        e = b(t(!0), 2),\n        o = e[0],\n        i = e[1];\n      return r(function () {\n        i(n);\n      }, []), P("visibilitychange", function () {\n        i(n);\n      }), o;\n    }() && f;\n  r(function () {\n    v.current = n;\n  }), r(function () {\n    var n;\n    if (d) return a ? e() : r(), t;\n    function r() {\n      t(), n = setTimeout(e, u);\n    }\n    function t() {\n      clearTimeout(n);\n    }\n    function e() {\n      var n;\n      Promise.resolve(null === (n = v.current) || void 0 === n ? void 0 : n.call(v))["finally"](r);\n    }\n  }, [u, a, d]);\n}\nfunction U(n) {\n  var t = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    t.current = n;\n  }), t.current;\n}\nfunction z(n) {\n  var r = b((0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(n), 2),\n    e = r[0],\n    u = r[1],\n    c = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(e);\n  return [e, (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (n) {\n    u(n), c.current = n;\n  }, [u]), (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    return c.current;\n  }, [])];\n}\nfunction H(n) {\n  var r = b((0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1), 2),\n    e = r[0],\n    o = r[1];\n  if (lodash_isUndefined__WEBPACK_IMPORTED_MODULE_2___default()(n) || "function" != typeof n) return {\n    onBlur: function onBlur() {},\n    onChange: function onChange() {}\n  };\n  return {\n    onBlur: function onBlur(r) {\n      o(!0), null == n || n(r.target.value);\n    },\n    onChange: function onChange(r) {\n      e && (null == n || n(r.target.value));\n    }\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/hooks/dist/esm/index.js\n')},"./packages/icon/src/generated/Checkmark.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/extends.js");\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js");\n/* harmony import */ var _babel_runtime_helpers_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js");\n/* harmony import */ var _babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("webpack/sharing/consume/default/react/react");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/emotion/dist/esm/index.js");\n/* harmony import */ var _glyphCommon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/icon/src/glyphCommon.ts");\n\n\n\n\nvar _templateObject, _templateObject2;\nvar _excluded = ["className", "size", "title", "aria-label", "aria-labelledby", "fill", "role"];\n/**\n* This is a generated file. Do not modify it manually.\n*\n* @script ./node_modules/.bin/ts-node packages/icon/scripts/build.ts\n* @checksum 313ef7cb6960e680a20389f6316e96c6\n*/\n\n\n\n\nvar Checkmark = function Checkmark(_ref) {\n  var className = _ref.className,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 16 : _ref$size,\n    title = _ref.title,\n    ariaLabel = _ref[\'aria-label\'],\n    ariaLabelledby = _ref[\'aria-labelledby\'],\n    fill = _ref.fill,\n    _ref$role = _ref.role,\n    role = _ref$role === void 0 ? \'img\' : _ref$role,\n    props = (0,_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(_ref, _excluded);\n  var fillStyle = (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.css)(_templateObject || (_templateObject = (0,_babel_runtime_helpers_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(["\\n        color: ", ";\\n      "])), fill);\n  var noFlexShrink = (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.css)(_templateObject2 || (_templateObject2 = (0,_babel_runtime_helpers_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(["\\n        flex-shrink: 0;\\n      "])));\n  var accessibleProps = (0,_glyphCommon__WEBPACK_IMPORTED_MODULE_2__/* .generateAccessibleProps */ .W8)(role, \'Checkmark\', (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)((0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)({\n    title: title\n  }, \'aria-label\', ariaLabel), \'aria-labelledby\', ariaLabelledby));\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)({\n    className: (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.cx)((0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)({}, fillStyle, fill != null), noFlexShrink, className),\n    height: typeof size === \'number\' ? size : _glyphCommon__WEBPACK_IMPORTED_MODULE_2__/* .sizeMap */ .dG[size],\n    width: typeof size === \'number\' ? size : _glyphCommon__WEBPACK_IMPORTED_MODULE_2__/* .sizeMap */ .dG[size],\n    role: role\n  }, accessibleProps, props, {\n    viewBox: "0 0 16 16"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {\n    fillRule: "evenodd",\n    clipRule: "evenodd",\n    d: "M6.30583 9.05037L11.7611 3.59509C12.1516 3.20457 12.7848 3.20457 13.1753 3.59509L13.8824 4.3022C14.273 4.69273 14.273 5.32589 13.8824 5.71642L6.81525 12.7836C6.38819 13.2106 5.68292 13.1646 5.31505 12.6856L2.26638 8.71605C1.92998 8.27804 2.01235 7.65025 2.45036 7.31385L3.04518 6.85702C3.59269 6.43652 4.37742 6.53949 4.79792 7.087L6.30583 9.05037Z",\n    fill: \'currentColor\'\n  }));\n};\nCheckmark.displayName = \'Checkmark\';\nCheckmark.isGlyph = true;\nCheckmark.propTypes =  false ? 0 : {};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Checkmark);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9pY29uL3NyYy9nZW5lcmF0ZWQvQ2hlY2ttYXJrLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUMrQjtBQUNJO0FBQ2M7QUFDaUI7QUFHbEUsSUFBTU0sU0FBUyxHQUFHLFNBQVpBLFNBQVNBLENBQUFDLElBQUEsRUFTTztFQUFBLElBUnBCQyxTQUFTLEdBQUFELElBQUEsQ0FBVEMsU0FBUztJQUFBQyxTQUFBLEdBQUFGLElBQUEsQ0FDVEcsSUFBSTtJQUFKQSxJQUFJLEdBQUFELFNBQUEsY0FBRyxFQUFFLEdBQUFBLFNBQUE7SUFDVEUsS0FBSyxHQUFBSixJQUFBLENBQUxJLEtBQUs7SUFDV0MsU0FBUyxHQUFBTCxJQUFBLENBQXhCLFlBQVk7SUFDUU0sY0FBYyxHQUFBTixJQUFBLENBQWxDLGlCQUFpQjtJQUNsQk8sSUFBSSxHQUFBUCxJQUFBLENBQUpPLElBQUk7SUFBQUMsU0FBQSxHQUFBUixJQUFBLENBQ0pTLElBQUk7SUFBSkEsSUFBSSxHQUFBRCxTQUFBLGNBQUcsS0FBSyxHQUFBQSxTQUFBO0lBQ1RFLEtBQUssR0FBQUMsbUdBQUEsQ0FBQVgsSUFBQSxFQUFBWSxTQUFBO0VBRVIsSUFBTUMsU0FBUyxHQUFHbEIsMkRBQUcsQ0FBQW1CLGVBQUEsS0FBQUEsZUFBQSxHQUFBQyxpR0FBQSx1Q0FDTlIsSUFBSSxDQUNkO0VBQ0wsSUFBTVMsWUFBWSxHQUFHckIsMkRBQUcsQ0FBQXNCLGdCQUFBLEtBQUFBLGdCQUFBLEdBQUFGLGlHQUFBLHlDQUVuQjtFQUNMLElBQU1HLGVBQWUsR0FBR3JCLCtFQUF1QixDQUFDWSxJQUFJLEVBQUUsV0FBVyxFQUFBVSwwRkFBQSxDQUFBQSwwRkFBQTtJQUMvRGYsS0FBSyxFQUFMQTtFQUFLLEdBQ0osWUFBWSxFQUFHQyxTQUFTLEdBQ3hCLGlCQUFpQixFQUFHQyxjQUFjLENBQ3BDLENBQUM7RUFDRixvQkFBT2IsZ0RBQUEsUUFBQTRCLG1GQUFBO0lBQUtwQixTQUFTLEVBQUVMLDBEQUFFLENBQUF1QiwwRkFBQSxLQUN0Qk4sU0FBUyxFQUFHTixJQUFJLElBQUksSUFBSSxHQUN4QlMsWUFBWSxFQUFFZixTQUFTLENBQUU7SUFBQ3FCLE1BQU0sRUFBRSxPQUFPbkIsSUFBSSxLQUFLLFFBQVEsR0FBR0EsSUFBSSxHQUFHTCwyREFBTyxDQUFDSyxJQUFJLENBQUU7SUFBQ29CLEtBQUssRUFBRSxPQUFPcEIsSUFBSSxLQUFLLFFBQVEsR0FBR0EsSUFBSSxHQUFHTCwyREFBTyxDQUFDSyxJQUFJLENBQUU7SUFBQ00sSUFBSSxFQUFFQTtFQUFLLEdBQUtTLGVBQWUsRUFBTVIsS0FBSztJQUFFYyxPQUFPLEVBQUM7RUFBVyxpQkFBQy9CLGdEQUFBO0lBQU1nQyxRQUFRLEVBQUMsU0FBUztJQUFDQyxRQUFRLEVBQUMsU0FBUztJQUFDQyxDQUFDLEVBQUMsOFZBQThWO0lBQUNwQixJQUFJLEVBQUU7RUFBZSxDQUFFLENBQU0sQ0FBQztBQUMzbkIsQ0FBQztBQUNEUixTQUFTLENBQUM2QixXQUFXLEdBQUcsV0FBVztBQUNuQzdCLFNBQVMsQ0FBQzhCLE9BQU8sR0FBRyxJQUFJO0FBQ3hCOUIsU0FBUyxDQUFDK0IsU0FBUyxHQUFBQyxNQUFBLEdBQUcsQ0FJckI7QUFDRCxpRUFBZWhDLFNBQVMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWFmeWdyZWVuLXVpLy4vcGFja2FnZXMvaWNvbi9zcmMvZ2VuZXJhdGVkL0NoZWNrbWFyay50c3g/ZDQ4MSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiogVGhpcyBpcyBhIGdlbmVyYXRlZCBmaWxlLiBEbyBub3QgbW9kaWZ5IGl0IG1hbnVhbGx5LlxuKlxuKiBAc2NyaXB0IC4vbm9kZV9tb2R1bGVzLy5iaW4vdHMtbm9kZSBwYWNrYWdlcy9pY29uL3NjcmlwdHMvYnVpbGQudHNcbiogQGNoZWNrc3VtIDMxM2VmN2NiNjk2MGU2ODBhMjAzODlmNjMxNmU5NmM2XG4qL1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsgY3NzLCBjeCB9IGZyb20gJ0BsZWFmeWdyZWVuLXVpL2Vtb3Rpb24nO1xuaW1wb3J0IHsgZ2VuZXJhdGVBY2Nlc3NpYmxlUHJvcHMsIHNpemVNYXAgfSBmcm9tICcuLi9nbHlwaENvbW1vbic7XG5pbXBvcnQgeyBMR0dseXBoIH0gZnJvbSAnLi4vdHlwZXMnO1xuZXhwb3J0IGludGVyZmFjZSBDaGVja21hcmtQcm9wcyBleHRlbmRzIExHR2x5cGguQ29tcG9uZW50UHJvcHMge31cbmNvbnN0IENoZWNrbWFyayA9ICh7XG4gIGNsYXNzTmFtZSxcbiAgc2l6ZSA9IDE2LFxuICB0aXRsZSxcbiAgWydhcmlhLWxhYmVsJ106IGFyaWFMYWJlbCxcbiAgWydhcmlhLWxhYmVsbGVkYnknXTogYXJpYUxhYmVsbGVkYnksXG4gIGZpbGwsXG4gIHJvbGUgPSAnaW1nJyxcbiAgLi4ucHJvcHNcbn06IENoZWNrbWFya1Byb3BzKSA9PiB7XG4gIGNvbnN0IGZpbGxTdHlsZSA9IGNzc2BcbiAgICAgICAgY29sb3I6ICR7ZmlsbH07XG4gICAgICBgO1xuICBjb25zdCBub0ZsZXhTaHJpbmsgPSBjc3NgXG4gICAgICAgIGZsZXgtc2hyaW5rOiAwO1xuICAgICAgYDtcbiAgY29uc3QgYWNjZXNzaWJsZVByb3BzID0gZ2VuZXJhdGVBY2Nlc3NpYmxlUHJvcHMocm9sZSwgJ0NoZWNrbWFyaycsIHtcbiAgICB0aXRsZSxcbiAgICBbJ2FyaWEtbGFiZWwnXTogYXJpYUxhYmVsLFxuICAgIFsnYXJpYS1sYWJlbGxlZGJ5J106IGFyaWFMYWJlbGxlZGJ5XG4gIH0pO1xuICByZXR1cm4gPHN2ZyBjbGFzc05hbWU9e2N4KHtcbiAgICBbZmlsbFN0eWxlXTogZmlsbCAhPSBudWxsXG4gIH0sIG5vRmxleFNocmluaywgY2xhc3NOYW1lKX0gaGVpZ2h0PXt0eXBlb2Ygc2l6ZSA9PT0gJ251bWJlcicgPyBzaXplIDogc2l6ZU1hcFtzaXplXX0gd2lkdGg9e3R5cGVvZiBzaXplID09PSAnbnVtYmVyJyA/IHNpemUgOiBzaXplTWFwW3NpemVdfSByb2xlPXtyb2xlfSB7Li4uYWNjZXNzaWJsZVByb3BzfSB7Li4ucHJvcHN9IHZpZXdCb3g9XCIwIDAgMTYgMTZcIj48cGF0aCBmaWxsUnVsZT1cImV2ZW5vZGRcIiBjbGlwUnVsZT1cImV2ZW5vZGRcIiBkPVwiTTYuMzA1ODMgOS4wNTAzN0wxMS43NjExIDMuNTk1MDlDMTIuMTUxNiAzLjIwNDU3IDEyLjc4NDggMy4yMDQ1NyAxMy4xNzUzIDMuNTk1MDlMMTMuODgyNCA0LjMwMjJDMTQuMjczIDQuNjkyNzMgMTQuMjczIDUuMzI1ODkgMTMuODgyNCA1LjcxNjQyTDYuODE1MjUgMTIuNzgzNkM2LjM4ODE5IDEzLjIxMDYgNS42ODI5MiAxMy4xNjQ2IDUuMzE1MDUgMTIuNjg1NkwyLjI2NjM4IDguNzE2MDVDMS45Mjk5OCA4LjI3ODA0IDIuMDEyMzUgNy42NTAyNSAyLjQ1MDM2IDcuMzEzODVMMy4wNDUxOCA2Ljg1NzAyQzMuNTkyNjkgNi40MzY1MiA0LjM3NzQyIDYuNTM5NDkgNC43OTc5MiA3LjA4N0w2LjMwNTgzIDkuMDUwMzdaXCIgZmlsbD17J2N1cnJlbnRDb2xvcid9IC8+PC9zdmc+O1xufTtcbkNoZWNrbWFyay5kaXNwbGF5TmFtZSA9ICdDaGVja21hcmsnO1xuQ2hlY2ttYXJrLmlzR2x5cGggPSB0cnVlO1xuQ2hlY2ttYXJrLnByb3BUeXBlcyA9IHtcbiAgZmlsbDogUHJvcFR5cGVzLnN0cmluZyxcbiAgc2l6ZTogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm51bWJlciwgUHJvcFR5cGVzLnN0cmluZ10pLFxuICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmdcbn07XG5leHBvcnQgZGVmYXVsdCBDaGVja21hcms7Il0sIm5hbWVzIjpbIlJlYWN0IiwiUHJvcFR5cGVzIiwiY3NzIiwiY3giLCJnZW5lcmF0ZUFjY2Vzc2libGVQcm9wcyIsInNpemVNYXAiLCJDaGVja21hcmsiLCJfcmVmIiwiY2xhc3NOYW1lIiwiX3JlZiRzaXplIiwic2l6ZSIsInRpdGxlIiwiYXJpYUxhYmVsIiwiYXJpYUxhYmVsbGVkYnkiLCJmaWxsIiwiX3JlZiRyb2xlIiwicm9sZSIsInByb3BzIiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIiwiX2V4Y2x1ZGVkIiwiZmlsbFN0eWxlIiwiX3RlbXBsYXRlT2JqZWN0IiwiX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbCIsIm5vRmxleFNocmluayIsIl90ZW1wbGF0ZU9iamVjdDIiLCJhY2Nlc3NpYmxlUHJvcHMiLCJfZGVmaW5lUHJvcGVydHkiLCJjcmVhdGVFbGVtZW50IiwiX2V4dGVuZHMiLCJoZWlnaHQiLCJ3aWR0aCIsInZpZXdCb3giLCJmaWxsUnVsZSIsImNsaXBSdWxlIiwiZCIsImRpc3BsYXlOYW1lIiwiaXNHbHlwaCIsInByb3BUeXBlcyIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsInN0cmluZyIsIm9uZU9mVHlwZSIsIm51bWJlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./packages/icon/src/generated/Checkmark.tsx\n')},"./packages/icon/src/glyphCommon.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   $u: () => (/* binding */ Size),\n/* harmony export */   W8: () => (/* binding */ generateAccessibleProps),\n/* harmony export */   dG: () => (/* binding */ sizeMap)\n/* harmony export */ });\n/* unused harmony export getGlyphLabel */\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n\nvar Size = {\n  Small: 'small',\n  Default: 'default',\n  Large: 'large',\n  XLarge: 'xlarge'\n};\nvar sizeMap = {\n  small: 14,\n  \"default\": 16,\n  large: 20,\n  xlarge: 24\n};\nfunction generateAccessibleProps(role, glyphName, _ref) {\n  var ariaLabel = _ref['aria-label'],\n    ariaLabelledby = _ref['aria-labelledby'],\n    title = _ref.title;\n  switch (role) {\n    case 'img':\n      if (!ariaLabel && !ariaLabelledby && !title) {\n        return {\n          'aria-label': getGlyphLabel(glyphName)\n        };\n      }\n      return (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)((0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)((0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)({}, 'aria-labelledby', ariaLabelledby), 'aria-label', ariaLabel), \"title\", title);\n    case 'presentation':\n      return {\n        'aria-hidden': true,\n        alt: ''\n      };\n  }\n}\nfunction getGlyphLabel(name) {\n  return \"\".concat(name.replace(/([a-z])([A-Z])/g, '$1 $2'), \" Icon\");\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9pY29uL3NyYy9nbHlwaENvbW1vbi50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFPLElBQU1BLElBQUksR0FBRztFQUNsQkMsS0FBSyxFQUFFLE9BQU87RUFDZEMsT0FBTyxFQUFFLFNBQVM7RUFDbEJDLEtBQUssRUFBRSxPQUFPO0VBQ2RDLE1BQU0sRUFBRTtBQUNWLENBQVU7QUFJSCxJQUFNQyxPQUE2QixHQUFHO0VBQzNDQyxLQUFLLEVBQUUsRUFBRTtFQUNULFdBQVMsRUFBRTtFQUNYQyxLQUFLLEVBQUUsRUFBRTtFQUNUQyxNQUFNLEVBQUU7QUFDVixDQUFVO0FBWUgsU0FBU0MsdUJBQXVCQSxDQUNyQ0MsSUFBNEIsRUFDNUJDLFNBQWlCLEVBQUFDLElBQUEsRUFNYTtFQUFBLElBSlpDLFNBQVMsR0FBQUQsSUFBQSxDQUF4QixZQUFZO0lBQ1FFLGNBQWMsR0FBQUYsSUFBQSxDQUFsQyxpQkFBaUI7SUFDbEJHLEtBQUssR0FBQUgsSUFBQSxDQUFMRyxLQUFLO0VBR1AsUUFBUUwsSUFBSTtJQUNWLEtBQUssS0FBSztNQUNSLElBQUksQ0FBQ0csU0FBUyxJQUFJLENBQUNDLGNBQWMsSUFBSSxDQUFDQyxLQUFLLEVBQUU7UUFDM0MsT0FBTztVQUFFLFlBQVksRUFBRUMsYUFBYSxDQUFDTCxTQUFTO1FBQUUsQ0FBQztNQUNuRDtNQUVBLE9BQUFNLDBGQUFBLENBQUFBLDBGQUFBLENBQUFBLDBGQUFBLEtBQ0csaUJBQWlCLEVBQUdILGNBQWMsR0FDbEMsWUFBWSxFQUFHRCxTQUFTLFlBQ3pCRSxLQUFLO0lBR1QsS0FBSyxjQUFjO01BQ2pCLE9BQU87UUFBRSxhQUFhLEVBQUUsSUFBSTtRQUFFRyxHQUFHLEVBQUU7TUFBRyxDQUFDO0VBQzNDO0FBQ0Y7QUFFTyxTQUFTRixhQUFhQSxDQUFDRyxJQUFZLEVBQUU7RUFDMUMsVUFBQUMsTUFBQSxDQUFVRCxJQUFJLENBQUNFLE9BQU8sQ0FBQyxpQkFBaUIsRUFBRSxPQUFPLENBQUM7QUFDcEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWFmeWdyZWVuLXVpLy4vcGFja2FnZXMvaWNvbi9zcmMvZ2x5cGhDb21tb24udHM/ZmEzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgU2l6ZSA9IHtcbiAgU21hbGw6ICdzbWFsbCcsXG4gIERlZmF1bHQ6ICdkZWZhdWx0JyxcbiAgTGFyZ2U6ICdsYXJnZScsXG4gIFhMYXJnZTogJ3hsYXJnZScsXG59IGFzIGNvbnN0O1xuXG5leHBvcnQgdHlwZSBTaXplID0gKHR5cGVvZiBTaXplKVtrZXlvZiB0eXBlb2YgU2l6ZV07XG5cbmV4cG9ydCBjb25zdCBzaXplTWFwOiBSZWNvcmQ8U2l6ZSwgbnVtYmVyPiA9IHtcbiAgc21hbGw6IDE0LFxuICBkZWZhdWx0OiAxNixcbiAgbGFyZ2U6IDIwLFxuICB4bGFyZ2U6IDI0LFxufSBhcyBjb25zdDtcblxuaW50ZXJmYWNlIEFjY2Vzc2libGVGdW5jdGlvblBhcmFtcyB7XG4gICdhcmlhLWxhYmVsbGVkYnknPzogc3RyaW5nO1xuICAnYXJpYS1sYWJlbCc/OiBzdHJpbmc7XG4gIHRpdGxlPzogc3RyaW5nIHwgbnVsbDtcbn1cblxudHlwZSBBY2Nlc3NpYmxlRnVuY3Rpb25SZXR1cm5UeXBlID1cbiAgfCBBY2Nlc3NpYmxlRnVuY3Rpb25QYXJhbXNcbiAgfCB7ICdhcmlhLWhpZGRlbic6IHRydWU7IGFsdDogJycgfTtcblxuZXhwb3J0IGZ1bmN0aW9uIGdlbmVyYXRlQWNjZXNzaWJsZVByb3BzKFxuICByb2xlOiAnaW1nJyB8ICdwcmVzZW50YXRpb24nLFxuICBnbHlwaE5hbWU6IHN0cmluZyxcbiAge1xuICAgIFsnYXJpYS1sYWJlbCddOiBhcmlhTGFiZWwsXG4gICAgWydhcmlhLWxhYmVsbGVkYnknXTogYXJpYUxhYmVsbGVkYnksXG4gICAgdGl0bGUsXG4gIH06IEFjY2Vzc2libGVGdW5jdGlvblBhcmFtcyxcbik6IEFjY2Vzc2libGVGdW5jdGlvblJldHVyblR5cGUge1xuICBzd2l0Y2ggKHJvbGUpIHtcbiAgICBjYXNlICdpbWcnOlxuICAgICAgaWYgKCFhcmlhTGFiZWwgJiYgIWFyaWFMYWJlbGxlZGJ5ICYmICF0aXRsZSkge1xuICAgICAgICByZXR1cm4geyAnYXJpYS1sYWJlbCc6IGdldEdseXBoTGFiZWwoZ2x5cGhOYW1lKSB9O1xuICAgICAgfVxuXG4gICAgICByZXR1cm4ge1xuICAgICAgICBbJ2FyaWEtbGFiZWxsZWRieSddOiBhcmlhTGFiZWxsZWRieSxcbiAgICAgICAgWydhcmlhLWxhYmVsJ106IGFyaWFMYWJlbCxcbiAgICAgICAgdGl0bGUsXG4gICAgICB9O1xuXG4gICAgY2FzZSAncHJlc2VudGF0aW9uJzpcbiAgICAgIHJldHVybiB7ICdhcmlhLWhpZGRlbic6IHRydWUsIGFsdDogJycgfTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0R2x5cGhMYWJlbChuYW1lOiBzdHJpbmcpIHtcbiAgcmV0dXJuIGAke25hbWUucmVwbGFjZSgvKFthLXpdKShbQS1aXSkvZywgJyQxICQyJyl9IEljb25gO1xufVxuIl0sIm5hbWVzIjpbIlNpemUiLCJTbWFsbCIsIkRlZmF1bHQiLCJMYXJnZSIsIlhMYXJnZSIsInNpemVNYXAiLCJzbWFsbCIsImxhcmdlIiwieGxhcmdlIiwiZ2VuZXJhdGVBY2Nlc3NpYmxlUHJvcHMiLCJyb2xlIiwiZ2x5cGhOYW1lIiwiX3JlZiIsImFyaWFMYWJlbCIsImFyaWFMYWJlbGxlZGJ5IiwidGl0bGUiLCJnZXRHbHlwaExhYmVsIiwiX2RlZmluZVByb3BlcnR5IiwiYWx0IiwibmFtZSIsImNvbmNhdCIsInJlcGxhY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./packages/icon/src/glyphCommon.ts\n")},"./packages/leafygreen-provider/dist/esm/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Bl: () => (/* binding */ h),\n/* harmony export */   H2: () => (/* binding */ x),\n/* harmony export */   LB: () => (/* binding */ N),\n/* harmony export */   Wt: () => (/* binding */ b),\n/* harmony export */   ZP: () => (/* binding */ w),\n/* harmony export */   Zn: () => (/* binding */ E),\n/* harmony export */   lp: () => (/* binding */ S),\n/* harmony export */   vs: () => (/* binding */ p)\n/* harmony export */ });\n/* unused harmony exports DarkModeProvider, PopoverContext, useDarkModeContext */\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("webpack/sharing/consume/default/react/react");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _leafygreen_ui_lib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/lib/dist/esm/index.js");\n/* harmony import */ var _leafygreen_ui_hooks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/hooks/dist/esm/index.js");\n\n\n\n\nvar c = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({\n    contextDarkMode: !1,\n    setDarkMode: function setDarkMode() {}\n  }),\n  d = function d() {\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(c);\n  },\n  p = function p(e) {\n    var r,\n      o = d(),\n      n = o.contextDarkMode,\n      t = o.setDarkMode,\n      a = null !== (r = null != e ? e : n) && void 0 !== r && r;\n    return {\n      darkMode: a,\n      theme: (0,_leafygreen_ui_lib__WEBPACK_IMPORTED_MODULE_1__/* .getTheme */ .gh)(a),\n      setDarkMode: t\n    };\n  };\nfunction s(r) {\n  var o = r.children,\n    n = r.contextDarkMode,\n    t = r.setDarkMode;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(c.Provider, {\n    value: {\n      contextDarkMode: n,\n      setDarkMode: t\n    }\n  }, o);\n}\nfunction v(e, r) {\n  r > e.length && (r = e.length);\n  for (var o = 0, n = Array(r); o < r; o++) n[o] = e[o];\n  return n;\n}\nfunction f(e, r) {\n  return function (e) {\n    if (Array.isArray(e)) return e;\n  }(e) || function (e, r) {\n    var o = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];\n    if (null != o) {\n      var n,\n        t,\n        a,\n        i,\n        l = [],\n        u = !0,\n        c = !1;\n      try {\n        if (a = (o = o.call(e)).next, 0 === r) ;else for (; !(u = (n = a.call(o)).done) && (l.push(n.value), l.length !== r); u = !0);\n      } catch (e) {\n        c = !0, t = e;\n      } finally {\n        try {\n          if (!u && null != o["return"] && (i = o["return"](), Object(i) !== i)) return;\n        } finally {\n          if (c) throw t;\n        }\n      }\n      return l;\n    }\n  }(e, r) || function (e, r) {\n    if (e) {\n      if ("string" == typeof e) return v(e, r);\n      var o = {}.toString.call(e).slice(8, -1);\n      return "Object" === o && e.constructor && (o = e.constructor.name), "Map" === o || "Set" === o ? Array.from(e) : "Arguments" === o || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o) ? v(e, r) : void 0;\n    }\n  }(e, r) || function () {\n    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n  }();\n}\ns.displayName = "DarkModeProvider", s.propTypes =  false ? 0 : {};\nvar y = {\n    popover: {\n      portalContainer: void 0,\n      scrollContainer: void 0\n    }\n  },\n  m = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(y);\nfunction b() {\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(m).popover;\n}\nfunction h(r) {\n  var o = r.popover,\n    n = void 0 === o ? y.popover : o,\n    t = r.children;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(m.Provider, {\n    value: {\n      popover: n\n    }\n  }, t);\n}\nvar k = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(14);\nfunction E() {\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(k);\n}\nfunction D(r) {\n  var o = r.children,\n    n = r.baseFontSize,\n    t = void 0 === n ? 14 : n;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(k.Provider, {\n    value: t\n  }, o);\n}\nD.displayName = "TypographyProvider", D.propTypes =  false ? 0 : {};\nvar M = {\n    usingKeyboard: !0,\n    setUsingKeyboard: function setUsingKeyboard() {}\n  },\n  P = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(M),\n  g = {\n    tab: 9,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n  };\nfunction N() {\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(P);\n}\nfunction O(r) {\n  var o = r.children,\n    a = f((0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(M.usingKeyboard), 2),\n    i = a[0],\n    l = a[1];\n  (0,_leafygreen_ui_hooks__WEBPACK_IMPORTED_MODULE_2__/* .useEventListener */ .OR)("mousedown", function () {\n    return l(!1);\n  }, {\n    enabled: i\n  }), (0,_leafygreen_ui_hooks__WEBPACK_IMPORTED_MODULE_2__/* .useEventListener */ .OR)("keydown", function (e) {\n    var r = e.keyCode;\n    Object.values(g).includes(r) && l(!0);\n  }, {\n    enabled: !i\n  });\n  var c = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {\n    return {\n      usingKeyboard: i,\n      setUsingKeyboard: l\n    };\n  }, [i]);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(P.Provider, {\n    value: c\n  }, o);\n}\nfunction w(r) {\n  var o = r.children,\n    t = r.baseFontSize,\n    i = r.popoverPortalContainer,\n    l = r.darkMode,\n    u = d().contextDarkMode,\n    c = f((0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null != l ? l : u), 2),\n    p = c[0],\n    v = c[1];\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    v(null != l ? l : u);\n  }, [l, u]);\n  var y = E(),\n    m = null != t ? t : y,\n    k = b(),\n    M = null != i ? i : k;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(O, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(h, {\n    popover: M\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(D, {\n    baseFontSize: m\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(s, {\n    contextDarkMode: p,\n    setDarkMode: v\n  }, o))));\n}\nO.displayName = "UsingKeyboardProvider", O.propTypes =  false ? 0 : {}, w.displayName = "LeafyGreenProvider", w.propTypes =  false ? 0 : {};\nvar A = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({\n  isPopoverOpen: !1,\n  setIsPopoverOpen: function setIsPopoverOpen() {}\n});\nfunction S() {\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(A);\n}\nfunction x(r) {\n  var o = r.children,\n    a = f((0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1), 2),\n    i = a[0],\n    l = a[1],\n    u = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {\n      return {\n        isPopoverOpen: i,\n        setIsPopoverOpen: l\n      };\n    }, [i]);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(A.Provider, {\n    value: u\n  }, o);\n}\nx.displayName = "PopoverProvider", x.propTypes =  false ? 0 : {};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/leafygreen-provider/dist/esm/index.js\n')},"./packages/palette/dist/esm/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   D: () => (/* binding */ F)\n/* harmony export */ });\nvar F = {\n  white: "#FFFFFF",\n  black: "#001E2B",\n  transparent: "#FFFFFF00",\n  gray: {\n    dark4: "#112733",\n    dark3: "#1C2D38",\n    dark2: "#3D4F58",\n    dark1: "#5C6C75",\n    base: "#889397",\n    light1: "#C1C7C6",\n    light2: "#E8EDEB",\n    light3: "#F9FBFA"\n  },\n  green: {\n    dark3: "#023430",\n    dark2: "#00684A",\n    dark1: "#00A35C",\n    base: "#00ED64",\n    light1: "#71F6BA",\n    light2: "#C0FAE6",\n    light3: "#E3FCF7"\n  },\n  purple: {\n    dark3: "#2D0B59",\n    dark2: "#5E0C9E",\n    base: "#B45AF2",\n    light2: "#F1D4FD",\n    light3: "#F9EBFF"\n  },\n  blue: {\n    dark3: "#0C2657",\n    dark2: "#083C90",\n    dark1: "#1254B7",\n    base: "#016BF8",\n    light1: "#0498EC",\n    light2: "#C3E7FE",\n    light3: "#E1F7FF"\n  },\n  yellow: {\n    dark3: "#4C2100",\n    dark2: "#944F01",\n    base: "#FFC010",\n    light2: "#FFEC9E",\n    light3: "#FEF7DB"\n  },\n  red: {\n    dark3: "#5B0000",\n    dark2: "#970606",\n    base: "#DB3030",\n    light1: "#FF6960",\n    light2: "#FFCDC7",\n    light3: "#FFEAE5"\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9wYWxldHRlL2Rpc3QvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7OztBQUFPLElBb0VEQSxDQUFBLEdBQVU7RUFDZEMsS0FBQSxFQXJFbUI7RUFzRW5CQyxLQUFBLEVBckVtQjtFQXNFbkJDLFdBQUEsRUFyRXlCO0VBc0V6QkMsSUFBQSxFQXBFa0I7SUFDbEJDLEtBQUEsRUFBTztJQUNQQyxLQUFBLEVBQU87SUFDUEMsS0FBQSxFQUFPO0lBQ1BDLEtBQUEsRUFBTztJQUNQQyxJQUFBLEVBQU07SUFDTkMsTUFBQSxFQUFRO0lBQ1JDLE1BQUEsRUFBUTtJQUNSQyxNQUFBLEVBQVE7RUFBQTtFQTZEUkMsS0FBQSxFQTFEbUI7SUFDbkJQLEtBQUEsRUFBTztJQUNQQyxLQUFBLEVBQU87SUFDUEMsS0FBQSxFQUFPO0lBQ1BDLElBQUEsRUFBTTtJQUNOQyxNQUFBLEVBQVE7SUFDUkMsTUFBQSxFQUFRO0lBQ1JDLE1BQUEsRUFBUTtFQUFBO0VBb0RSRSxNQUFBLEVBakRvQjtJQUNwQlIsS0FBQSxFQUFPO0lBQ1BDLEtBQUEsRUFBTztJQUNQRSxJQUFBLEVBQU07SUFDTkUsTUFBQSxFQUFRO0lBQ1JDLE1BQUEsRUFBUTtFQUFBO0VBNkNSRyxJQUFBLEVBMUNrQjtJQUNsQlQsS0FBQSxFQUFPO0lBQ1BDLEtBQUEsRUFBTztJQUNQQyxLQUFBLEVBQU87SUFDUEMsSUFBQSxFQUFNO0lBQ05DLE1BQUEsRUFBUTtJQUNSQyxNQUFBLEVBQVE7SUFDUkMsTUFBQSxFQUFRO0VBQUE7RUFvQ1JJLE1BQUEsRUFqQ29CO0lBQ3BCVixLQUFBLEVBQU87SUFDUEMsS0FBQSxFQUFPO0lBQ1BFLElBQUEsRUFBTTtJQUNORSxNQUFBLEVBQVE7SUFDUkMsTUFBQSxFQUFRO0VBQUE7RUE2QlJLLEdBQUEsRUExQmlCO0lBQ2pCWCxLQUFBLEVBQU87SUFDUEMsS0FBQSxFQUFPO0lBQ1BFLElBQUEsRUFBTTtJQUNOQyxNQUFBLEVBQVE7SUFDUkMsTUFBQSxFQUFRO0lBQ1JDLE1BQUEsRUFBUTtFQUFBO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWFmeWdyZWVuLXVpLy4uLy4uL3NyYy9wYWxldHRlLnRzPzQwZjMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHdoaXRlID0gJyNGRkZGRkYnIGFzIGNvbnN0O1xuZXhwb3J0IGNvbnN0IGJsYWNrID0gJyMwMDFFMkInIGFzIGNvbnN0O1xuZXhwb3J0IGNvbnN0IHRyYW5zcGFyZW50ID0gJyNGRkZGRkYwMCcgYXMgY29uc3Q7XG5cbmV4cG9ydCBjb25zdCBncmF5ID0ge1xuICBkYXJrNDogJyMxMTI3MzMnLFxuICBkYXJrMzogJyMxQzJEMzgnLFxuICBkYXJrMjogJyMzRDRGNTgnLFxuICBkYXJrMTogJyM1QzZDNzUnLFxuICBiYXNlOiAnIzg4OTM5NycsXG4gIGxpZ2h0MTogJyNDMUM3QzYnLFxuICBsaWdodDI6ICcjRThFREVCJyxcbiAgbGlnaHQzOiAnI0Y5RkJGQScsXG59IGFzIGNvbnN0O1xuXG5leHBvcnQgY29uc3QgZ3JlZW4gPSB7XG4gIGRhcmszOiAnIzAyMzQzMCcsXG4gIGRhcmsyOiAnIzAwNjg0QScsXG4gIGRhcmsxOiAnIzAwQTM1QycsXG4gIGJhc2U6ICcjMDBFRDY0JyxcbiAgbGlnaHQxOiAnIzcxRjZCQScsXG4gIGxpZ2h0MjogJyNDMEZBRTYnLFxuICBsaWdodDM6ICcjRTNGQ0Y3Jyxcbn0gYXMgY29uc3Q7XG5cbmV4cG9ydCBjb25zdCBwdXJwbGUgPSB7XG4gIGRhcmszOiAnIzJEMEI1OScsXG4gIGRhcmsyOiAnIzVFMEM5RScsXG4gIGJhc2U6ICcjQjQ1QUYyJyxcbiAgbGlnaHQyOiAnI0YxRDRGRCcsXG4gIGxpZ2h0MzogJyNGOUVCRkYnLFxufSBhcyBjb25zdDtcblxuZXhwb3J0IGNvbnN0IGJsdWUgPSB7XG4gIGRhcmszOiAnIzBDMjY1NycsXG4gIGRhcmsyOiAnIzA4M0M5MCcsXG4gIGRhcmsxOiAnIzEyNTRCNycsXG4gIGJhc2U6ICcjMDE2QkY4JyxcbiAgbGlnaHQxOiAnIzA0OThFQycsXG4gIGxpZ2h0MjogJyNDM0U3RkUnLFxuICBsaWdodDM6ICcjRTFGN0ZGJyxcbn0gYXMgY29uc3Q7XG5cbmV4cG9ydCBjb25zdCB5ZWxsb3cgPSB7XG4gIGRhcmszOiAnIzRDMjEwMCcsXG4gIGRhcmsyOiAnIzk0NEYwMScsXG4gIGJhc2U6ICcjRkZDMDEwJyxcbiAgbGlnaHQyOiAnI0ZGRUM5RScsXG4gIGxpZ2h0MzogJyNGRUY3REInLFxufSBhcyBjb25zdDtcblxuZXhwb3J0IGNvbnN0IHJlZCA9IHtcbiAgZGFyazM6ICcjNUIwMDAwJyxcbiAgZGFyazI6ICcjOTcwNjA2JyxcbiAgYmFzZTogJyNEQjMwMzAnLFxuICBsaWdodDE6ICcjRkY2OTYwJyxcbiAgbGlnaHQyOiAnI0ZGQ0RDNycsXG4gIGxpZ2h0MzogJyNGRkVBRTUnLFxufSBhcyBjb25zdDtcblxuLyoqXG4gKlxuICogUGFsZXR0ZSBleHBvcnRzIHRoZSBsYXRlc3QgY29sb3JzIHVzZWQgaW4gZGVzaWducyBmb2xsb3dpbmcgdGhlIGJyYW5kIHJlZnJlc2guXG4gKlxuICogSWYgeW91IGFyZSBzdGlsbCB1c2luZyBgdWlDb2xvcnNgLCByZWZlciB0byB0aGUgW3VwZ3JhZGUgZ3VpZGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9tb25nb2RiL2xlYWZ5Z3JlZW4tdWkvYmxvYi9tYWluL3BhY2thZ2VzL3BhbGV0dGUvVVBHUkFERS5tZCkgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24uXG4gKlxuICogQHB1YmxpY1xuICovXG5jb25zdCBwYWxldHRlID0ge1xuICB3aGl0ZSxcbiAgYmxhY2ssXG4gIHRyYW5zcGFyZW50LFxuICBncmF5LFxuICBncmVlbixcbiAgcHVycGxlLFxuICBibHVlLFxuICB5ZWxsb3csXG4gIHJlZCxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHBhbGV0dGU7XG4iXSwibmFtZXMiOlsiRiIsIndoaXRlIiwiYmxhY2siLCJ0cmFuc3BhcmVudCIsImdyYXkiLCJkYXJrNCIsImRhcmszIiwiZGFyazIiLCJkYXJrMSIsImJhc2UiLCJsaWdodDEiLCJsaWdodDIiLCJsaWdodDMiLCJncmVlbiIsInB1cnBsZSIsImJsdWUiLCJ5ZWxsb3ciLCJyZWQiLCJwYWxldHRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./packages/palette/dist/esm/index.js\n')},"./packages/toggle/src/Toggle/Toggle.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  Z: () => (/* binding */ Toggle_Toggle)\n});\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js\nvar esm_extends = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/extends.js");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 3 modules\nvar slicedToArray = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\nvar objectWithoutProperties = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js");\n// EXTERNAL MODULE: consume shared module (default) react@^17.0.2 (singleton) (fallback: ./node_modules/react/index.js)\nvar index_js_ = __webpack_require__("webpack/sharing/consume/default/react/react");\nvar index_js_default = /*#__PURE__*/__webpack_require__.n(index_js_);\n// EXTERNAL MODULE: ./packages/a11y/dist/esm/index.js\nvar esm = __webpack_require__("./packages/a11y/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/emotion/dist/esm/index.js\nvar dist_esm = __webpack_require__("./packages/emotion/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/icon/src/generated/Checkmark.tsx\nvar Checkmark = __webpack_require__("./packages/icon/src/generated/Checkmark.tsx");\n// EXTERNAL MODULE: ./packages/leafygreen-provider/dist/esm/index.js\nvar leafygreen_provider_dist_esm = __webpack_require__("./packages/leafygreen-provider/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/toggle/src/constants.ts\nvar constants = __webpack_require__("./packages/toggle/src/constants.ts");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js + 2 modules\nvar defineProperty = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\nvar taggedTemplateLiteral = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js");\n// EXTERNAL MODULE: ./packages/lib/dist/esm/index.js\nvar lib_dist_esm = __webpack_require__("./packages/lib/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/palette/dist/esm/index.js\nvar palette_dist_esm = __webpack_require__("./packages/palette/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/tokens/dist/esm/index.js\nvar tokens_dist_esm = __webpack_require__("./packages/tokens/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/toggle/src/Toggle/types.ts\nvar types = __webpack_require__("./packages/toggle/src/Toggle/types.ts");\n;// CONCATENATED MODULE: ./packages/toggle/src/Toggle/styles.ts\n\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14, _templateObject15;\n\n\n\n\n\nvar toggleButtonClassName = (0,lib_dist_esm/* createUniqueClassName */.hy)(\'toggle-button\');\nvar buttonSelectors = {\n  checked: ".".concat(toggleButtonClassName, "[aria-checked=\\"true\\"]"),\n  unchecked: ".".concat(toggleButtonClassName, "[aria-checked=\\"false\\"]"),\n  disabled: ".".concat(toggleButtonClassName, ":disabled")\n};\nvar sliderSelector = {\n  checked: "".concat(buttonSelectors.checked, " > &"),\n  unchecked: "".concat(buttonSelectors.unchecked, " > &"),\n  disabled: "".concat(buttonSelectors.disabled, " > &")\n};\nvar checkmarkSelector = {\n  checked: "".concat(buttonSelectors.checked, ":not(:disabled) &"),\n  unchecked: "".concat(buttonSelectors.unchecked, ":not(:disabled) &"),\n  disabledChecked: "".concat(buttonSelectors.checked, ":disabled &"),\n  disabledUnchecked: "".concat(buttonSelectors.unchecked, ":disabled &")\n};\nvar buttonBaseStyles = (0,dist_esm.css)(_templateObject || (_templateObject = (0,taggedTemplateLiteral/* default */.Z)(["\\n  transition: ", "ms all ease-in-out,\\n    0s background-color linear;\\n  display: inline-block;\\n  flex-shrink: 0;\\n  position: relative;\\n  padding: 0;\\n  border-radius: 50px;\\n  border: 1px solid;\\n  cursor: pointer;\\n\\n  &:disabled {\\n    cursor: not-allowed;\\n  }\\n\\n  &:focus {\\n    outline: none;\\n  }\\n\\n  &[aria-checked=\'true\'] {\\n    transition-delay: ", "ms;\\n\\n    &:before {\\n      transform: scale(1);\\n      opacity: 1;\\n    }\\n  }\\n\\n  // We\'re animating this pseudo-element in order to give the toggle groove\\n  // background an animation in and out.\\n  &:before {\\n    content: \'\';\\n    transition: ", "ms all ease-in-out;\\n    position: absolute;\\n    top: 0;\\n    bottom: 0;\\n    left: 0;\\n    right: 0;\\n    border-radius: 50px;\\n    opacity: 0;\\n    transform: scale(0.85);\\n  }\\n\\n  &:disabled:before {\\n    opacity: 0;\\n  }\\n"])), tokens_dist_esm/* transitionDuration */.nV["default"], tokens_dist_esm/* transitionDuration */.nV["default"], tokens_dist_esm/* transitionDuration */.nV["default"]);\nvar sliderBaseStyles = (0,dist_esm.css)(_templateObject2 || (_templateObject2 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  transition: all ", "ms ease-in-out;\\n  border-radius: 100%;\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  margin: auto;\\n  overflow: hidden;\\n  transform: translate3d(0, 0, 0);\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n\\n  &:before,\\n  &:after {\\n    content: \'\';\\n    position: absolute;\\n    top: 0;\\n    bottom: 0;\\n    left: 0;\\n    right: 0;\\n  }\\n\\n  ", " {\\n    &:before,\\n    &:after {\\n      content: none;\\n    }\\n  }\\n"])), tokens_dist_esm/* transitionDuration */.nV["default"], sliderSelector.disabled);\nvar buttonSizeStyles = (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, types/* Size */.$.Default, (0,dist_esm.css)(_templateObject3 || (_templateObject3 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    height: 32px;\\n    width: 56px;\\n  "])))), types/* Size */.$.Small, (0,dist_esm.css)(_templateObject4 || (_templateObject4 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    height: 22px;\\n    width: 40px;\\n  "])))), types/* Size */.$.XSmall, (0,dist_esm.css)(_templateObject5 || (_templateObject5 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    height: 14px;\\n    width: 24px;\\n  "]))));\nvar sliderSizeStyles = (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, types/* Size */.$.Default, (0,dist_esm.css)(_templateObject6 || (_templateObject6 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    height: 28px;\\n    width: 28px;\\n    left: 1px;\\n\\n    ", " {\\n      transform: translate3d(24px, 0, 0);\\n    }\\n  "])), sliderSelector.checked)), types/* Size */.$.Small, (0,dist_esm.css)(_templateObject7 || (_templateObject7 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    height: 18px;\\n    width: 18px;\\n    left: 1px;\\n\\n    ", " {\\n      transform: translate3d(18px, 0, 0);\\n    }\\n  "])), sliderSelector.checked)), types/* Size */.$.XSmall, (0,dist_esm.css)(_templateObject8 || (_templateObject8 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    height: 12px;\\n    width: 12px;\\n\\n    ", " {\\n      transform: translate3d(10px, 0, 0);\\n    }\\n  "])), sliderSelector.checked));\nvar buttonThemeStyles = (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, lib_dist_esm/* Theme */.Q2.Light, (0,dist_esm.css)(_templateObject9 || (_templateObject9 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    &[aria-checked=\'false\']:not(:disabled) {\\n      background-color: ", ";\\n      border-color: ", ";\\n    }\\n\\n    &[aria-checked=\'true\'] {\\n      // We set background-color here to avoid a small issue with overflow clipping\\n      // that makes this look less seamless than it should.\\n      background-color: ", ";\\n      border-color: ", ";\\n    }\\n\\n    &:disabled {\\n      background-color: ", ";\\n      border-color: ", ";\\n    }\\n\\n    &:before {\\n      background-color: ", ";\\n    }\\n\\n    &:hover:not(:disabled) {\\n      box-shadow: ", ";\\n    }\\n\\n    &:focus-visible:not(:disabled) {\\n      box-shadow: ", ";\\n    }\\n  "])), palette_dist_esm/* palette */.D.gray.base, palette_dist_esm/* palette */.D.gray.base, palette_dist_esm/* palette */.D.blue.base, palette_dist_esm/* palette */.D.blue.base, palette_dist_esm/* palette */.D.gray.light2, palette_dist_esm/* palette */.D.gray.light2, palette_dist_esm/* palette */.D.blue.base, tokens_dist_esm/* hoverRing */.m$.light.gray, tokens_dist_esm/* focusRing */.kN.light["default"])), lib_dist_esm/* Theme */.Q2.Dark, (0,dist_esm.css)(_templateObject10 || (_templateObject10 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    &[aria-checked=\'false\']:not(:disabled) {\\n      background-color: ", ";\\n      border-color: ", ";\\n    }\\n\\n    &[aria-checked=\'true\'] {\\n      // We set background-color here to avoid a small issue with overflow clipping\\n      // that makes this look less seamless than it should.\\n      background-color: ", ";\\n      border-color: ", ";\\n    }\\n\\n    &:disabled {\\n      background-color: ", ";\\n      border-color: ", ";\\n    }\\n\\n    &:before {\\n      background-color: ", ";\\n    }\\n\\n    &:hover:not(:disabled) {\\n      box-shadow: ", ";\\n    }\\n\\n    &:focus-visible:not(:disabled) {\\n      box-shadow: ", ";\\n    }\\n  "])), palette_dist_esm/* palette */.D.gray.dark1, palette_dist_esm/* palette */.D.gray.dark1, palette_dist_esm/* palette */.D.blue.light1, palette_dist_esm/* palette */.D.blue.light1, palette_dist_esm/* palette */.D.gray.dark2, palette_dist_esm/* palette */.D.gray.dark2, palette_dist_esm/* palette */.D.blue.light1, tokens_dist_esm/* hoverRing */.m$.dark.gray, tokens_dist_esm/* focusRing */.kN.dark["default"]));\nvar sliderThemeStyles = (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, lib_dist_esm/* Theme */.Q2.Light, (0,dist_esm.css)(_templateObject11 || (_templateObject11 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    background-color: ", ";\\n\\n    ", " {\\n      background-color: ", ";\\n    }\\n  "])), palette_dist_esm/* palette */.D.white, sliderSelector.disabled, palette_dist_esm/* palette */.D.gray.light3)), lib_dist_esm/* Theme */.Q2.Dark, (0,dist_esm.css)(_templateObject12 || (_templateObject12 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    background-color: ", ";\\n\\n    ", " {\\n      background-color: ", ";\\n    }\\n  "])), palette_dist_esm/* palette */.D.white, sliderSelector.disabled, palette_dist_esm/* palette */.D.gray.dark1));\nvar checkmarkBaseStyles = (0,dist_esm.css)(_templateObject13 || (_templateObject13 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  display: flex;\\n  transition: color ", "ms ease-in-out;\\n"])), tokens_dist_esm/* transitionDuration */.nV["default"]);\nvar checkmarkThemeStyles = (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, lib_dist_esm/* Theme */.Q2.Dark, (0,dist_esm.css)(_templateObject14 || (_templateObject14 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    ", " {\\n      color: ", ";\\n    }\\n\\n    ", " {\\n      color: ", ";\\n    }\\n\\n    ", " {\\n      color: ", ";\\n    }\\n\\n    ", " {\\n      color: ", ";\\n    }\\n  "])), checkmarkSelector.checked, palette_dist_esm/* palette */.D.blue.light1, checkmarkSelector.unchecked, palette_dist_esm/* palette */.D.white, checkmarkSelector.disabledChecked, palette_dist_esm/* palette */.D.gray.dark2, checkmarkSelector.disabledUnchecked, palette_dist_esm/* palette */.D.gray.dark1)), lib_dist_esm/* Theme */.Q2.Light, (0,dist_esm.css)(_templateObject15 || (_templateObject15 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    ", " {\\n      color: ", ";\\n    }\\n\\n    ", " {\\n      color: ", ";\\n    }\\n\\n    ", " {\\n      color: ", ";\\n    }\\n\\n    ", " {\\n      color: ", ";\\n    }\\n  "])), checkmarkSelector.checked, palette_dist_esm/* palette */.D.blue.base, checkmarkSelector.unchecked, palette_dist_esm/* palette */.D.white, checkmarkSelector.disabledChecked, palette_dist_esm/* palette */.D.gray.light1, checkmarkSelector.disabledUnchecked, palette_dist_esm/* palette */.D.gray.light3));\nvar checkmarkSize = (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, types/* Size */.$.Default, 16), types/* Size */.$.Small, 14);\n;// CONCATENATED MODULE: ./packages/toggle/src/Toggle/Toggle.tsx\n\n\n\nvar _excluded = ["className", "size", "darkMode", "disabled", "onChange", "onClick", "checked", "data-lgid"];\n\n\n\n\n\n\n\n\n\nfunction Toggle(_ref) {\n  var className = _ref.className,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? types/* Size */.$.Default : _ref$size,\n    darkModeProp = _ref.darkMode,\n    _ref$disabled = _ref.disabled,\n    disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n    onChangeProp = _ref.onChange,\n    onClickProp = _ref.onClick,\n    controlledChecked = _ref.checked,\n    _ref$dataLgid = _ref[\'data-lgid\'],\n    dataLgId = _ref$dataLgid === void 0 ? constants/* LGIDS_TOGGLE */.w.root : _ref$dataLgid,\n    rest = (0,objectWithoutProperties/* default */.Z)(_ref, _excluded);\n  (0,esm/* validateAriaLabelProps */.Lk)(rest, Toggle.displayName);\n  var _useDarkMode = (0,leafygreen_provider_dist_esm/* useDarkMode */.vs)(darkModeProp),\n    theme = _useDarkMode.theme;\n  var _useState = (0,index_js_.useState)(false),\n    _useState2 = (0,slicedToArray/* default */.Z)(_useState, 2),\n    checked = _useState2[0],\n    setChecked = _useState2[1];\n  var isControlled = typeof controlledChecked === \'boolean\';\n  var normalizedChecked = controlledChecked !== null && controlledChecked !== void 0 ? controlledChecked : checked;\n  var onClick = (0,index_js_.useCallback)(function (e) {\n    onClickProp === null || onClickProp === void 0 ? void 0 : onClickProp(e);\n    if (isControlled) {\n      onChangeProp === null || onChangeProp === void 0 ? void 0 : onChangeProp(!controlledChecked, e);\n    } else {\n      setChecked(function (curr) {\n        var updatedState = !curr;\n        onChangeProp === null || onChangeProp === void 0 ? void 0 : onChangeProp(updatedState, e);\n        return updatedState;\n      });\n    }\n  }, [isControlled, controlledChecked, onClickProp, onChangeProp]);\n  return /*#__PURE__*/index_js_default().createElement("button", (0,esm_extends/* default */.Z)({\n    role: "switch",\n    type: "button",\n    onClick: onClick,\n    "aria-checked": normalizedChecked,\n    disabled: disabled,\n    "aria-disabled": disabled,\n    className: (0,dist_esm.cx)(className, toggleButtonClassName, buttonBaseStyles, buttonThemeStyles[theme], buttonSizeStyles[size]),\n    "data-lgid": dataLgId\n  }, rest), /*#__PURE__*/index_js_default().createElement("div", {\n    className: (0,dist_esm.cx)(sliderBaseStyles, sliderSizeStyles[size], sliderThemeStyles[theme])\n  }, size !== types/* Size */.$.XSmall && /*#__PURE__*/index_js_default().createElement(Checkmark/* default */.Z, {\n    "aria-hidden": true,\n    className: (0,dist_esm.cx)(checkmarkBaseStyles, checkmarkThemeStyles[theme]),\n    size: checkmarkSize[size]\n  })));\n}\nToggle.displayName = \'Toggle\';\nToggle.propTypes =  false ? 0 : {};\n/* harmony default export */ const Toggle_Toggle = (Toggle);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/toggle/src/Toggle/Toggle.tsx\n')},"?4f7e":()=>{},"?ed1b":()=>{},"?d17e":()=>{},"?3e83":()=>{},"?19e6":()=>{}}]);