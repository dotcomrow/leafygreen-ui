"use strict";(self.webpackChunkleafygreen_ui=self.webpackChunkleafygreen_ui||[]).push([[5960],{"./packages/combobox/src/Combobox/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  h: () => (/* reexport */ Combobox)\n});\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js + 2 modules\nvar defineProperty = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js\nvar esm_extends = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/extends.js");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/typeof.js\nvar esm_typeof = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/typeof.js");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 3 modules\nvar slicedToArray = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\nvar objectWithoutProperties = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js");\n// EXTERNAL MODULE: consume shared module (default) react@^17.0.2 (singleton) (fallback: ./node_modules/react/index.js)\nvar index_js_ = __webpack_require__("webpack/sharing/consume/default/react/react");\nvar index_js_default = /*#__PURE__*/__webpack_require__.n(index_js_);\n// EXTERNAL MODULE: ./node_modules/lodash/clone.js\nvar clone = __webpack_require__("./node_modules/lodash/clone.js");\nvar clone_default = /*#__PURE__*/__webpack_require__.n(clone);\n// EXTERNAL MODULE: ./node_modules/lodash/debounce.js\nvar debounce = __webpack_require__("./node_modules/lodash/debounce.js");\nvar debounce_default = /*#__PURE__*/__webpack_require__.n(debounce);\n// EXTERNAL MODULE: ./node_modules/lodash/isArray.js\nvar isArray = __webpack_require__("./node_modules/lodash/isArray.js");\nvar isArray_default = /*#__PURE__*/__webpack_require__.n(isArray);\n// EXTERNAL MODULE: ./node_modules/lodash/isEqual.js\nvar isEqual = __webpack_require__("./node_modules/lodash/isEqual.js");\nvar isEqual_default = /*#__PURE__*/__webpack_require__.n(isEqual);\n// EXTERNAL MODULE: ./node_modules/lodash/isNull.js\nvar isNull = __webpack_require__("./node_modules/lodash/isNull.js");\nvar isNull_default = /*#__PURE__*/__webpack_require__.n(isNull);\n// EXTERNAL MODULE: ./node_modules/lodash/isString.js\nvar isString = __webpack_require__("./node_modules/lodash/isString.js");\nvar isString_default = /*#__PURE__*/__webpack_require__.n(isString);\n// EXTERNAL MODULE: ./node_modules/lodash/isUndefined.js\nvar isUndefined = __webpack_require__("./node_modules/lodash/isUndefined.js");\nvar isUndefined_default = /*#__PURE__*/__webpack_require__.n(isUndefined);\n// EXTERNAL MODULE: ./packages/emotion/dist/esm/index.js\nvar esm = __webpack_require__("./packages/emotion/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/form-field/dist/esm/index.js\nvar dist_esm = __webpack_require__("./packages/form-field/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/hooks/dist/esm/index.js\nvar hooks_dist_esm = __webpack_require__("./packages/hooks/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/icon/dist/esm/index.js\nvar icon_dist_esm = __webpack_require__("./packages/icon/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/icon-button/dist/esm/index.js\nvar icon_button_dist_esm = __webpack_require__("./packages/icon-button/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/leafygreen-provider/dist/esm/index.js\nvar leafygreen_provider_dist_esm = __webpack_require__("./packages/leafygreen-provider/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/lib/dist/esm/index.js\nvar lib_dist_esm = __webpack_require__("./packages/lib/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/typography/dist/esm/index.js\nvar typography_dist_esm = __webpack_require__("./packages/typography/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/combobox/src/ComboboxChip/ComboboxChip.tsx\nvar ComboboxChip = __webpack_require__("./packages/combobox/src/ComboboxChip/ComboboxChip.tsx");\n;// CONCATENATED MODULE: ./packages/combobox/src/ComboboxChip/index.ts\n\n// EXTERNAL MODULE: ./packages/combobox/src/ComboboxContext/index.ts\nvar ComboboxContext = __webpack_require__("./packages/combobox/src/ComboboxContext/index.ts");\n// EXTERNAL MODULE: ./packages/combobox/src/ComboboxGroup/index.ts\nvar ComboboxGroup = __webpack_require__("./packages/combobox/src/ComboboxGroup/index.ts");\n// EXTERNAL MODULE: ./packages/combobox/src/ComboboxMenu/ComboboxMenu.tsx + 1 modules\nvar ComboboxMenu = __webpack_require__("./packages/combobox/src/ComboboxMenu/ComboboxMenu.tsx");\n;// CONCATENATED MODULE: ./packages/combobox/src/ComboboxMenu/index.ts\n\n// EXTERNAL MODULE: ./packages/combobox/src/ComboboxOption/index.ts\nvar ComboboxOption = __webpack_require__("./packages/combobox/src/ComboboxOption/index.ts");\n// EXTERNAL MODULE: ./packages/combobox/src/types/index.ts + 1 modules\nvar types = __webpack_require__("./packages/combobox/src/types/index.ts");\n// EXTERNAL MODULE: ./packages/combobox/src/utils/index.ts + 5 modules\nvar utils = __webpack_require__("./packages/combobox/src/utils/index.ts");\n;// CONCATENATED MODULE: ./packages/combobox/src/utils/doesSelectionExist.ts\n\n\n\n\nvar doesSelectionExist = function doesSelectionExist(selection) {\n  return !isUndefined_default()(selection) && !isNull_default()(selection) && (isString_default()(selection) || isArray_default()(selection) && selection.length > 0);\n};\n;// CONCATENATED MODULE: ./packages/combobox/src/Combobox/utils/isValueCurrentSelection.ts\n/**\n * Returns whether a given value is included in, or equal to, the current selection\n * @param value the option value to check\n */\nvar isValueCurrentSelection = function isValueCurrentSelection(value, selection) {\n  return Array.isArray(selection) ? selection.includes(value) : value === selection;\n};\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\nvar taggedTemplateLiteral = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js");\n// EXTERNAL MODULE: ./node_modules/polished/dist/polished.esm.js\nvar polished_esm = __webpack_require__("./node_modules/polished/dist/polished.esm.js");\n// EXTERNAL MODULE: ./packages/palette/dist/esm/index.js\nvar palette_dist_esm = __webpack_require__("./packages/palette/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/tokens/dist/esm/index.js\nvar tokens_dist_esm = __webpack_require__("./packages/tokens/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/combobox/src/ComboboxChip/ComboboxChip.styles.ts\nvar ComboboxChip_styles = __webpack_require__("./packages/combobox/src/ComboboxChip/ComboboxChip.styles.ts");\n;// CONCATENATED MODULE: ./packages/combobox/src/Combobox/Combobox.styles.ts\n\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14, _templateObject15, _templateObject16, _templateObject17, _templateObject18, _templateObject19, _templateObject20, _templateObject21, _templateObject22, _templateObject23, _templateObject24, _templateObject25, _templateObject26, _templateObject27, _templateObject28, _templateObject29, _templateObject30, _templateObject31, _templateObject32, _templateObject33;\n\n\n\n\n\n\n\n\n/**\n * Util to get the chip height\n * `lineHeight + (2 * paddingY)`\n */\n// Rename the variable defined in chip styles\nvar inputHeight = function inputHeight(size) {\n  return ComboboxChip_styles/* lineHeight */.Nv[size] + 2 * ComboboxChip_styles/* chipWrapperPaddingY */.zb[size];\n};\n\n// Gap between each chip\nvar flexGap = tokens_dist_esm/* spacing */.W0[100];\n\n/**\n * The min-height of the combobox.\n */\nvar wrapperHeight = (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, types/* ComboboxSize */.C.XSmall, 22), types/* ComboboxSize */.C.Small, 28), types/* ComboboxSize */.C.Default, 36), types/* ComboboxSize */.C.Large, 48);\n\n/**\n * Util that calculates the Y padding.\n * `(wrapperHeight - inputHeight(- (borderTop + borderBottom)) / 2`\n */\nvar getYPadding = function getYPadding(size) {\n  return (wrapperHeight[size] - inputHeight(size) - 2) / 2;\n};\n\n/**\n * Size of combobox x & y padding (in px)\n * (wrapperHeight - inputHeight(- (borderTop + borderBottom)) / 2\n */\nvar comboboxPadding = (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, types/* ComboboxSize */.C.XSmall, {\n  y: getYPadding(types/* ComboboxSize */.C.XSmall),\n  xLeftWithChip: tokens_dist_esm/* spacing */.W0[25],\n  xLeftWithoutChip: tokens_dist_esm/* spacing */.W0[200],\n  xRight: tokens_dist_esm/* spacing */.W0[100]\n}), types/* ComboboxSize */.C.Small, {\n  y: getYPadding(types/* ComboboxSize */.C.Small),\n  xLeftWithChip: tokens_dist_esm/* spacing */.W0[100],\n  xLeftWithoutChip: tokens_dist_esm/* spacing */.W0[200],\n  xRight: tokens_dist_esm/* spacing */.W0[100]\n}), types/* ComboboxSize */.C.Default, {\n  y: getYPadding(types/* ComboboxSize */.C.Default),\n  xLeftWithChip: tokens_dist_esm/* spacing */.W0[150],\n  xLeftWithoutChip: tokens_dist_esm/* spacing */.W0[300],\n  xRight: tokens_dist_esm/* spacing */.W0[200]\n}), types/* ComboboxSize */.C.Large, {\n  y: getYPadding(types/* ComboboxSize */.C.Large),\n  xLeftWithChip: tokens_dist_esm/* spacing */.W0[300],\n  xLeftWithoutChip: tokens_dist_esm/* spacing */.W0[300],\n  xRight: tokens_dist_esm/* spacing */.W0[200]\n});\n\n/** Width of the clear icon (in px) */\nvar clearButtonIconSize = 28;\n\n/** Width of the dropdown caret icon (in px) */\nvar caretIconSize = tokens_dist_esm/* spacing */.W0[400];\nvar comboboxParentStyle = function comboboxParentStyle(size) {\n  return (0,esm.css)(_templateObject || (_templateObject = (0,taggedTemplateLiteral/* default */.Z)(["\\n    font-family: ", ";\\n    width: 100%;\\n    min-width: ", "px;\\n  "])), tokens_dist_esm/* fontFamilies */.Vl["default"], ComboboxChip_styles/* fontSize */.JB[size] + 2 * comboboxPadding[size].xLeftWithChip + caretIconSize + 2);\n};\nvar baseComboboxStyles = (0,esm.css)(_templateObject2 || (_templateObject2 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  display: flex;\\n  align-items: center;\\n  gap: ", "px;\\n  cursor: text;\\n  transition: ", "ms ease-in-out;\\n  transition-property: background-color, box-shadow, border-color;\\n  border: 1px solid;\\n  width: 100%;\\n  max-width: 100%;\\n  border-radius: 6px;\\n  position: relative;\\n  overflow: hidden;\\n\\n  // Overflow shadow\\n  ::after {\\n    content: \'\';\\n    position: absolute;\\n    width: 100%;\\n    height: 20px;\\n    bottom: -21px;\\n    left: 50%;\\n    translate: -50% 0%;\\n    border-radius: 20%;\\n    box-shadow: 0 0 0 0 rgb(255 255 255 / 0%);\\n    transition: ", "ms linear;\\n    transition-property: box-shadow;\\n  }\\n"])), tokens_dist_esm/* spacing */.W0[200], tokens_dist_esm/* transitionDuration */.nV["default"], tokens_dist_esm/* transitionDuration */.nV["default"]);\nvar comboboxThemeStyles = (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, lib_dist_esm/* Theme */.Q2.Light, (0,esm.css)(_templateObject3 || (_templateObject3 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    color: ", ";\\n    background-color: ", ";\\n  "])), tokens_dist_esm/* color */.$_.light.text.primary["default"], tokens_dist_esm/* color */.$_.light.background.primary["default"])), lib_dist_esm/* Theme */.Q2.Dark, (0,esm.css)(_templateObject4 || (_templateObject4 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    color: ", ";\\n    background-color: ", ";\\n  "])), tokens_dist_esm/* color */.$_.dark.text.primary["default"], palette_dist_esm/* palette */.D.gray.dark4));\nvar comboboxSizeStyles = function comboboxSizeStyles(size, isMultiselectWithSelections) {\n  return (0,esm.css)(_templateObject5 || (_templateObject5 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  padding-top: ", "px;\\n  padding-bottom: ", "px;\\n  padding-left: ", ";\\n  padding-right: ", "px;\\n"])), comboboxPadding[size].y, comboboxPadding[size].y, isMultiselectWithSelections ? "".concat(comboboxPadding[size].xLeftWithChip, "px") : "".concat(comboboxPadding[size].xLeftWithoutChip, "px"), comboboxPadding[size].xRight);\n};\nvar getComboboxDisabledStyles = function getComboboxDisabledStyles(theme) {\n  return (0,esm.css)(_templateObject6 || (_templateObject6 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  cursor: not-allowed;\\n  color: ", ";\\n  background-color: ", ";\\n  border-color: ", ";\\n"])), tokens_dist_esm/* color */.$_[theme].text.disabled["default"], tokens_dist_esm/* color */.$_[theme].background.disabled["default"], tokens_dist_esm/* color */.$_[theme].border.disabled["default"]);\n};\nvar getComboboxStateStyles = function getComboboxStateStyles(theme) {\n  return (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, types/* State */.ZM.Error, (0,esm.css)(_templateObject7 || (_templateObject7 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    border-color: ", ";\\n  "])), tokens_dist_esm/* color */.$_[theme].border.error["default"])), types/* State */.ZM.None, (0,esm.css)(_templateObject8 || (_templateObject8 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    border-color: ", ";\\n  "])), tokens_dist_esm/* color */.$_[theme].border.primary["default"])), types/* State */.ZM.Valid, (0,esm.css)(_templateObject9 || (_templateObject9 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    border-color: ", ";\\n  "])), tokens_dist_esm/* color */.$_[theme].border.success["default"]));\n};\nvar comboboxFocusStyle = (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, lib_dist_esm/* Theme */.Q2.Light, (0,esm.css)(_templateObject10 || (_templateObject10 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    &:focus-within {\\n      border-color: transparent;\\n      box-shadow: ", ";\\n    }\\n  "])), tokens_dist_esm/* focusRing */.kN[lib_dist_esm/* Theme */.Q2.Light].input)), lib_dist_esm/* Theme */.Q2.Dark, (0,esm.css)(_templateObject11 || (_templateObject11 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    &:focus-within {\\n      border-color: transparent;\\n      box-shadow: ", ";\\n    }\\n  "])), tokens_dist_esm/* focusRing */.kN[lib_dist_esm/* Theme */.Q2.Dark].input));\nvar iconsWrapperBaseStyles = (0,esm.css)(_templateObject12 || (_templateObject12 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  display: flex;\\n  align-items: center;\\n"])));\nvar iconsWrapperSizeStyles = (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, types/* ComboboxSize */.C.XSmall, (0,esm.css)(_templateObject13 || (_templateObject13 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    gap: ", "px;\\n  "])), tokens_dist_esm/* spacing */.W0[100])), types/* ComboboxSize */.C.Small, (0,esm.css)(_templateObject14 || (_templateObject14 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    gap: ", "px;\\n  "])), tokens_dist_esm/* spacing */.W0[200])), types/* ComboboxSize */.C.Default, (0,esm.css)(_templateObject15 || (_templateObject15 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    gap: ", "px;\\n  "])), tokens_dist_esm/* spacing */.W0[200])), types/* ComboboxSize */.C.Large, (0,esm.css)(_templateObject16 || (_templateObject16 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    gap: ", "px;\\n  "])), tokens_dist_esm/* spacing */.W0[200]));\nvar inputWrapperStyle = function inputWrapperStyle(_ref2) {\n  var overflow = _ref2.overflow,\n    size = _ref2.size;\n  var baseWrapperStyle = (0,esm.css)(_templateObject17 || (_templateObject17 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    flex-grow: 1;\\n    width: 100%;\\n  "])));\n  switch (overflow) {\n    case types/* Overflow */.nP.scrollX:\n      {\n        return (0,esm.css)(_templateObject18 || (_templateObject18 = (0,taggedTemplateLiteral/* default */.Z)(["\\n        ", "\\n        display: block;\\n        height: ", "px;\\n        white-space: nowrap;\\n        overflow-x: scroll;\\n        scroll-behavior: smooth;\\n        scrollbar-width: none;\\n        line-height: 1;\\n\\n        &::-webkit-scrollbar {\\n          display: none;\\n        }\\n\\n        & > .", " {\\n          margin-inline: 2px;\\n\\n          &:first-child {\\n            margin-inline-start: 0;\\n          }\\n\\n          &:last-child {\\n            margin-inline-end: 0;\\n          }\\n        }\\n      "])), baseWrapperStyle, inputHeight(size), ComboboxChip_styles/* chipClassName */.Ns);\n      }\n\n    // TODO - look into animating input element height on wrap\n    case types/* Overflow */.nP.expandY:\n      {\n        return (0,esm.css)(_templateObject19 || (_templateObject19 = (0,taggedTemplateLiteral/* default */.Z)(["\\n        ", "\\n        display: flex;\\n        flex-wrap: wrap;\\n        gap: ", "px;\\n        overflow-x: hidden;\\n        min-height: ", "px;\\n        max-height: calc((", "px) + (", "px * 2));\\n      "])), baseWrapperStyle, flexGap, inputHeight(size), inputHeight(size) * 3, flexGap);\n      }\n  }\n};\nvar baseInputElementStyle = (0,esm.css)(_templateObject20 || (_templateObject20 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  font-family: ", ";\\n  width: 100%;\\n  border: none;\\n  cursor: inherit;\\n  background-color: inherit;\\n  color: inherit;\\n  box-sizing: content-box;\\n  padding: 0;\\n  margin: 0;\\n  text-overflow: ellipsis;\\n  vertical-align: top;\\n\\n  // Only add padding if there are chips\\n  &:not(:first-child) {\\n    padding-left: ", "px;\\n  }\\n\\n  &:placeholder-shown {\\n    min-width: 100%;\\n  }\\n  &:focus {\\n    outline: none;\\n  }\\n"])), tokens_dist_esm/* fontFamilies */.Vl["default"], tokens_dist_esm/* spacing */.W0[100]);\nvar inputElementThemeStyle = (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, lib_dist_esm/* Theme */.Q2.Light, (0,esm.css)(_templateObject21 || (_templateObject21 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    &::placeholder {\\n      color: ", ";\\n    }\\n  "])), palette_dist_esm/* palette */.D.gray.base)), lib_dist_esm/* Theme */.Q2.Dark, (0,esm.css)(_templateObject22 || (_templateObject22 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    &::placeholder {\\n      color: ", ";\\n    }\\n  "])), palette_dist_esm/* palette */.D.gray.dark1));\nvar inputElementDisabledThemeStyle = (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, lib_dist_esm/* Theme */.Q2.Light, (0,esm.css)(_templateObject23 || (_templateObject23 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    &::placeholder {\\n      color: ", ";\\n    }\\n  "])), palette_dist_esm/* palette */.D.gray.base)), lib_dist_esm/* Theme */.Q2.Dark, (0,esm.css)(_templateObject24 || (_templateObject24 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    &::placeholder {\\n      color: ", ";\\n    }\\n  "])), palette_dist_esm/* palette */.D.gray.dark1));\nvar inputElementSizeStyle = function inputElementSizeStyle(size) {\n  return (0,esm.css)(_templateObject25 || (_templateObject25 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  height: ", "px;\\n  font-size: ", "px;\\n  line-height: ", "px;\\n  min-width: ", "px;\\n"])), inputHeight(size), ComboboxChip_styles/* fontSize */.JB[size], ComboboxChip_styles/* lineHeight */.Nv[size], ComboboxChip_styles/* fontSize */.JB[size]);\n};\nvar inputElementTransitionStyles = function inputElementTransitionStyles(isOpen) {\n  return (0,esm.css)(_templateObject26 || (_templateObject26 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  /*\\n  * Immediate transition in, slow transition out. \\n  * \'-in\' transition is handled by `scroll-behavior` \\n  */\\n  transition: width ease-in-out ", ";\\n"], ["\\n  /*\\n  * Immediate transition in, slow transition out. \\n  * \'-in\' transition is handled by \\\\`scroll-behavior\\\\` \\n  */\\n  transition: width ease-in-out ", ";\\n"])), isOpen ? \'0s\' : \'100ms\');\n};\n\n// Previously defined in inputWrapperStyle\n/** Should only be applied to a multiselect */\nvar multiselectInputElementStyle = function multiselectInputElementStyle(size, inputValue) {\n  var _inputValue$length;\n  var inputLength = (_inputValue$length = inputValue === null || inputValue === void 0 ? void 0 : inputValue.length) !== null && _inputValue$length !== void 0 ? _inputValue$length : 0;\n  return (0,esm.css)(_templateObject27 || (_templateObject27 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    width: ", "px;\\n    max-width: 100%;\\n  "])), inputLength * ComboboxChip_styles/* fontSize */.JB[size]);\n};\nvar clearButtonStyle = (0,esm.css)(_templateObject28 || (_templateObject28 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  // Add a negative margin so the button takes up the same space as the regular icons\\n  margin-block: calc(", "px - 100%);\\n  margin-inline: -6px;\\n"])), caretIconSize / 2);\nvar iconStyle = (0,esm.css)(_templateObject29 || (_templateObject29 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  height: ", "px;\\n  width: ", "px;\\n"])), caretIconSize, caretIconSize);\nvar labelDescriptionContainerStyle = (0,esm.css)(_templateObject30 || (_templateObject30 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  margin-bottom: ", "px;\\n  display: flex;\\n  flex-direction: column;\\n"])), tokens_dist_esm/* spacing */.W0[100]);\nvar labelDescriptionLargeStyles = (0,esm.css)(_templateObject31 || (_templateObject31 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  font-size: ", "px;\\n  line-height: ", "px;\\n"])), tokens_dist_esm/* typeScales */.yL.large.fontSize, tokens_dist_esm/* typeScales */.yL.large.lineHeight);\nvar comboboxOverflowShadowStyles = (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, lib_dist_esm/* Theme */.Q2.Light, (0,esm.css)(_templateObject32 || (_templateObject32 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    ::after {\\n      box-shadow: 0px 0px 7px 5px ", ";\\n    }\\n  "])), (0,polished_esm/* transparentize */.DZ)(0.85, palette_dist_esm/* palette */.D.black))), lib_dist_esm/* Theme */.Q2.Dark, (0,esm.css)(_templateObject33 || (_templateObject33 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    ::after {\\n      width: 95%;\\n      box-shadow: 0px -7px 12px 5px rgb(0 0 0 / 50%);\\n    }\\n  "]))));\nvar getCaretIconFill = function getCaretIconFill(theme) {\n  return tokens_dist_esm/* color */.$_[theme].icon.primary["default"];\n};\nvar getCaretIconDisabledFill = function getCaretIconDisabledFill(theme) {\n  return tokens_dist_esm/* color */.$_[theme].icon.disabled["default"];\n};\n;// CONCATENATED MODULE: ./packages/combobox/src/Combobox/Combobox.tsx\n\n\n\n\n\nvar _excluded = ["children", "label", "description", "placeholder", "aria-label", "disabled", "size", "darkMode", "state", "errorMessage", "successMessage", "searchState", "searchEmptyMessage", "searchErrorMessage", "searchLoadingMessage", "filteredOptions", "onFilter", "clearable", "onClear", "overflow", "multiselect", "initialValue", "inputValue", "onInputChange", "onChange", "value", "chipTruncationLocation", "chipCharacterLimit", "className", "usePortal", "portalClassName", "portalContainer", "portalRef", "scrollContainer", "popoverZIndex"],\n  _excluded2 = ["className", "glyph", "disabled"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0,defineProperty/* default */.Z)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Combobox is a combination of a Select and TextInput,\n * allowing the user to either type a value directly or select a value from the list.\n * Can be configured to select a single or multiple options.\n */\nfunction Combobox(_ref) {\n  var children = _ref.children,\n    label = _ref.label,\n    description = _ref.description,\n    _ref$placeholder = _ref.placeholder,\n    placeholder = _ref$placeholder === void 0 ? \'Select\' : _ref$placeholder,\n    ariaLabel = _ref[\'aria-label\'],\n    _ref$disabled = _ref.disabled,\n    disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? types/* ComboboxSize */.C.Default : _ref$size,\n    darkModeProp = _ref.darkMode,\n    _ref$state = _ref.state,\n    state = _ref$state === void 0 ? \'none\' : _ref$state,\n    _ref$errorMessage = _ref.errorMessage,\n    errorMessage = _ref$errorMessage === void 0 ? dist_esm/* DEFAULT_MESSAGES */.Me.error : _ref$errorMessage,\n    _ref$successMessage = _ref.successMessage,\n    successMessage = _ref$successMessage === void 0 ? dist_esm/* DEFAULT_MESSAGES */.Me.success : _ref$successMessage,\n    _ref$searchState = _ref.searchState,\n    searchState = _ref$searchState === void 0 ? \'unset\' : _ref$searchState,\n    _ref$searchEmptyMessa = _ref.searchEmptyMessage,\n    searchEmptyMessage = _ref$searchEmptyMessa === void 0 ? \'No results found\' : _ref$searchEmptyMessa,\n    _ref$searchErrorMessa = _ref.searchErrorMessage,\n    searchErrorMessage = _ref$searchErrorMessa === void 0 ? \'Could not get results!\' : _ref$searchErrorMessa,\n    _ref$searchLoadingMes = _ref.searchLoadingMessage,\n    searchLoadingMessage = _ref$searchLoadingMes === void 0 ? \'Loading results...\' : _ref$searchLoadingMes,\n    filteredOptions = _ref.filteredOptions,\n    onFilter = _ref.onFilter,\n    _ref$clearable = _ref.clearable,\n    clearable = _ref$clearable === void 0 ? true : _ref$clearable,\n    onClear = _ref.onClear,\n    _ref$overflow = _ref.overflow,\n    overflow = _ref$overflow === void 0 ? types/* Overflow */.nP.expandY : _ref$overflow,\n    _ref$multiselect = _ref.multiselect,\n    multiselect = _ref$multiselect === void 0 ? false : _ref$multiselect,\n    initialValue = _ref.initialValue,\n    inputValueProp = _ref.inputValue,\n    onInputChange = _ref.onInputChange,\n    onChange = _ref.onChange,\n    value = _ref.value,\n    chipTruncationLocation = _ref.chipTruncationLocation,\n    _ref$chipCharacterLim = _ref.chipCharacterLimit,\n    chipCharacterLimit = _ref$chipCharacterLim === void 0 ? 12 : _ref$chipCharacterLim,\n    className = _ref.className,\n    _ref$usePortal = _ref.usePortal,\n    usePortal = _ref$usePortal === void 0 ? true : _ref$usePortal,\n    portalClassName = _ref.portalClassName,\n    portalContainer = _ref.portalContainer,\n    portalRef = _ref.portalRef,\n    scrollContainer = _ref.scrollContainer,\n    popoverZIndex = _ref.popoverZIndex,\n    rest = (0,objectWithoutProperties/* default */.Z)(_ref, _excluded);\n  var _useDarkMode = (0,leafygreen_provider_dist_esm/* useDarkMode */.vs)(darkModeProp),\n    darkMode = _useDarkMode.darkMode,\n    theme = _useDarkMode.theme;\n  var getOptionRef = (0,hooks_dist_esm/* useDynamicRefs */.DK)({\n    prefix: \'option\'\n  });\n  var getChipRef = (0,hooks_dist_esm/* useDynamicRefs */.DK)({\n    prefix: \'chip\'\n  });\n  var inputId = (0,hooks_dist_esm/* useIdAllocator */.ue)({\n    prefix: \'combobox-input\'\n  });\n  var labelId = (0,hooks_dist_esm/* useIdAllocator */.ue)({\n    prefix: \'combobox-label\'\n  });\n  var menuId = (0,hooks_dist_esm/* useIdAllocator */.ue)({\n    prefix: \'combobox-menu\'\n  });\n  var comboboxRef = (0,index_js_.useRef)(null);\n  var clearButtonRef = (0,index_js_.useRef)(null);\n  var inputWrapperRef = (0,index_js_.useRef)(null);\n  var inputRef = (0,index_js_.useRef)(null);\n  var menuRef = (0,index_js_.useRef)(null);\n  var _useState = (0,index_js_.useState)(false),\n    _useState2 = (0,slicedToArray/* default */.Z)(_useState, 2),\n    isOpen = _useState2[0],\n    setOpen = _useState2[1];\n  var wasOpen = (0,hooks_dist_esm/* usePrevious */.D9)(isOpen);\n  var _useState3 = (0,index_js_.useState)(null),\n    _useState4 = (0,slicedToArray/* default */.Z)(_useState3, 2),\n    highlightedOption = _useState4[0],\n    setHighlightedOption = _useState4[1];\n  var _useState5 = (0,index_js_.useState)(null),\n    _useState6 = (0,slicedToArray/* default */.Z)(_useState5, 2),\n    selection = _useState6[0],\n    setSelection = _useState6[1];\n  var prevSelection = (0,hooks_dist_esm/* usePrevious */.D9)(selection);\n  var _useState7 = (0,index_js_.useState)(inputValueProp !== null && inputValueProp !== void 0 ? inputValueProp : \'\'),\n    _useState8 = (0,slicedToArray/* default */.Z)(_useState7, 2),\n    inputValue = _useState8[0],\n    setInputValue = _useState8[1];\n  (0,index_js_.useEffect)(function () {\n    if (!isUndefined_default()(inputValueProp)) {\n      setInputValue(inputValueProp);\n    }\n  }, [inputValueProp]);\n  var updateInputValue = function updateInputValue(newInputVal) {\n    setInputValue(newInputVal);\n  };\n  var prevValue = (0,hooks_dist_esm/* usePrevious */.D9)(inputValue);\n  var _useState9 = (0,index_js_.useState)(null),\n    _useState10 = (0,slicedToArray/* default */.Z)(_useState9, 2),\n    focusedChip = _useState10[0],\n    setFocusedChip = _useState10[1];\n  var _useState11 = (0,index_js_.useState)(false),\n    _useState12 = (0,slicedToArray/* default */.Z)(_useState11, 2),\n    shouldShowOverflowShadow = _useState12[0],\n    setShouldShowOverflowShadow = _useState12[1];\n  var placeholderValue = multiselect && isArray_default()(selection) && selection.length > 0 ? undefined : placeholder;\n  var closeMenu = function closeMenu() {\n    return setOpen(false);\n  };\n  var openMenu = function openMenu() {\n    return setOpen(true);\n  };\n\n  /**\n   * Array of all of the options objects\n   */\n  var allOptions = (0,index_js_.useMemo)(function () {\n    return (0,utils/* flattenChildren */.Iz)(children);\n  }, [children]);\n\n  /**\n   * Utility function that tells Typescript whether selection is multiselect\n   */\n  var isMultiselect = (0,index_js_.useCallback)(function (val) {\n    if (multiselect && (typeof val == \'string\' || typeof val == \'number\')) {\n      lib_dist_esm/* consoleOnce */.X3.error("Error in Combobox: multiselect is set to `true`, but received a ".concat((0,esm_typeof/* default */.Z)(val), " value: \\"").concat(val, "\\""));\n    } else if (!multiselect && isArray_default()(val)) {\n      lib_dist_esm/* consoleOnce */.X3.error(\'Error in Combobox: multiselect is set to `false`, but received an Array value\');\n    }\n    return multiselect && isArray_default()(val);\n  }, [multiselect]);\n\n  /**\n   * Forces focus of input box\n   * @param cursorPos index the cursor should be set to\n   */\n  var setInputFocus = (0,index_js_.useCallback)(function (cursorPos) {\n    if (!disabled && inputRef && inputRef.current) {\n      inputRef.current.focus();\n      if (!isUndefined_default()(cursorPos)) {\n        inputRef.current.setSelectionRange(cursorPos, cursorPos);\n      }\n    }\n  }, [disabled]);\n\n  /**\n   * Update selection.\n   * This behaves differently in multi. vs single select.\n   * @param value option value the selection should be set to\n   */\n  var updateSelection = (0,index_js_.useCallback)(function (value) {\n    if (isMultiselect(selection)) {\n      // We know M is true here\n      var newSelection = clone_default()(selection);\n      var multiselectOnChange = onChange;\n      var diff = {\n        diffType: \'delete\',\n        value: value !== null && value !== void 0 ? value : selection\n      };\n      if (isNull_default()(value)) {\n        newSelection.length = 0;\n      } else {\n        if (selection.includes(value)) {\n          // remove from array\n          newSelection.splice(newSelection.indexOf(value), 1);\n        } else {\n          // add to array\n          newSelection.push(value);\n          diff.diffType = \'insert\';\n          // clear text\n          updateInputValue(\'\');\n        }\n      }\n      setSelection(newSelection);\n      multiselectOnChange === null || multiselectOnChange === void 0 ? void 0 : multiselectOnChange(newSelection, diff);\n    } else {\n      var _newSelection = value;\n      var singleSelectOnChange = onChange;\n      setSelection(_newSelection);\n      singleSelectOnChange === null || singleSelectOnChange === void 0 ? void 0 : singleSelectOnChange(_newSelection);\n    }\n  }, [isMultiselect, onChange, selection]);\n\n  /**\n   * Returns whether given text is included in, or equal to, the current selection.\n   * Similar to `isValueCurrentSelection`, but assumes the text argument is the `displayName` for the selection\n   * @param text the text to check\n   */\n  var isTextCurrentSelection = (0,index_js_.useCallback)(function (text) {\n    var value = (0,utils/* getValueForDisplayName */.fM)(text, allOptions);\n    return isValueCurrentSelection(value, selection);\n  }, [allOptions, selection]);\n\n  /**\n   * Returns whether the provided option is disabled\n   * @param option the option value or OptionObject to check\n   */\n  var isOptionDisabled = function isOptionDisabled(option) {\n    if (typeof option === \'string\') {\n      var optionObj = (0,utils/* getOptionObjectFromValue */.Jz)(option, allOptions);\n      return !!(optionObj !== null && optionObj !== void 0 && optionObj.isDisabled);\n    } else {\n      return !!option.isDisabled;\n    }\n  };\n\n  /**\n   * Computes whether the option is visible based on the current input\n   * @param option the option value or OptionObject to compute\n   */\n  var shouldOptionBeVisible = (0,index_js_.useCallback)(function (option) {\n    var value = typeof option === \'string\' ? option : option.value;\n\n    // If filtered options are provided\n    if (filteredOptions && filteredOptions.length > 0) {\n      return filteredOptions.includes(value);\n    }\n\n    // If the text input value is the current selection\n    // (or included in the selection)\n    // then all options should be visible\n    if (isTextCurrentSelection(inputValue)) {\n      return true;\n    }\n\n    // otherwise, we do our own filtering\n    var displayName = typeof option === \'string\' ? (0,utils/* getDisplayNameForValue */.st)(value, allOptions) : option.displayName;\n    var isValueInDisplayName = displayName.toLowerCase().includes(inputValue.toLowerCase());\n    return isValueInDisplayName;\n  }, [filteredOptions, isTextCurrentSelection, inputValue, allOptions]);\n\n  /**\n   * The array of visible options objects\n   */\n  var visibleOptions = (0,index_js_.useMemo)(function () {\n    return allOptions.filter(shouldOptionBeVisible);\n  }, [allOptions, shouldOptionBeVisible]);\n\n  /**\n   * Returns whether the given value is in the options array\n   * @param value the value to check\n   */\n  var isValueValid = (0,index_js_.useCallback)(function (value) {\n    return value ? !!allOptions.find(function (opt) {\n      return opt.value === value;\n    }) : false;\n  }, [allOptions]);\n\n  /**\n   * Returns the index of a given value in the array of visible (filtered) options\n   * @param value the option value to get the index of\n   */\n  var getIndexOfValue = (0,index_js_.useCallback)(function (value) {\n    return visibleOptions ? visibleOptions.findIndex(function (option) {\n      return option.value === value;\n    }) : -1;\n  }, [visibleOptions]);\n\n  /**\n   * Returns the option value of a given index in the array of visible (filtered) options\n   * @param index the option index to get the value of\n   */\n  var getValueAtIndex = (0,index_js_.useCallback)(function (index) {\n    if (visibleOptions && visibleOptions.length >= index) {\n      var option = visibleOptions[index];\n      return option ? option.value : undefined;\n    }\n  }, [visibleOptions]);\n\n  /**\n   * Returns the index of the active chip in the selection array\n   */\n  var getActiveChipIndex = (0,index_js_.useCallback)(function () {\n    return isMultiselect(selection) ? selection.findIndex(function (value) {\n      var _getChipRef;\n      return (_getChipRef = getChipRef(value)) === null || _getChipRef === void 0 || (_getChipRef = _getChipRef.current) === null || _getChipRef === void 0 ? void 0 : _getChipRef.contains(document.activeElement);\n    }) : -1;\n  }, [getChipRef, isMultiselect, selection]);\n\n  /**\n   *\n   * Focus Management\n   *\n   */\n\n  var _useState13 = (0,index_js_.useState)(),\n    _useState14 = (0,slicedToArray/* default */.Z)(_useState13, 2),\n    focusedElementName = _useState14[0],\n    trackFocusedElement = _useState14[1];\n  var isElementFocused = function isElementFocused(elementName) {\n    return elementName === focusedElementName;\n  };\n  /**\n   * Updates the highlighted menu option based on the provided direction\n   * @param direction the direction to move the focus. `\'next\' | \'prev\' | \'first\' | \'last\'`\n   */\n  var updateHighlightedOption = (0,index_js_.useCallback)(function (direction) {\n    var _visibleOptions$lengt;\n    var optionsCount = (_visibleOptions$lengt = visibleOptions === null || visibleOptions === void 0 ? void 0 : visibleOptions.length) !== null && _visibleOptions$lengt !== void 0 ? _visibleOptions$lengt : 0;\n    var lastIndex = optionsCount - 1 > 0 ? optionsCount - 1 : 0;\n    var indexOfHighlight = getIndexOfValue(highlightedOption);\n\n    // Remove focus from chip\n    if (direction && isOpen) {\n      setFocusedChip(null);\n      setInputFocus();\n    }\n    switch (direction) {\n      case \'next\':\n        {\n          var newValue = indexOfHighlight + 1 < optionsCount ? getValueAtIndex(indexOfHighlight + 1) : getValueAtIndex(0);\n          setHighlightedOption(newValue !== null && newValue !== void 0 ? newValue : null);\n          break;\n        }\n      case \'prev\':\n        {\n          var _newValue = indexOfHighlight - 1 >= 0 ? getValueAtIndex(indexOfHighlight - 1) : getValueAtIndex(lastIndex);\n          setHighlightedOption(_newValue !== null && _newValue !== void 0 ? _newValue : null);\n          break;\n        }\n      case \'last\':\n        {\n          var _newValue2 = getValueAtIndex(lastIndex);\n          setHighlightedOption(_newValue2 !== null && _newValue2 !== void 0 ? _newValue2 : null);\n          break;\n        }\n      case \'first\':\n      default:\n        {\n          var _newValue3 = getValueAtIndex(0);\n          setHighlightedOption(_newValue3 !== null && _newValue3 !== void 0 ? _newValue3 : null);\n        }\n    }\n  }, [highlightedOption, getIndexOfValue, getValueAtIndex, isOpen, setInputFocus, visibleOptions === null || visibleOptions === void 0 ? void 0 : visibleOptions.length]);\n\n  /**\n   * Updates the focused chip based on the provided direction\n   * @param direction the direction to move the focus. `\'next\' | \'prev\' | \'first\' | \'last\'`\n   * @param relativeToIndex the chip index to move focus relative to\n   */\n  var updateFocusedChip = (0,index_js_.useCallback)(function (direction, relativeToIndex) {\n    if (isMultiselect(selection)) {\n      switch (direction) {\n        case \'next\':\n          {\n            var referenceChipIndex = relativeToIndex !== null && relativeToIndex !== void 0 ? relativeToIndex : getActiveChipIndex();\n            var nextChipIndex = referenceChipIndex + 1 < selection.length ? referenceChipIndex + 1 : selection.length - 1;\n            var nextChipValue = selection[nextChipIndex];\n            setFocusedChip(nextChipValue);\n            break;\n          }\n        case \'prev\':\n          {\n            var _referenceChipIndex = relativeToIndex !== null && relativeToIndex !== void 0 ? relativeToIndex : getActiveChipIndex();\n            var prevChipIndex = _referenceChipIndex > 0 ? _referenceChipIndex - 1 : _referenceChipIndex < 0 ? selection.length - 1 : 0;\n            var prevChipValue = selection[prevChipIndex];\n            setFocusedChip(prevChipValue);\n            break;\n          }\n        case \'first\':\n          {\n            var firstChipValue = selection[0];\n            setFocusedChip(firstChipValue);\n            break;\n          }\n        case \'last\':\n          {\n            var lastChipValue = selection[selection.length - 1];\n            setFocusedChip(lastChipValue);\n            break;\n          }\n        default:\n          setFocusedChip(null);\n          break;\n      }\n    }\n  }, [getActiveChipIndex, isMultiselect, selection]);\n\n  /**\n   * Handles an arrow key press\n   */\n  var handleArrowKey = (0,index_js_.useCallback)(function (direction, event) {\n    // Remove focus from menu\n    if (direction) setHighlightedOption(null);\n    switch (direction) {\n      case \'right\':\n        switch (focusedElementName) {\n          case types/* ComboboxElement */.RU.Input:\n            {\n              var _inputRef$current, _inputRef$current2;\n              // If cursor is at the end of the input\n              if (((_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.selectionEnd) === ((_inputRef$current2 = inputRef.current) === null || _inputRef$current2 === void 0 ? void 0 : _inputRef$current2.value.length)) {\n                var _clearButtonRef$curre;\n                (_clearButtonRef$curre = clearButtonRef.current) === null || _clearButtonRef$curre === void 0 ? void 0 : _clearButtonRef$curre.focus();\n              }\n              break;\n            }\n          case types/* ComboboxElement */.RU.FirstChip:\n          case types/* ComboboxElement */.RU.MiddleChip:\n          case types/* ComboboxElement */.RU.LastChip:\n            {\n              if (focusedElementName === types/* ComboboxElement */.RU.LastChip ||\n              // the first chip is also the last chip (i.e. only one)\n              (selection === null || selection === void 0 ? void 0 : selection.length) === 1) {\n                // if focus is on last chip, go to input\n                setInputFocus(0);\n                updateFocusedChip(null);\n                event.preventDefault();\n                break;\n              }\n              // First/middle chips\n              updateFocusedChip(\'next\');\n              break;\n            }\n          case types/* ComboboxElement */.RU.ClearButton:\n          default:\n            break;\n        }\n        break;\n      case \'left\':\n        switch (focusedElementName) {\n          case types/* ComboboxElement */.RU.ClearButton:\n            {\n              var _inputRef$current3;\n              event.preventDefault();\n              setInputFocus(inputRef === null || inputRef === void 0 || (_inputRef$current3 = inputRef.current) === null || _inputRef$current3 === void 0 ? void 0 : _inputRef$current3.value.length);\n              break;\n            }\n          case types/* ComboboxElement */.RU.Input:\n          case types/* ComboboxElement */.RU.MiddleChip:\n          case types/* ComboboxElement */.RU.LastChip:\n            {\n              if (isMultiselect(selection)) {\n                var _inputRef$current4;\n                // Break if cursor is not at the start of the input\n                if (focusedElementName === types/* ComboboxElement */.RU.Input && ((_inputRef$current4 = inputRef.current) === null || _inputRef$current4 === void 0 ? void 0 : _inputRef$current4.selectionStart) !== 0) {\n                  break;\n                }\n                updateFocusedChip(\'prev\');\n              }\n              break;\n            }\n          case types/* ComboboxElement */.RU.FirstChip:\n          default:\n            break;\n        }\n        break;\n      default:\n        updateFocusedChip(null);\n        break;\n    }\n  }, [focusedElementName, isMultiselect, selection, setInputFocus, updateFocusedChip]);\n\n  // When the input value changes (or when the menu opens)\n  // Update the focused option\n  (0,index_js_.useEffect)(function () {\n    if (inputValue !== prevValue) {\n      updateHighlightedOption(\'first\');\n    }\n  }, [inputValue, isOpen, prevValue, updateHighlightedOption]);\n\n  // When the focused option changes, update the menu scroll if necessary\n  (0,hooks_dist_esm/* useAutoScroll */.rr)(highlightedOption ? getOptionRef(highlightedOption) : undefined, menuRef);\n\n  /**\n   * Rendering\n   */\n\n  /**\n   * Callback to render a child as an <InternalComboboxOption> element\n   */\n  var renderOption = (0,index_js_.useCallback)(function (child) {\n    if ((0,lib_dist_esm/* isComponentType */.Kf)(child, \'ComboboxOption\')) {\n      var _getNameAndValue = (0,utils/* getNameAndValue */.K$)(child.props),\n        _value = _getNameAndValue.value,\n        displayName = _getNameAndValue.displayName;\n      if (shouldOptionBeVisible(_value)) {\n        var _child$props = child.props,\n          _className = _child$props.className,\n          glyph = _child$props.glyph,\n          _disabled = _child$props.disabled,\n          _rest = (0,objectWithoutProperties/* default */.Z)(_child$props, _excluded2);\n        var index = allOptions.findIndex(function (opt) {\n          return opt.value === _value;\n        });\n        var isFocused = highlightedOption === _value;\n        var isSelected = isMultiselect(selection) ? selection.includes(_value) : selection === _value;\n        var setSelected = function setSelected() {\n          setHighlightedOption(_value);\n          updateSelection(_value);\n          setInputFocus();\n          if (_value === selection) {\n            closeMenu();\n          }\n        };\n        var optionRef = getOptionRef(_value);\n        return /*#__PURE__*/index_js_default().createElement(ComboboxOption/* InternalComboboxOption */.y, (0,esm_extends/* default */.Z)({}, _rest, {\n          value: _value,\n          displayName: displayName,\n          isFocused: isFocused,\n          isSelected: isSelected,\n          disabled: _disabled,\n          setSelected: setSelected,\n          glyph: glyph,\n          className: _className,\n          index: index,\n          ref: optionRef\n        }));\n      }\n    } else if ((0,lib_dist_esm/* isComponentType */.Kf)(child, \'ComboboxGroup\')) {\n      var nestedChildren = index_js_default().Children.map(child.props.children, renderOption);\n      if (nestedChildren && (nestedChildren === null || nestedChildren === void 0 ? void 0 : nestedChildren.length) > 0) {\n        return /*#__PURE__*/index_js_default().createElement(ComboboxGroup/* InternalComboboxGroup */.U, {\n          label: child.props.label,\n          className: child.props.className\n        }, index_js_default().Children.map(nestedChildren, renderOption));\n      }\n    }\n  }, [allOptions, getOptionRef, highlightedOption, isMultiselect, selection, setInputFocus, shouldOptionBeVisible, updateSelection]);\n\n  /**\n   * The rendered JSX elements for the options\n   */\n  var renderedOptionsJSX = (0,index_js_.useMemo)(function () {\n    return index_js_default().Children.map(children, renderOption);\n  }, [children, renderOption]);\n\n  /**\n   * The rendered JSX for the selection Chips\n   */\n  var renderedChips = (0,index_js_.useMemo)(function () {\n    if (isMultiselect(selection)) {\n      return selection.filter(isValueValid).map(function (value, index) {\n        var displayName = (0,utils/* getDisplayNameForValue */.st)(value, allOptions);\n        var isFocused = focusedChip === value;\n        var chipRef = getChipRef(value);\n        var isLastChip = index >= selection.length - 1;\n        var onRemove = function onRemove() {\n          if (isLastChip) {\n            // Focus the input if this is the last chip in the set\n            setInputFocus();\n            updateFocusedChip(null);\n          } else {\n            updateFocusedChip(\'next\', index);\n          }\n          updateSelection(value);\n        };\n        var onFocus = function onFocus() {\n          setFocusedChip(value);\n        };\n        return /*#__PURE__*/index_js_default().createElement(ComboboxChip/* ComboboxChip */.S, {\n          key: value,\n          displayName: displayName,\n          isFocused: isFocused,\n          onRemove: onRemove,\n          onFocus: onFocus,\n          ref: chipRef\n        });\n      });\n    }\n  }, [isMultiselect, selection, isValueValid, allOptions, focusedChip, getChipRef, updateSelection, setInputFocus, updateFocusedChip]);\n\n  /**\n   * Flag to determine whether the rendered options have icons\n   */\n  var withIcons = (0,index_js_.useMemo)(function () {\n    return allOptions.some(function (opt) {\n      return opt.hasGlyph;\n    });\n  }, [allOptions]);\n\n  /**\n   *`\n   * Selection Management\n   *\n   */\n\n  var onCloseMenu = (0,index_js_.useCallback)(function () {\n    var exactMatchedOption = visibleOptions.find(function (option) {\n      return option.displayName === inputValue || option.value === inputValue;\n    });\n\n    // check if inputValue is matches a valid option\n    // Set the selection to that value if the component is not controlled\n    if (!value && exactMatchedOption) {\n      updateSelection(exactMatchedOption.value);\n    } else {\n      if (!isMultiselect(selection)) {\n        var _getDisplayNameForVal;\n        // Revert the value to the previous selection\n        var displayName = (_getDisplayNameForVal = (0,utils/* getDisplayNameForValue */.st)(selection, allOptions)) !== null && _getDisplayNameForVal !== void 0 ? _getDisplayNameForVal : prevSelection;\n        updateInputValue(displayName);\n      }\n    }\n  }, [allOptions, inputValue, isMultiselect, prevSelection, selection, updateSelection, value, visibleOptions]);\n\n  /**\n   * Side effects to run when the selection changes\n   */\n  var onSelect = (0,index_js_.useCallback)(function () {\n    if (doesSelectionExist(selection)) {\n      if (isMultiselect(selection)) {\n        scrollInputToEnd(overflow);\n      } else if (!isMultiselect(selection)) {\n        var _getDisplayNameForVal2;\n        // Update the text input\n        var displayName = (_getDisplayNameForVal2 = (0,utils/* getDisplayNameForValue */.st)(selection, allOptions)) !== null && _getDisplayNameForVal2 !== void 0 ? _getDisplayNameForVal2 : \'\';\n        updateInputValue(displayName);\n        closeMenu();\n      }\n    } else {\n      updateInputValue(\'\');\n    }\n  }, [allOptions, isMultiselect, selection, overflow]);\n\n  // Set the initialValue\n  (0,index_js_.useEffect)(function () {\n    if (initialValue) {\n      if (isArray_default()(initialValue)) {\n        var _initialValue$filter;\n        // Ensure the values we set are real options\n        var filteredValue = (_initialValue$filter = initialValue.filter(function (value) {\n          return isValueValid(value);\n        })) !== null && _initialValue$filter !== void 0 ? _initialValue$filter : [];\n        setSelection(filteredValue);\n      } else {\n        if (isValueValid(initialValue)) {\n          setSelection(initialValue);\n        }\n      }\n    } else {\n      setSelection((0,types/* getNullSelection */.ki)(multiselect));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // When controlled value changes, update the selection\n  // TODO: use useControlledValue\n  (0,index_js_.useEffect)(function () {\n    if (!isUndefined_default()(value) && value !== prevValue) {\n      if (isNull_default()(value)) {\n        setSelection(null);\n      } else if (isMultiselect(value)) {\n        // Ensure the value(s) passed in are valid options\n        var newSelection = value.filter(isValueValid);\n        setSelection(newSelection);\n      } else {\n        setSelection(isValueValid(value) ? value : null);\n      }\n    }\n  }, [isMultiselect, isValueValid, prevValue, value]);\n\n  // onSelect\n  // Side effects to run when the selection changes\n  (0,index_js_.useEffect)(function () {\n    var hasSelectionChanged = !isUndefined_default()(prevSelection) && (isArray_default()(selection) && !isNull_default()(prevSelection) || isString_default()(selection) || isNull_default()(selection)) && !isEqual_default()(selection, prevSelection);\n    if (hasSelectionChanged) {\n      onSelect();\n    }\n  }, [onSelect, prevSelection, selection]);\n\n  // when the menu closes, update the value if needed\n  (0,index_js_.useEffect)(function () {\n    if (!isOpen && wasOpen) {\n      onCloseMenu();\n    }\n  }, [isOpen, wasOpen, onCloseMenu]);\n\n  /**\n   *\n   * Menu management\n   *\n   */\n\n  var _useState15 = (0,index_js_.useState)(0),\n    _useState16 = (0,slicedToArray/* default */.Z)(_useState15, 2),\n    menuWidth = _useState16[0],\n    setMenuWidth = _useState16[1];\n\n  // When the menu opens, or the selection changes, or the focused option changes\n  // update the menu width\n  (0,index_js_.useEffect)(function () {\n    var _comboboxRef$current$, _comboboxRef$current;\n    setMenuWidth((_comboboxRef$current$ = (_comboboxRef$current = comboboxRef.current) === null || _comboboxRef$current === void 0 ? void 0 : _comboboxRef$current.clientWidth) !== null && _comboboxRef$current$ !== void 0 ? _comboboxRef$current$ : 0);\n  }, [comboboxRef, isOpen, highlightedOption, selection]);\n\n  /**\n   *\n   * Event Handlers\n   *\n   */\n\n  // Handler fired when the menu has finished transitioning in/out\n  var handleTransitionEnd = function handleTransitionEnd() {\n    var _comboboxRef$current$2, _comboboxRef$current2;\n    setMenuWidth((_comboboxRef$current$2 = (_comboboxRef$current2 = comboboxRef.current) === null || _comboboxRef$current2 === void 0 ? void 0 : _comboboxRef$current2.clientWidth) !== null && _comboboxRef$current$2 !== void 0 ? _comboboxRef$current$2 : 0);\n  };\n\n  // Prevent combobox from gaining focus by default\n  var handleInputWrapperMousedown = function handleInputWrapperMousedown(e) {\n    if (disabled) {\n      e.preventDefault();\n    }\n  };\n\n  // Set focus to the input element on click\n  var handleComboboxClick = function handleComboboxClick(e) {\n    // If we clicked the wrapper, not the input itself.\n    // (Focus is set automatically if the click is on the input)\n    if (e.target !== inputRef.current) {\n      var cursorPos = 0;\n      if (inputRef.current) {\n        var mouseX = e.nativeEvent.offsetX;\n        var inputRight = inputRef.current.offsetLeft + inputRef.current.clientWidth;\n        cursorPos = mouseX > inputRight ? inputValue.length : 0;\n      }\n      setInputFocus(cursorPos);\n    }\n\n    // Only open the menu in response to a click\n    openMenu();\n  };\n\n  // Fired whenever the wrapper gains focus,\n  // and any time the focus within changes\n  var handleComboboxFocus = function handleComboboxFocus(e) {\n    scrollInputToEnd(overflow);\n    trackFocusedElement(getNameFromElement(e.target));\n  };\n\n  // Fired onChange\n  var handleInputChange = function handleInputChange(e) {\n    updateInputValue(e.target.value);\n    // fire any filter function passed in\n    onFilter === null || onFilter === void 0 ? void 0 : onFilter(e.target.value);\n    onInputChange === null || onInputChange === void 0 ? void 0 : onInputChange(e);\n  };\n  var handleClearButtonFocus = function handleClearButtonFocus() {\n    setHighlightedOption(null);\n  };\n  var handleClearButtonClick = function handleClearButtonClick(e) {\n    if (!disabled) {\n      // Prevents triggering the setOpen function called by clicking anywhere within the input wrapper.\n      e.stopPropagation();\n      updateSelection(null);\n      onClear === null || onClear === void 0 ? void 0 : onClear(e);\n      onFilter === null || onFilter === void 0 ? void 0 : onFilter(\'\');\n      setInputFocus();\n    }\n  };\n  var handleKeyDown = function handleKeyDown(event) {\n    var _menuRef$current, _comboboxRef$current3;\n    var isFocusInMenu = (_menuRef$current = menuRef.current) === null || _menuRef$current === void 0 ? void 0 : _menuRef$current.contains(document.activeElement);\n    var isFocusOnCombobox = (_comboboxRef$current3 = comboboxRef.current) === null || _comboboxRef$current3 === void 0 ? void 0 : _comboboxRef$current3.contains(document.activeElement);\n    var isFocusInComponent = isFocusOnCombobox || isFocusInMenu;\n\n    // Only run if the focus is in the component\n    if (isFocusInComponent) {\n      // No support for modifiers yet\n      // TODO - Handle support for multiple chip selection\n      if (event.ctrlKey || event.shiftKey || event.altKey) {\n        return;\n      }\n      switch (event.key) {\n        case lib_dist_esm/* keyMap */.Pc.Tab:\n          {\n            switch (focusedElementName) {\n              case \'Input\':\n                {\n                  if (!doesSelectionExist(selection)) {\n                    closeMenu();\n                    updateHighlightedOption(\'first\');\n                    updateFocusedChip(null);\n                  }\n                  // else use default behavior\n                  break;\n                }\n              case \'LastChip\':\n                {\n                  // use default behavior\n                  updateFocusedChip(null);\n                  break;\n                }\n              case \'FirstChip\':\n              case \'MiddleChip\':\n                {\n                  // use default behavior\n                  break;\n                }\n              case \'ClearButton\':\n              default:\n                break;\n            }\n            break;\n          }\n        case lib_dist_esm/* keyMap */.Pc.Escape:\n          {\n            closeMenu();\n            updateHighlightedOption(\'first\');\n            break;\n          }\n        case lib_dist_esm/* keyMap */.Pc.Enter:\n          {\n            if (!isOpen) {\n              openMenu();\n            } else if (\n            // Select the highlighted option if\n            // the menu is open,\n            // we\'re focused on input element,\n            // and the highlighted option is not disabled\n            isOpen && focusedElementName === types/* ComboboxElement */.RU.Input && !isNull_default()(highlightedOption) && !isOptionDisabled(highlightedOption)) {\n              updateSelection(highlightedOption);\n            } else if (\n            // Focused on clear button\n            focusedElementName === types/* ComboboxElement */.RU.ClearButton) {\n              updateSelection(null);\n              setInputFocus();\n            }\n            break;\n          }\n        case lib_dist_esm/* keyMap */.Pc.Backspace:\n          {\n            // Backspace key focuses last chip if the input is focused\n            // Note: Chip removal behavior is handled in `onRemove` defined in `renderChips`\n            if (isMultiselect(selection)) {\n              var _inputRef$current5;\n              if (focusedElementName === \'Input\' && ((_inputRef$current5 = inputRef.current) === null || _inputRef$current5 === void 0 ? void 0 : _inputRef$current5.selectionStart) === 0) {\n                updateFocusedChip(\'last\');\n              }\n            }\n            // Open the menu regardless\n            openMenu();\n            break;\n          }\n        case lib_dist_esm/* keyMap */.Pc.ArrowDown:\n          {\n            if (isOpen) {\n              // Prevent the page from scrolling\n              event.preventDefault();\n              // only change option if the menu is already open\n              updateHighlightedOption(\'next\');\n            } else {\n              openMenu();\n            }\n            break;\n          }\n        case lib_dist_esm/* keyMap */.Pc.ArrowUp:\n          {\n            if (isOpen) {\n              // Prevent the page from scrolling\n              event.preventDefault();\n              // only change option if the menu is already open\n              updateHighlightedOption(\'prev\');\n            } else {\n              openMenu();\n            }\n            break;\n          }\n        case lib_dist_esm/* keyMap */.Pc.ArrowRight:\n          {\n            handleArrowKey(\'right\', event);\n            break;\n          }\n        case lib_dist_esm/* keyMap */.Pc.ArrowLeft:\n          {\n            handleArrowKey(\'left\', event);\n            break;\n          }\n        default:\n          {\n            if (!isOpen) {\n              openMenu();\n            }\n          }\n      }\n    }\n  };\n\n  /**\n   *\n   * Global Event Handler\n   *\n   */\n\n  (0,hooks_dist_esm/* useBackdropClick */.Sj)(closeMenu, [menuRef, comboboxRef], isOpen);\n\n  /**\n   * Checks if multi-select and if there are chips selected. The left padding of the wrapper changes when there are chips selected so we use this to conditionally change the padding.\n   */\n  var isMultiselectWithSelections = isMultiselect(selection) && !!selection.length;\n\n  /**\n   * Function that calls the `checkScrollPosition` util to check the scroll position\n   */\n  var handleInputWrapperScroll = function handleInputWrapperScroll(e) {\n    setShouldShowOverflowShadow((0,utils/* checkScrollPosition */.KS)(e.target));\n  };\n  var debounceScroll = debounce_default()(handleInputWrapperScroll, 50, {\n    leading: true\n  });\n\n  /**\n   * Function called on scroll of the inputWrapperRef container\n   */\n  var handleOnScroll = (0,index_js_.useCallback)(function (e) {\n    if (overflow === types/* Overflow */.nP.expandY) {\n      debounceScroll(e);\n    }\n  }, [debounceScroll, overflow]);\n\n  /**\n   * On load check if an overflow shadow should be visible\n   */\n  (0,index_js_.useEffect)(function () {\n    if (inputWrapperRef.current) {\n      setShouldShowOverflowShadow((0,utils/* checkScrollPosition */.KS)(inputWrapperRef.current));\n    }\n  }, []);\n  var popoverProps = _objectSpread({\n    popoverZIndex: popoverZIndex\n  }, usePortal ? {\n    usePortal: usePortal,\n    portalClassName: portalClassName,\n    portalContainer: portalContainer,\n    portalRef: portalRef,\n    scrollContainer: scrollContainer\n  } : {\n    usePortal: usePortal\n  });\n  var formFieldFeedbackProps = {\n    disabled: disabled,\n    errorMessage: errorMessage,\n    size: size,\n    state: state,\n    successMessage: successMessage\n  };\n  return /*#__PURE__*/index_js_default().createElement(leafygreen_provider_dist_esm/* default */.ZP, {\n    darkMode: darkMode\n  }, /*#__PURE__*/index_js_default().createElement(ComboboxContext/* ComboboxContext */.c.Provider, {\n    value: {\n      multiselect: multiselect,\n      size: size,\n      withIcons: withIcons,\n      disabled: disabled,\n      isOpen: isOpen,\n      state: state,\n      searchState: searchState,\n      chipTruncationLocation: chipTruncationLocation,\n      chipCharacterLimit: chipCharacterLimit,\n      inputValue: inputValue,\n      overflow: overflow,\n      popoverZIndex: popoverZIndex\n    }\n  }, /*#__PURE__*/index_js_default().createElement("div", (0,esm_extends/* default */.Z)({\n    className: (0,esm.cx)(comboboxParentStyle(size), className)\n  }, rest), (label || description) && /*#__PURE__*/index_js_default().createElement("div", {\n    className: labelDescriptionContainerStyle\n  }, label && /*#__PURE__*/index_js_default().createElement(typography_dist_esm/* Label */.__, {\n    id: labelId,\n    htmlFor: inputId,\n    darkMode: darkMode,\n    disabled: disabled,\n    className: (0,esm.cx)((0,defineProperty/* default */.Z)({}, labelDescriptionLargeStyles, size === types/* ComboboxSize */.C.Large))\n  }, label), description && /*#__PURE__*/index_js_default().createElement(typography_dist_esm/* Description */.dk, {\n    darkMode: darkMode,\n    disabled: disabled,\n    className: (0,esm.cx)((0,defineProperty/* default */.Z)({}, labelDescriptionLargeStyles, size === types/* ComboboxSize */.C.Large))\n  }, description)), /*#__PURE__*/index_js_default().createElement("div", {\n    ref: comboboxRef,\n    role: "combobox",\n    "aria-expanded": isOpen,\n    "aria-controls": menuId,\n    "aria-owns": menuId,\n    tabIndex: -1,\n    onMouseDown: handleInputWrapperMousedown,\n    onClick: handleComboboxClick,\n    onFocus: handleComboboxFocus,\n    onKeyDown: handleKeyDown,\n    onTransitionEnd: handleTransitionEnd,\n    className: (0,esm.cx)(baseComboboxStyles, comboboxThemeStyles[theme], comboboxSizeStyles(size, isMultiselectWithSelections), getComboboxStateStyles(theme)[state], (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, comboboxFocusStyle[theme], isElementFocused(types/* ComboboxElement */.RU.Input)), getComboboxDisabledStyles(theme), disabled), comboboxOverflowShadowStyles[theme], shouldShowOverflowShadow))\n  }, /*#__PURE__*/index_js_default().createElement("div", {\n    onScroll: handleOnScroll,\n    ref: inputWrapperRef,\n    className: inputWrapperStyle({\n      size: size,\n      overflow: overflow\n    })\n  }, renderedChips, /*#__PURE__*/index_js_default().createElement("input", {\n    "aria-label": ariaLabel !== null && ariaLabel !== void 0 ? ariaLabel : label,\n    "aria-autocomplete": "list",\n    "aria-controls": menuId,\n    "aria-labelledby": labelId,\n    ref: inputRef,\n    id: inputId,\n    className: (0,esm.cx)(baseInputElementStyle, inputElementSizeStyle(size), inputElementThemeStyle[theme], inputElementTransitionStyles(isOpen), (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, multiselectInputElementStyle(size, inputValue), isMultiselect(selection)), inputElementDisabledThemeStyle[theme], disabled)),\n    placeholder: placeholderValue,\n    "aria-disabled": disabled,\n    readOnly: disabled,\n    onChange: handleInputChange,\n    value: inputValue,\n    autoComplete: "off"\n  })), /*#__PURE__*/index_js_default().createElement("div", {\n    className: (0,esm.cx)(iconsWrapperBaseStyles, iconsWrapperSizeStyles[size])\n  }, clearable && doesSelectionExist(selection) && !disabled && /*#__PURE__*/index_js_default().createElement(icon_button_dist_esm/* default */.Z, {\n    "aria-label": "Clear selection",\n    disabled: disabled,\n    ref: clearButtonRef,\n    onClick: handleClearButtonClick,\n    onFocus: handleClearButtonFocus,\n    className: (0,esm.cx)(clearButtonStyle),\n    darkMode: darkMode\n  }, /*#__PURE__*/index_js_default().createElement(icon_dist_esm/* default */.ZP, {\n    glyph: "XWithCircle"\n  })), /*#__PURE__*/index_js_default().createElement(icon_dist_esm/* default */.ZP, {\n    glyph: "CaretDown",\n    className: iconStyle,\n    fill: (0,esm.cx)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, getCaretIconFill(theme), !disabled), getCaretIconDisabledFill(theme), disabled))\n  }))), /*#__PURE__*/index_js_default().createElement(dist_esm/* FormFieldFeedback */.e7, formFieldFeedbackProps), /*#__PURE__*/index_js_default().createElement(ComboboxMenu/* ComboboxMenu */.x, (0,esm_extends/* default */.Z)({\n    id: menuId,\n    labelId: labelId,\n    refEl: comboboxRef,\n    ref: menuRef,\n    menuWidth: menuWidth,\n    searchLoadingMessage: searchLoadingMessage,\n    searchErrorMessage: searchErrorMessage,\n    searchEmptyMessage: searchEmptyMessage\n  }, popoverProps), renderedOptionsJSX))));\n\n  // Closure-dependant utils\n\n  /**\n   * Scrolls the combobox to the far right if overflow === scroll-x\n   * Scrolls the combobox to the bottom if overflow === expand-y\n   */\n  function scrollInputToEnd(overflow) {\n    if (inputWrapperRef && inputWrapperRef.current) {\n      // TODO - consider converting to .scrollTo(). This is not yet supported in IE or jsdom\n      if (overflow === types/* Overflow */.nP.scrollX) {\n        inputWrapperRef.current.scrollLeft = inputWrapperRef.current.scrollWidth;\n      }\n      if (overflow === types/* Overflow */.nP.expandY) {\n        inputWrapperRef.current.scrollTop = inputWrapperRef.current.scrollHeight;\n      }\n    }\n  }\n\n  /**\n   * Returns the provided element as a ComboboxElement string\n   */\n  function getNameFromElement(element) {\n    var _inputRef$current6, _clearButtonRef$curre2, _menuRef$current2, _comboboxRef$current4;\n    if (!element) return;\n    if ((_inputRef$current6 = inputRef.current) !== null && _inputRef$current6 !== void 0 && _inputRef$current6.contains(element)) return types/* ComboboxElement */.RU.Input;\n    if ((_clearButtonRef$curre2 = clearButtonRef.current) !== null && _clearButtonRef$curre2 !== void 0 && _clearButtonRef$curre2.contains(element)) return types/* ComboboxElement */.RU.ClearButton;\n    var activeChipIndex = isMultiselect(selection) ? selection.findIndex(function (value) {\n      var _getChipRef2;\n      return (_getChipRef2 = getChipRef(value)) === null || _getChipRef2 === void 0 || (_getChipRef2 = _getChipRef2.current) === null || _getChipRef2 === void 0 ? void 0 : _getChipRef2.contains(element);\n    }) : -1;\n    if (isMultiselect(selection)) {\n      if (activeChipIndex === 0) return types/* ComboboxElement */.RU.FirstChip;\n      if (activeChipIndex === selection.length - 1) return types/* ComboboxElement */.RU.LastChip;\n      if (activeChipIndex > 0) return types/* ComboboxElement */.RU.MiddleChip;\n    }\n    if ((_menuRef$current2 = menuRef.current) !== null && _menuRef$current2 !== void 0 && _menuRef$current2.contains(element)) return types/* ComboboxElement */.RU.Menu;\n    if ((_comboboxRef$current4 = comboboxRef.current) !== null && _comboboxRef$current4 !== void 0 && _comboboxRef$current4.contains(element)) return types/* ComboboxElement */.RU.Combobox;\n  }\n}\nCombobox.propTypes =  false ? 0 : {};\n\n/**\n * Why\'d you have to go and make things so complicated?\n * - Avril; and also me to myself about this component\n */\n;// CONCATENATED MODULE: ./packages/combobox/src/Combobox/index.ts\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/combobox/src/Combobox/index.ts\n')},"./packages/combobox/src/ComboboxChip/ComboboxChip.styles.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JB: () => (/* binding */ fontSize),\n/* harmony export */   Ns: () => (/* binding */ chipClassName),\n/* harmony export */   Nv: () => (/* binding */ lineHeight),\n/* harmony export */   yk: () => (/* binding */ chipSizeStyles),\n/* harmony export */   zb: () => (/* binding */ chipWrapperPaddingY)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js");\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js");\n/* harmony import */ var _leafygreen_ui_chip__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/chip/dist/esm/index.js");\n/* harmony import */ var _leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/emotion/dist/esm/index.js");\n/* harmony import */ var _leafygreen_ui_lib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/lib/dist/esm/index.js");\n/* harmony import */ var _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/tokens/dist/esm/index.js");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/combobox/src/types/index.ts");\n\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4;\n\n\n\n\n\nvar chipClassName = (0,_leafygreen_ui_lib__WEBPACK_IMPORTED_MODULE_2__/* .createUniqueClassName */ .hy)(\'combobox-chip\');\n\n/**\n * The line-height of the combobox.\n */\nvar lineHeight = (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)((0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)((0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)((0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)({}, _types__WEBPACK_IMPORTED_MODULE_4__/* .ComboboxSize */ .C.XSmall, 16), _types__WEBPACK_IMPORTED_MODULE_4__/* .ComboboxSize */ .C.Small, _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .typeScales */ .yL.body1.lineHeight), _types__WEBPACK_IMPORTED_MODULE_4__/* .ComboboxSize */ .C.Default, _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .typeScales */ .yL.body1.lineHeight), _types__WEBPACK_IMPORTED_MODULE_4__/* .ComboboxSize */ .C.Large, _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .typeScales */ .yL.body2.lineHeight);\n\n/**\n * The font-size of the combobox.\n */\nvar fontSize = (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)((0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)((0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)((0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)({}, _types__WEBPACK_IMPORTED_MODULE_4__/* .ComboboxSize */ .C.XSmall, _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .typeScales */ .yL.body1.fontSize), _types__WEBPACK_IMPORTED_MODULE_4__/* .ComboboxSize */ .C.Small, _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .typeScales */ .yL.body1.fontSize), _types__WEBPACK_IMPORTED_MODULE_4__/* .ComboboxSize */ .C.Default, _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .typeScales */ .yL.body1.fontSize), _types__WEBPACK_IMPORTED_MODULE_4__/* .ComboboxSize */ .C.Large, _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_3__/* .typeScales */ .yL.body2.fontSize);\n\n/**\n * Vertical padding on a chip (in px)\n */\nvar chipWrapperPaddingY = (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)((0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)((0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)((0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)({}, _types__WEBPACK_IMPORTED_MODULE_4__/* .ComboboxSize */ .C.XSmall, 1), _types__WEBPACK_IMPORTED_MODULE_4__/* .ComboboxSize */ .C.Small, 0), _types__WEBPACK_IMPORTED_MODULE_4__/* .ComboboxSize */ .C.Default, 2), _types__WEBPACK_IMPORTED_MODULE_4__/* .ComboboxSize */ .C.Large, 4);\n\n/**\n * Override chip sizes\n */\nvar chipSizeStyles = (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)((0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)((0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)((0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)({}, _types__WEBPACK_IMPORTED_MODULE_4__/* .ComboboxSize */ .C.XSmall, (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.css)(_templateObject || (_templateObject = (0,_babel_runtime_helpers_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(["\\n    font-size: ", "px;\\n    line-height: ", "px;\\n\\n    .", " {\\n      padding-block: ", "px;\\n    }\\n  "])), fontSize[_types__WEBPACK_IMPORTED_MODULE_4__/* .ComboboxSize */ .C.XSmall], lineHeight[_types__WEBPACK_IMPORTED_MODULE_4__/* .ComboboxSize */ .C.XSmall], _leafygreen_ui_chip__WEBPACK_IMPORTED_MODULE_0__/* .chipTextClassName */ .uR, chipWrapperPaddingY[_types__WEBPACK_IMPORTED_MODULE_4__/* .ComboboxSize */ .C.XSmall])), _types__WEBPACK_IMPORTED_MODULE_4__/* .ComboboxSize */ .C.Small, (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.css)(_templateObject2 || (_templateObject2 = (0,_babel_runtime_helpers_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(["\\n    font-size: ", "px;\\n    line-height: ", "px;\\n\\n    .", " {\\n      padding-block: ", "px;\\n    }\\n  "])), fontSize[_types__WEBPACK_IMPORTED_MODULE_4__/* .ComboboxSize */ .C.Small], lineHeight[_types__WEBPACK_IMPORTED_MODULE_4__/* .ComboboxSize */ .C.Small], _leafygreen_ui_chip__WEBPACK_IMPORTED_MODULE_0__/* .chipTextClassName */ .uR, chipWrapperPaddingY[_types__WEBPACK_IMPORTED_MODULE_4__/* .ComboboxSize */ .C.Small])), _types__WEBPACK_IMPORTED_MODULE_4__/* .ComboboxSize */ .C.Default, (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.css)(_templateObject3 || (_templateObject3 = (0,_babel_runtime_helpers_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(["\\n    font-size: ", "px;\\n    line-height: ", "px;\\n\\n    .", " {\\n      padding-block: ", "px;\\n    }\\n  "])), fontSize[_types__WEBPACK_IMPORTED_MODULE_4__/* .ComboboxSize */ .C.Default], lineHeight[_types__WEBPACK_IMPORTED_MODULE_4__/* .ComboboxSize */ .C.Default], _leafygreen_ui_chip__WEBPACK_IMPORTED_MODULE_0__/* .chipTextClassName */ .uR, chipWrapperPaddingY[_types__WEBPACK_IMPORTED_MODULE_4__/* .ComboboxSize */ .C.Default])), _types__WEBPACK_IMPORTED_MODULE_4__/* .ComboboxSize */ .C.Large, (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.css)(_templateObject4 || (_templateObject4 = (0,_babel_runtime_helpers_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(["\\n    font-size: ", "px;\\n    line-height: ", "px;\\n\\n    .", " {\\n      padding-inline-end: 10px;\\n      padding-block: ", "px;\\n    }\\n  "])), fontSize[_types__WEBPACK_IMPORTED_MODULE_4__/* .ComboboxSize */ .C.Large], lineHeight[_types__WEBPACK_IMPORTED_MODULE_4__/* .ComboboxSize */ .C.Large], _leafygreen_ui_chip__WEBPACK_IMPORTED_MODULE_0__/* .chipTextClassName */ .uR, chipWrapperPaddingY[_types__WEBPACK_IMPORTED_MODULE_4__/* .ComboboxSize */ .C.Large]));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jb21ib2JveC9zcmMvQ29tYm9ib3hDaGlwL0NvbWJvYm94Q2hpcC5zdHlsZXMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBd0Q7QUFDWDtBQUNjO0FBQ1I7QUFFWDtBQUVqQyxJQUFNSyxhQUFhLEdBQUdILG1GQUFxQixDQUFDLGVBQWUsQ0FBQzs7QUFFbkU7QUFDQTtBQUNBO0FBQ08sSUFBTUksVUFBd0MsR0FBQUMsMEZBQUEsQ0FBQUEsMEZBQUEsQ0FBQUEsMEZBQUEsQ0FBQUEsMEZBQUEsS0FDbERILHlEQUFZLENBQUNJLE1BQU0sRUFBRyxFQUFFLEdBQ3hCSix5REFBWSxDQUFDSyxLQUFLLEVBQUdOLHVFQUFVLENBQUNPLEtBQUssQ0FBQ0osVUFBVSxHQUNoREYseURBQVksQ0FBQ08sT0FBTyxFQUFHUix1RUFBVSxDQUFDTyxLQUFLLENBQUNKLFVBQVUsR0FDbERGLHlEQUFZLENBQUNRLEtBQUssRUFBR1QsdUVBQVUsQ0FBQ1UsS0FBSyxDQUFDUCxVQUFVLENBQ2xEOztBQUVEO0FBQ0E7QUFDQTtBQUNPLElBQU1RLFFBQXNDLEdBQUFQLDBGQUFBLENBQUFBLDBGQUFBLENBQUFBLDBGQUFBLENBQUFBLDBGQUFBLEtBQ2hESCx5REFBWSxDQUFDSSxNQUFNLEVBQUdMLHVFQUFVLENBQUNPLEtBQUssQ0FBQ0ksUUFBUSxHQUMvQ1YseURBQVksQ0FBQ0ssS0FBSyxFQUFHTix1RUFBVSxDQUFDTyxLQUFLLENBQUNJLFFBQVEsR0FDOUNWLHlEQUFZLENBQUNPLE9BQU8sRUFBR1IsdUVBQVUsQ0FBQ08sS0FBSyxDQUFDSSxRQUFRLEdBQ2hEVix5REFBWSxDQUFDUSxLQUFLLEVBQUdULHVFQUFVLENBQUNVLEtBQUssQ0FBQ0MsUUFBUSxDQUNoRDs7QUFFRDtBQUNBO0FBQ0E7QUFDTyxJQUFNQyxtQkFBbUIsR0FBQVIsMEZBQUEsQ0FBQUEsMEZBQUEsQ0FBQUEsMEZBQUEsQ0FBQUEsMEZBQUEsS0FDN0JILHlEQUFZLENBQUNJLE1BQU0sRUFBRyxDQUFDLEdBQ3ZCSix5REFBWSxDQUFDSyxLQUFLLEVBQUcsQ0FBQyxHQUN0QkwseURBQVksQ0FBQ08sT0FBTyxFQUFHLENBQUMsR0FDeEJQLHlEQUFZLENBQUNRLEtBQUssRUFBRyxDQUFDLENBQ2Y7O0FBRVY7QUFDQTtBQUNBO0FBQ08sSUFBTUksY0FBNEMsR0FBQVQsMEZBQUEsQ0FBQUEsMEZBQUEsQ0FBQUEsMEZBQUEsQ0FBQUEsMEZBQUEsS0FDdERILHlEQUFZLENBQUNJLE1BQU0sRUFBR1AsMkRBQUcsQ0FBQWdCLGVBQUEsS0FBQUEsZUFBQSxHQUFBQyxpR0FBQSxtSEFDWEosUUFBUSxDQUFDVix5REFBWSxDQUFDSSxNQUFNLENBQUMsRUFDM0JGLFVBQVUsQ0FBQ0YseURBQVksQ0FBQ0ksTUFBTSxDQUFDLEVBRTNDUiw0RUFBaUIsRUFDRGUsbUJBQW1CLENBQUNYLHlEQUFZLENBQUNJLE1BQU0sQ0FBQyxJQUc1REoseURBQVksQ0FBQ0ssS0FBSyxFQUFHUiwyREFBRyxDQUFBa0IsZ0JBQUEsS0FBQUEsZ0JBQUEsR0FBQUQsaUdBQUEsbUhBQ1ZKLFFBQVEsQ0FBQ1YseURBQVksQ0FBQ0ssS0FBSyxDQUFDLEVBQzFCSCxVQUFVLENBQUNGLHlEQUFZLENBQUNLLEtBQUssQ0FBQyxFQUUxQ1QsNEVBQWlCLEVBQ0RlLG1CQUFtQixDQUFDWCx5REFBWSxDQUFDSyxLQUFLLENBQUMsSUFHM0RMLHlEQUFZLENBQUNPLE9BQU8sRUFBR1YsMkRBQUcsQ0FBQW1CLGdCQUFBLEtBQUFBLGdCQUFBLEdBQUFGLGlHQUFBLG1IQUNaSixRQUFRLENBQUNWLHlEQUFZLENBQUNPLE9BQU8sQ0FBQyxFQUM1QkwsVUFBVSxDQUFDRix5REFBWSxDQUFDTyxPQUFPLENBQUMsRUFFNUNYLDRFQUFpQixFQUNEZSxtQkFBbUIsQ0FBQ1gseURBQVksQ0FBQ08sT0FBTyxDQUFDLElBRzdEUCx5REFBWSxDQUFDUSxLQUFLLEVBQUdYLDJEQUFHLENBQUFvQixnQkFBQSxLQUFBQSxnQkFBQSxHQUFBSCxpR0FBQSxvSkFDVkosUUFBUSxDQUFDVix5REFBWSxDQUFDUSxLQUFLLENBQUMsRUFDMUJOLFVBQVUsQ0FBQ0YseURBQVksQ0FBQ1EsS0FBSyxDQUFDLEVBRTFDWiw0RUFBaUIsRUFFRGUsbUJBQW1CLENBQUNYLHlEQUFZLENBQUNRLEtBQUssQ0FBQyxFQUc3RCIsInNvdXJjZXMiOlsid2VicGFjazovL2xlYWZ5Z3JlZW4tdWkvLi9wYWNrYWdlcy9jb21ib2JveC9zcmMvQ29tYm9ib3hDaGlwL0NvbWJvYm94Q2hpcC5zdHlsZXMudHM/MDRmMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjaGlwVGV4dENsYXNzTmFtZSB9IGZyb20gJ0BsZWFmeWdyZWVuLXVpL2NoaXAnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGxlYWZ5Z3JlZW4tdWkvZW1vdGlvbic7XG5pbXBvcnQgeyBjcmVhdGVVbmlxdWVDbGFzc05hbWUgfSBmcm9tICdAbGVhZnlncmVlbi11aS9saWInO1xuaW1wb3J0IHsgdHlwZVNjYWxlcyB9IGZyb20gJ0BsZWFmeWdyZWVuLXVpL3Rva2Vucyc7XG5cbmltcG9ydCB7IENvbWJvYm94U2l6ZSB9IGZyb20gJy4uL3R5cGVzJztcblxuZXhwb3J0IGNvbnN0IGNoaXBDbGFzc05hbWUgPSBjcmVhdGVVbmlxdWVDbGFzc05hbWUoJ2NvbWJvYm94LWNoaXAnKTtcblxuLyoqXG4gKiBUaGUgbGluZS1oZWlnaHQgb2YgdGhlIGNvbWJvYm94LlxuICovXG5leHBvcnQgY29uc3QgbGluZUhlaWdodDogUmVjb3JkPENvbWJvYm94U2l6ZSwgbnVtYmVyPiA9IHtcbiAgW0NvbWJvYm94U2l6ZS5YU21hbGxdOiAxNixcbiAgW0NvbWJvYm94U2l6ZS5TbWFsbF06IHR5cGVTY2FsZXMuYm9keTEubGluZUhlaWdodCxcbiAgW0NvbWJvYm94U2l6ZS5EZWZhdWx0XTogdHlwZVNjYWxlcy5ib2R5MS5saW5lSGVpZ2h0LFxuICBbQ29tYm9ib3hTaXplLkxhcmdlXTogdHlwZVNjYWxlcy5ib2R5Mi5saW5lSGVpZ2h0LFxufTtcblxuLyoqXG4gKiBUaGUgZm9udC1zaXplIG9mIHRoZSBjb21ib2JveC5cbiAqL1xuZXhwb3J0IGNvbnN0IGZvbnRTaXplOiBSZWNvcmQ8Q29tYm9ib3hTaXplLCBudW1iZXI+ID0ge1xuICBbQ29tYm9ib3hTaXplLlhTbWFsbF06IHR5cGVTY2FsZXMuYm9keTEuZm9udFNpemUsXG4gIFtDb21ib2JveFNpemUuU21hbGxdOiB0eXBlU2NhbGVzLmJvZHkxLmZvbnRTaXplLFxuICBbQ29tYm9ib3hTaXplLkRlZmF1bHRdOiB0eXBlU2NhbGVzLmJvZHkxLmZvbnRTaXplLFxuICBbQ29tYm9ib3hTaXplLkxhcmdlXTogdHlwZVNjYWxlcy5ib2R5Mi5mb250U2l6ZSxcbn07XG5cbi8qKlxuICogVmVydGljYWwgcGFkZGluZyBvbiBhIGNoaXAgKGluIHB4KVxuICovXG5leHBvcnQgY29uc3QgY2hpcFdyYXBwZXJQYWRkaW5nWSA9IHtcbiAgW0NvbWJvYm94U2l6ZS5YU21hbGxdOiAxLFxuICBbQ29tYm9ib3hTaXplLlNtYWxsXTogMCxcbiAgW0NvbWJvYm94U2l6ZS5EZWZhdWx0XTogMixcbiAgW0NvbWJvYm94U2l6ZS5MYXJnZV06IDQsXG59IGFzIGNvbnN0O1xuXG4vKipcbiAqIE92ZXJyaWRlIGNoaXAgc2l6ZXNcbiAqL1xuZXhwb3J0IGNvbnN0IGNoaXBTaXplU3R5bGVzOiBSZWNvcmQ8Q29tYm9ib3hTaXplLCBzdHJpbmc+ID0ge1xuICBbQ29tYm9ib3hTaXplLlhTbWFsbF06IGNzc2BcbiAgICBmb250LXNpemU6ICR7Zm9udFNpemVbQ29tYm9ib3hTaXplLlhTbWFsbF19cHg7XG4gICAgbGluZS1oZWlnaHQ6ICR7bGluZUhlaWdodFtDb21ib2JveFNpemUuWFNtYWxsXX1weDtcblxuICAgIC4ke2NoaXBUZXh0Q2xhc3NOYW1lfSB7XG4gICAgICBwYWRkaW5nLWJsb2NrOiAke2NoaXBXcmFwcGVyUGFkZGluZ1lbQ29tYm9ib3hTaXplLlhTbWFsbF19cHg7XG4gICAgfVxuICBgLFxuICBbQ29tYm9ib3hTaXplLlNtYWxsXTogY3NzYFxuICAgIGZvbnQtc2l6ZTogJHtmb250U2l6ZVtDb21ib2JveFNpemUuU21hbGxdfXB4O1xuICAgIGxpbmUtaGVpZ2h0OiAke2xpbmVIZWlnaHRbQ29tYm9ib3hTaXplLlNtYWxsXX1weDtcblxuICAgIC4ke2NoaXBUZXh0Q2xhc3NOYW1lfSB7XG4gICAgICBwYWRkaW5nLWJsb2NrOiAke2NoaXBXcmFwcGVyUGFkZGluZ1lbQ29tYm9ib3hTaXplLlNtYWxsXX1weDtcbiAgICB9XG4gIGAsXG4gIFtDb21ib2JveFNpemUuRGVmYXVsdF06IGNzc2BcbiAgICBmb250LXNpemU6ICR7Zm9udFNpemVbQ29tYm9ib3hTaXplLkRlZmF1bHRdfXB4O1xuICAgIGxpbmUtaGVpZ2h0OiAke2xpbmVIZWlnaHRbQ29tYm9ib3hTaXplLkRlZmF1bHRdfXB4O1xuXG4gICAgLiR7Y2hpcFRleHRDbGFzc05hbWV9IHtcbiAgICAgIHBhZGRpbmctYmxvY2s6ICR7Y2hpcFdyYXBwZXJQYWRkaW5nWVtDb21ib2JveFNpemUuRGVmYXVsdF19cHg7XG4gICAgfVxuICBgLFxuICBbQ29tYm9ib3hTaXplLkxhcmdlXTogY3NzYFxuICAgIGZvbnQtc2l6ZTogJHtmb250U2l6ZVtDb21ib2JveFNpemUuTGFyZ2VdfXB4O1xuICAgIGxpbmUtaGVpZ2h0OiAke2xpbmVIZWlnaHRbQ29tYm9ib3hTaXplLkxhcmdlXX1weDtcblxuICAgIC4ke2NoaXBUZXh0Q2xhc3NOYW1lfSB7XG4gICAgICBwYWRkaW5nLWlubGluZS1lbmQ6IDEwcHg7XG4gICAgICBwYWRkaW5nLWJsb2NrOiAke2NoaXBXcmFwcGVyUGFkZGluZ1lbQ29tYm9ib3hTaXplLkxhcmdlXX1weDtcbiAgICB9XG4gIGAsXG59O1xuIl0sIm5hbWVzIjpbImNoaXBUZXh0Q2xhc3NOYW1lIiwiY3NzIiwiY3JlYXRlVW5pcXVlQ2xhc3NOYW1lIiwidHlwZVNjYWxlcyIsIkNvbWJvYm94U2l6ZSIsImNoaXBDbGFzc05hbWUiLCJsaW5lSGVpZ2h0IiwiX2RlZmluZVByb3BlcnR5IiwiWFNtYWxsIiwiU21hbGwiLCJib2R5MSIsIkRlZmF1bHQiLCJMYXJnZSIsImJvZHkyIiwiZm9udFNpemUiLCJjaGlwV3JhcHBlclBhZGRpbmdZIiwiY2hpcFNpemVTdHlsZXMiLCJfdGVtcGxhdGVPYmplY3QiLCJfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsIiwiX3RlbXBsYXRlT2JqZWN0MiIsIl90ZW1wbGF0ZU9iamVjdDMiLCJfdGVtcGxhdGVPYmplY3Q0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./packages/combobox/src/ComboboxChip/ComboboxChip.styles.ts\n')},"./packages/combobox/src/ComboboxChip/ComboboxChip.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   S: () => (/* binding */ ComboboxChip)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("webpack/sharing/consume/default/react/react");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _leafygreen_ui_chip__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/chip/dist/esm/index.js");\n/* harmony import */ var _leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/emotion/dist/esm/index.js");\n/* harmony import */ var _leafygreen_ui_hooks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/hooks/dist/esm/index.js");\n/* harmony import */ var _leafygreen_ui_lib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/lib/dist/esm/index.js");\n/* harmony import */ var _ComboboxContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/combobox/src/ComboboxContext/index.ts");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./packages/combobox/src/types/index.ts");\n/* harmony import */ var _ComboboxChip_styles__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./packages/combobox/src/ComboboxChip/ComboboxChip.styles.ts");\n\n\n\n\n\n\n\n\nvar ComboboxChip = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().forwardRef(function (_ref, forwardedRef) {\n  var _chipRef$current;\n  var displayName = _ref.displayName,\n    isFocused = _ref.isFocused,\n    onRemove = _ref.onRemove,\n    onFocus = _ref.onFocus;\n  var _useContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_ComboboxContext__WEBPACK_IMPORTED_MODULE_5__/* .ComboboxContext */ .c),\n    size = _useContext.size,\n    disabled = _useContext.disabled,\n    overflow = _useContext.overflow,\n    _useContext$chipTrunc = _useContext.chipTruncationLocation,\n    chipTruncationLocation = _useContext$chipTrunc === void 0 ? _types__WEBPACK_IMPORTED_MODULE_6__/* .TruncationLocation */ .Cc.End : _useContext$chipTrunc,\n    _useContext$chipChara = _useContext.chipCharacterLimit,\n    chipCharacterLimit = _useContext$chipChara === void 0 ? 12 : _useContext$chipChara,\n    popoverZIndex = _useContext.popoverZIndex;\n  var updatedChipTruncationLocation = overflow === _types__WEBPACK_IMPORTED_MODULE_6__/* .Overflow */ .nP.scrollX ? _types__WEBPACK_IMPORTED_MODULE_6__/* .TruncationLocation */ .Cc.None : chipTruncationLocation;\n  var chipRef = (0,_leafygreen_ui_hooks__WEBPACK_IMPORTED_MODULE_3__/* .useForwardedRef */ .ts)(forwardedRef, null);\n  var buttonRef = (_chipRef$current = chipRef.current) === null || _chipRef$current === void 0 ? void 0 : _chipRef$current.querySelector(\'button\');\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    if (isFocused && !disabled) {\n      buttonRef === null || buttonRef === void 0 ? void 0 : buttonRef.focus();\n    }\n  }, [disabled, buttonRef, isFocused]);\n  var handleKeyDown = function handleKeyDown(e) {\n    if (!disabled && (e.key === _leafygreen_ui_lib__WEBPACK_IMPORTED_MODULE_4__/* .keyMap */ .Pc.Delete || e.key === _leafygreen_ui_lib__WEBPACK_IMPORTED_MODULE_4__/* .keyMap */ .Pc.Backspace || e.key === _leafygreen_ui_lib__WEBPACK_IMPORTED_MODULE_4__/* .keyMap */ .Pc.Enter || e.key === _leafygreen_ui_lib__WEBPACK_IMPORTED_MODULE_4__/* .keyMap */ .Pc.Space)) {\n      onRemove();\n    }\n  };\n  var handleChipClick = function handleChipClick(e) {\n    // Did not click button\n    if (!(buttonRef !== null && buttonRef !== void 0 && buttonRef.contains(e.target))) {\n      onFocus();\n    }\n  };\n  var handleButtonClick = function handleButtonClick() {\n    if (!disabled) {\n      onRemove();\n    }\n  };\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_leafygreen_ui_chip__WEBPACK_IMPORTED_MODULE_1__/* .Chip */ .Af, {\n    label: displayName,\n    className: (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__.cx)(_ComboboxChip_styles__WEBPACK_IMPORTED_MODULE_7__/* .chipClassName */ .Ns, _ComboboxChip_styles__WEBPACK_IMPORTED_MODULE_7__/* .chipSizeStyles */ .yk[size]),\n    role: "option",\n    "aria-selected": isFocused,\n    "data-testid": "lg-combobox-chip",\n    onClick: handleChipClick,\n    onKeyDown: handleKeyDown,\n    onDismiss: handleButtonClick,\n    baseFontSize: _leafygreen_ui_chip__WEBPACK_IMPORTED_MODULE_1__/* .BaseFontSize */ .Y2.Body1,\n    chipCharacterLimit: chipCharacterLimit,\n    chipTruncationLocation: updatedChipTruncationLocation,\n    popoverZIndex: popoverZIndex,\n    variant: _leafygreen_ui_chip__WEBPACK_IMPORTED_MODULE_1__/* .Variant */ .$e.Gray,\n    ref: chipRef,\n    disabled: disabled,\n    tabIndex: -1\n  });\n});\nComboboxChip.displayName = \'ComboboxChip\';//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jb21ib2JveC9zcmMvQ29tYm9ib3hDaGlwL0NvbWJvYm94Q2hpcC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQXFEO0FBRWE7QUFDdEI7QUFDVztBQUNYO0FBRVM7QUFDRztBQUVjO0FBRy9ELElBQU1jLFlBQVksZ0JBQUdkLHVEQUFnQixDQUkxQyxVQUFBZ0IsSUFBQSxFQUVFQyxZQUFZLEVBQ1Q7RUFBQSxJQUFBQyxnQkFBQTtFQUFBLElBRkRDLFdBQVcsR0FBQUgsSUFBQSxDQUFYRyxXQUFXO0lBQUVDLFNBQVMsR0FBQUosSUFBQSxDQUFUSSxTQUFTO0lBQUVDLFFBQVEsR0FBQUwsSUFBQSxDQUFSSyxRQUFRO0lBQUVDLE9BQU8sR0FBQU4sSUFBQSxDQUFQTSxPQUFPO0VBRzNDLElBQUFDLFdBQUEsR0FPSXRCLGlEQUFVLENBQUNRLHNFQUFlLENBQUM7SUFON0JlLElBQUksR0FBQUQsV0FBQSxDQUFKQyxJQUFJO0lBQ0pDLFFBQVEsR0FBQUYsV0FBQSxDQUFSRSxRQUFRO0lBQ1JDLFFBQVEsR0FBQUgsV0FBQSxDQUFSRyxRQUFRO0lBQUFDLHFCQUFBLEdBQUFKLFdBQUEsQ0FDUkssc0JBQXNCO0lBQXRCQSxzQkFBc0IsR0FBQUQscUJBQUEsY0FBR2hCLGdFQUFrQixDQUFDa0IsR0FBRyxHQUFBRixxQkFBQTtJQUFBRyxxQkFBQSxHQUFBUCxXQUFBLENBQy9DUSxrQkFBa0I7SUFBbEJBLGtCQUFrQixHQUFBRCxxQkFBQSxjQUFHLEVBQUUsR0FBQUEscUJBQUE7SUFDdkJFLGFBQWEsR0FBQVQsV0FBQSxDQUFiUyxhQUFhO0VBR2YsSUFBTUMsNkJBQTZCLEdBQ2pDUCxRQUFRLEtBQUtoQixzREFBUSxDQUFDd0IsT0FBTyxHQUN6QnZCLGdFQUFrQixDQUFDd0IsSUFBSSxHQUN2QlAsc0JBQXNCO0VBRTVCLElBQU1RLE9BQU8sR0FBRzdCLCtFQUFlLENBQUNVLFlBQVksRUFBRSxJQUFJLENBQUM7RUFDbkQsSUFBTW9CLFNBQVMsSUFBQW5CLGdCQUFBLEdBQUdrQixPQUFPLENBQUNFLE9BQU8sY0FBQXBCLGdCQUFBLHVCQUFmQSxnQkFBQSxDQUFpQnFCLGFBQWEsQ0FBQyxRQUFRLENBQUM7RUFFMURyQyxnREFBUyxDQUFDLFlBQU07SUFDZCxJQUFJa0IsU0FBUyxJQUFJLENBQUNLLFFBQVEsRUFBRTtNQUMxQlksU0FBUyxhQUFUQSxTQUFTLHVCQUFUQSxTQUFTLENBQUVHLEtBQUssQ0FBQyxDQUFDO0lBQ3BCO0VBQ0YsQ0FBQyxFQUFFLENBQUNmLFFBQVEsRUFBRVksU0FBUyxFQUFFakIsU0FBUyxDQUFDLENBQUM7RUFFcEMsSUFBTXFCLGFBQWEsR0FBRyxTQUFoQkEsYUFBYUEsQ0FBSUMsQ0FBc0IsRUFBSztJQUNoRCxJQUNFLENBQUNqQixRQUFRLEtBQ1JpQixDQUFDLENBQUNDLEdBQUcsS0FBS25DLGdFQUFNLENBQUNvQyxNQUFNLElBQ3RCRixDQUFDLENBQUNDLEdBQUcsS0FBS25DLGdFQUFNLENBQUNxQyxTQUFTLElBQzFCSCxDQUFDLENBQUNDLEdBQUcsS0FBS25DLGdFQUFNLENBQUNzQyxLQUFLLElBQ3RCSixDQUFDLENBQUNDLEdBQUcsS0FBS25DLGdFQUFNLENBQUN1QyxLQUFLLENBQUMsRUFDekI7TUFDQTFCLFFBQVEsQ0FBQyxDQUFDO0lBQ1o7RUFDRixDQUFDO0VBRUQsSUFBTTJCLGVBQWUsR0FBRyxTQUFsQkEsZUFBZUEsQ0FBSU4sQ0FBbUIsRUFBSztJQUMvQztJQUNBLElBQUksRUFBQ0wsU0FBUyxhQUFUQSxTQUFTLGVBQVRBLFNBQVMsQ0FBRVksUUFBUSxDQUFDUCxDQUFDLENBQUNRLE1BQWMsQ0FBQyxHQUFFO01BQzFDNUIsT0FBTyxDQUFDLENBQUM7SUFDWDtFQUNGLENBQUM7RUFFRCxJQUFNNkIsaUJBQWlCLEdBQUcsU0FBcEJBLGlCQUFpQkEsQ0FBQSxFQUFTO0lBQzlCLElBQUksQ0FBQzFCLFFBQVEsRUFBRTtNQUNiSixRQUFRLENBQUMsQ0FBQztJQUNaO0VBQ0YsQ0FBQztFQUVELG9CQUNFckIsMERBQUEsQ0FBQ0ksK0RBQUk7SUFDSGlELEtBQUssRUFBRWxDLFdBQVk7SUFDbkJtQyxTQUFTLEVBQUVoRCwwREFBRSxDQUFDTSx5RUFBYSxFQUFFQywwRUFBYyxDQUFDVyxJQUFJLENBQUMsQ0FBRTtJQUNuRCtCLElBQUksRUFBQyxRQUFRO0lBQ2IsaUJBQWVuQyxTQUFVO0lBQ3pCLGVBQVksa0JBQWtCO0lBQzlCb0MsT0FBTyxFQUFFUixlQUFnQjtJQUN6QlMsU0FBUyxFQUFFaEIsYUFBYztJQUN6QmlCLFNBQVMsRUFBRVAsaUJBQWtCO0lBQzdCUSxZQUFZLEVBQUV4RCx1RUFBWSxDQUFDeUQsS0FBTTtJQUNqQzdCLGtCQUFrQixFQUFFQSxrQkFBbUI7SUFDdkNILHNCQUFzQixFQUFFSyw2QkFBOEI7SUFDdERELGFBQWEsRUFBRUEsYUFBYztJQUM3QjZCLE9BQU8sRUFBRXhELGtFQUFPLENBQUN5RCxJQUFLO0lBQ3RCQyxHQUFHLEVBQUUzQixPQUFRO0lBQ2JYLFFBQVEsRUFBRUEsUUFBUztJQUNuQnVDLFFBQVEsRUFBRSxDQUFDO0VBQUUsQ0FDZCxDQUFDO0FBRU4sQ0FDRixDQUFDO0FBQ0RsRCxZQUFZLENBQUNLLFdBQVcsR0FBRyxjQUFjIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVhZnlncmVlbi11aS8uL3BhY2thZ2VzL2NvbWJvYm94L3NyYy9Db21ib2JveENoaXAvQ29tYm9ib3hDaGlwLnRzeD8yYWMwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VDb250ZXh0LCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7IEJhc2VGb250U2l6ZSwgQ2hpcCwgVmFyaWFudCB9IGZyb20gJ0BsZWFmeWdyZWVuLXVpL2NoaXAnO1xuaW1wb3J0IHsgY3ggfSBmcm9tICdAbGVhZnlncmVlbi11aS9lbW90aW9uJztcbmltcG9ydCB7IHVzZUZvcndhcmRlZFJlZiB9IGZyb20gJ0BsZWFmeWdyZWVuLXVpL2hvb2tzJztcbmltcG9ydCB7IGtleU1hcCB9IGZyb20gJ0BsZWFmeWdyZWVuLXVpL2xpYic7XG5cbmltcG9ydCB7IENvbWJvYm94Q29udGV4dCB9IGZyb20gJy4uL0NvbWJvYm94Q29udGV4dCc7XG5pbXBvcnQgeyBPdmVyZmxvdywgVHJ1bmNhdGlvbkxvY2F0aW9uIH0gZnJvbSAnLi4vdHlwZXMnO1xuXG5pbXBvcnQgeyBjaGlwQ2xhc3NOYW1lLCBjaGlwU2l6ZVN0eWxlcyB9IGZyb20gJy4vQ29tYm9ib3hDaGlwLnN0eWxlcyc7XG5pbXBvcnQgeyBDb21ib2JveENoaXBQcm9wcyB9IGZyb20gJy4vQ29tYm9ib3hDaGlwLnR5cGVzJztcblxuZXhwb3J0IGNvbnN0IENvbWJvYm94Q2hpcCA9IFJlYWN0LmZvcndhcmRSZWY8XG4gIEhUTUxTcGFuRWxlbWVudCxcbiAgQ29tYm9ib3hDaGlwUHJvcHNcbj4oXG4gIChcbiAgICB7IGRpc3BsYXlOYW1lLCBpc0ZvY3VzZWQsIG9uUmVtb3ZlLCBvbkZvY3VzIH06IENvbWJvYm94Q2hpcFByb3BzLFxuICAgIGZvcndhcmRlZFJlZixcbiAgKSA9PiB7XG4gICAgY29uc3Qge1xuICAgICAgc2l6ZSxcbiAgICAgIGRpc2FibGVkLFxuICAgICAgb3ZlcmZsb3csXG4gICAgICBjaGlwVHJ1bmNhdGlvbkxvY2F0aW9uID0gVHJ1bmNhdGlvbkxvY2F0aW9uLkVuZCxcbiAgICAgIGNoaXBDaGFyYWN0ZXJMaW1pdCA9IDEyLFxuICAgICAgcG9wb3ZlclpJbmRleCxcbiAgICB9ID0gdXNlQ29udGV4dChDb21ib2JveENvbnRleHQpO1xuXG4gICAgY29uc3QgdXBkYXRlZENoaXBUcnVuY2F0aW9uTG9jYXRpb24gPVxuICAgICAgb3ZlcmZsb3cgPT09IE92ZXJmbG93LnNjcm9sbFhcbiAgICAgICAgPyBUcnVuY2F0aW9uTG9jYXRpb24uTm9uZVxuICAgICAgICA6IGNoaXBUcnVuY2F0aW9uTG9jYXRpb247XG5cbiAgICBjb25zdCBjaGlwUmVmID0gdXNlRm9yd2FyZGVkUmVmKGZvcndhcmRlZFJlZiwgbnVsbCk7XG4gICAgY29uc3QgYnV0dG9uUmVmID0gY2hpcFJlZi5jdXJyZW50Py5xdWVyeVNlbGVjdG9yKCdidXR0b24nKTtcblxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICBpZiAoaXNGb2N1c2VkICYmICFkaXNhYmxlZCkge1xuICAgICAgICBidXR0b25SZWY/LmZvY3VzKCk7XG4gICAgICB9XG4gICAgfSwgW2Rpc2FibGVkLCBidXR0b25SZWYsIGlzRm9jdXNlZF0pO1xuXG4gICAgY29uc3QgaGFuZGxlS2V5RG93biA9IChlOiBSZWFjdC5LZXlib2FyZEV2ZW50KSA9PiB7XG4gICAgICBpZiAoXG4gICAgICAgICFkaXNhYmxlZCAmJlxuICAgICAgICAoZS5rZXkgPT09IGtleU1hcC5EZWxldGUgfHxcbiAgICAgICAgICBlLmtleSA9PT0ga2V5TWFwLkJhY2tzcGFjZSB8fFxuICAgICAgICAgIGUua2V5ID09PSBrZXlNYXAuRW50ZXIgfHxcbiAgICAgICAgICBlLmtleSA9PT0ga2V5TWFwLlNwYWNlKVxuICAgICAgKSB7XG4gICAgICAgIG9uUmVtb3ZlKCk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIGNvbnN0IGhhbmRsZUNoaXBDbGljayA9IChlOiBSZWFjdC5Nb3VzZUV2ZW50KSA9PiB7XG4gICAgICAvLyBEaWQgbm90IGNsaWNrIGJ1dHRvblxuICAgICAgaWYgKCFidXR0b25SZWY/LmNvbnRhaW5zKGUudGFyZ2V0IGFzIE5vZGUpKSB7XG4gICAgICAgIG9uRm9jdXMoKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgY29uc3QgaGFuZGxlQnV0dG9uQ2xpY2sgPSAoKSA9PiB7XG4gICAgICBpZiAoIWRpc2FibGVkKSB7XG4gICAgICAgIG9uUmVtb3ZlKCk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIHJldHVybiAoXG4gICAgICA8Q2hpcFxuICAgICAgICBsYWJlbD17ZGlzcGxheU5hbWV9XG4gICAgICAgIGNsYXNzTmFtZT17Y3goY2hpcENsYXNzTmFtZSwgY2hpcFNpemVTdHlsZXNbc2l6ZV0pfVxuICAgICAgICByb2xlPVwib3B0aW9uXCJcbiAgICAgICAgYXJpYS1zZWxlY3RlZD17aXNGb2N1c2VkfVxuICAgICAgICBkYXRhLXRlc3RpZD1cImxnLWNvbWJvYm94LWNoaXBcIlxuICAgICAgICBvbkNsaWNrPXtoYW5kbGVDaGlwQ2xpY2t9XG4gICAgICAgIG9uS2V5RG93bj17aGFuZGxlS2V5RG93bn1cbiAgICAgICAgb25EaXNtaXNzPXtoYW5kbGVCdXR0b25DbGlja31cbiAgICAgICAgYmFzZUZvbnRTaXplPXtCYXNlRm9udFNpemUuQm9keTF9XG4gICAgICAgIGNoaXBDaGFyYWN0ZXJMaW1pdD17Y2hpcENoYXJhY3RlckxpbWl0fVxuICAgICAgICBjaGlwVHJ1bmNhdGlvbkxvY2F0aW9uPXt1cGRhdGVkQ2hpcFRydW5jYXRpb25Mb2NhdGlvbn1cbiAgICAgICAgcG9wb3ZlclpJbmRleD17cG9wb3ZlclpJbmRleH1cbiAgICAgICAgdmFyaWFudD17VmFyaWFudC5HcmF5fVxuICAgICAgICByZWY9e2NoaXBSZWZ9XG4gICAgICAgIGRpc2FibGVkPXtkaXNhYmxlZH1cbiAgICAgICAgdGFiSW5kZXg9ey0xfVxuICAgICAgLz5cbiAgICApO1xuICB9LFxuKTtcbkNvbWJvYm94Q2hpcC5kaXNwbGF5TmFtZSA9ICdDb21ib2JveENoaXAnO1xuIl0sIm5hbWVzIjpbIlJlYWN0IiwidXNlQ29udGV4dCIsInVzZUVmZmVjdCIsIkJhc2VGb250U2l6ZSIsIkNoaXAiLCJWYXJpYW50IiwiY3giLCJ1c2VGb3J3YXJkZWRSZWYiLCJrZXlNYXAiLCJDb21ib2JveENvbnRleHQiLCJPdmVyZmxvdyIsIlRydW5jYXRpb25Mb2NhdGlvbiIsImNoaXBDbGFzc05hbWUiLCJjaGlwU2l6ZVN0eWxlcyIsIkNvbWJvYm94Q2hpcCIsImZvcndhcmRSZWYiLCJfcmVmIiwiZm9yd2FyZGVkUmVmIiwiX2NoaXBSZWYkY3VycmVudCIsImRpc3BsYXlOYW1lIiwiaXNGb2N1c2VkIiwib25SZW1vdmUiLCJvbkZvY3VzIiwiX3VzZUNvbnRleHQiLCJzaXplIiwiZGlzYWJsZWQiLCJvdmVyZmxvdyIsIl91c2VDb250ZXh0JGNoaXBUcnVuYyIsImNoaXBUcnVuY2F0aW9uTG9jYXRpb24iLCJFbmQiLCJfdXNlQ29udGV4dCRjaGlwQ2hhcmEiLCJjaGlwQ2hhcmFjdGVyTGltaXQiLCJwb3BvdmVyWkluZGV4IiwidXBkYXRlZENoaXBUcnVuY2F0aW9uTG9jYXRpb24iLCJzY3JvbGxYIiwiTm9uZSIsImNoaXBSZWYiLCJidXR0b25SZWYiLCJjdXJyZW50IiwicXVlcnlTZWxlY3RvciIsImZvY3VzIiwiaGFuZGxlS2V5RG93biIsImUiLCJrZXkiLCJEZWxldGUiLCJCYWNrc3BhY2UiLCJFbnRlciIsIlNwYWNlIiwiaGFuZGxlQ2hpcENsaWNrIiwiY29udGFpbnMiLCJ0YXJnZXQiLCJoYW5kbGVCdXR0b25DbGljayIsImNyZWF0ZUVsZW1lbnQiLCJsYWJlbCIsImNsYXNzTmFtZSIsInJvbGUiLCJvbkNsaWNrIiwib25LZXlEb3duIiwib25EaXNtaXNzIiwiYmFzZUZvbnRTaXplIiwiQm9keTEiLCJ2YXJpYW50IiwiR3JheSIsInJlZiIsInRhYkluZGV4Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./packages/combobox/src/ComboboxChip/ComboboxChip.tsx\n')},"./packages/combobox/src/ComboboxGroup/ComboboxGroup.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   U: () => (/* binding */ InternalComboboxGroup),\n/* harmony export */   n: () => (/* binding */ ComboboxGroup)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("webpack/sharing/consume/default/react/react");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./node_modules/prop-types/index.js");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/emotion/dist/esm/index.js");\n/* harmony import */ var _leafygreen_ui_hooks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/hooks/dist/esm/index.js");\n/* harmony import */ var _leafygreen_ui_leafygreen_provider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/leafygreen-provider/dist/esm/index.js");\n/* harmony import */ var _ComboboxGroup_styles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/combobox/src/ComboboxGroup/ComboboxGroup.styles.ts");\n\n\n\n\n\n\n/**\n * @internal\n */\nfunction InternalComboboxGroup(_ref) {\n  var label = _ref.label,\n    className = _ref.className,\n    children = _ref.children;\n  var _useDarkMode = (0,_leafygreen_ui_leafygreen_provider__WEBPACK_IMPORTED_MODULE_3__/* .useDarkMode */ .vs)(),\n    theme = _useDarkMode.theme;\n  var groupId = (0,_leafygreen_ui_hooks__WEBPACK_IMPORTED_MODULE_2__/* .useIdAllocator */ .ue)({\n    prefix: \'combobox-group\'\n  });\n  var childCount = react__WEBPACK_IMPORTED_MODULE_0___default().Children.count(children);\n  return childCount > 0 ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {\n    className: (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.cx)(_ComboboxGroup_styles__WEBPACK_IMPORTED_MODULE_4__/* .comboboxGroupStyle */ .nT[theme], className)\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {\n    className: (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.cx)(_ComboboxGroup_styles__WEBPACK_IMPORTED_MODULE_4__/* .comboboxGroupLabel */ .Nz, _ComboboxGroup_styles__WEBPACK_IMPORTED_MODULE_4__/* .comboboxGroupLabelThemeStyle */ .fy[theme]),\n    id: groupId\n  }, label), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {\n    role: "group",\n    "aria-labelledby": groupId\n  }, children)) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null);\n}\nComboboxGroup.displayName = \'ComboboxGroup\';\nComboboxGroup.propTypes = {\n  className: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().string),\n  children: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().node).isRequired,\n  label: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().string).isRequired\n};\nfunction ComboboxGroup(_) {\n  throw Error(\'`ComboboxGroup` must be a child of a `Combobox` instance\');\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jb21ib2JveC9zcmMvQ29tYm9ib3hHcm91cC9Db21ib2JveEdyb3VwLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBMEI7QUFDUztBQUVTO0FBQ1U7QUFDVztBQU1qQztBQUdoQztBQUNBO0FBQ0E7QUFDTyxTQUFTUSxxQkFBcUJBLENBQUFDLElBQUEsRUFJRDtFQUFBLElBSGxDQyxLQUFLLEdBQUFELElBQUEsQ0FBTEMsS0FBSztJQUNMQyxTQUFTLEdBQUFGLElBQUEsQ0FBVEUsU0FBUztJQUNUQyxRQUFRLEdBQUFILElBQUEsQ0FBUkcsUUFBUTtFQUVSLElBQUFDLFlBQUEsR0FBa0JULHlGQUFXLENBQUMsQ0FBQztJQUF2QlUsS0FBSyxHQUFBRCxZQUFBLENBQUxDLEtBQUs7RUFFYixJQUFNQyxPQUFPLEdBQUdaLDhFQUFjLENBQUM7SUFBRWEsTUFBTSxFQUFFO0VBQWlCLENBQUMsQ0FBQztFQUM1RCxJQUFNQyxVQUFVLEdBQUdqQixxREFBYyxDQUFDbUIsS0FBSyxDQUFDUCxRQUFRLENBQUM7RUFFakQsT0FBT0ssVUFBVSxHQUFHLENBQUMsZ0JBQ25CakIsMERBQUE7SUFBS1csU0FBUyxFQUFFVCwwREFBRSxDQUFDSywrRUFBa0IsQ0FBQ08sS0FBSyxDQUFDLEVBQUVILFNBQVM7RUFBRSxnQkFDdkRYLDBEQUFBO0lBQ0VXLFNBQVMsRUFBRVQsMERBQUUsQ0FBQ0csK0VBQWtCLEVBQUVDLHlGQUE0QixDQUFDUSxLQUFLLENBQUMsQ0FBRTtJQUN2RU8sRUFBRSxFQUFFTjtFQUFRLEdBRVhMLEtBQ0UsQ0FBQyxlQUNOViwwREFBQTtJQUFLc0IsSUFBSSxFQUFDLE9BQU87SUFBQyxtQkFBaUJQO0VBQVEsR0FDeENILFFBQ0UsQ0FDRixDQUFDLGdCQUVOWiwwREFBQSxDQUFBQSx1REFBQSxNQUFJLENBQ0w7QUFDSDtBQUVBd0IsYUFBYSxDQUFDQyxXQUFXLEdBQUcsZUFBZTtBQUUzQ0QsYUFBYSxDQUFDRSxTQUFTLEdBQUc7RUFDeEJmLFNBQVMsRUFBRVYsMERBQWdCO0VBQzNCVyxRQUFRLEVBQUVYLHdEQUFjLENBQUM0QixVQUFVO0VBQ25DbkIsS0FBSyxFQUFFVCwwREFBZ0IsQ0FBQzRCO0FBQzFCLENBQUM7QUFFTSxTQUFTTCxhQUFhQSxDQUFDTSxDQUFxQixFQUFlO0VBQ2hFLE1BQU1DLEtBQUssQ0FBQywwREFBMEQsQ0FBQztBQUN6RSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlYWZ5Z3JlZW4tdWkvLi9wYWNrYWdlcy9jb21ib2JveC9zcmMvQ29tYm9ib3hHcm91cC9Db21ib2JveEdyb3VwLnRzeD8wYjk3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5pbXBvcnQgeyBjeCB9IGZyb20gJ0BsZWFmeWdyZWVuLXVpL2Vtb3Rpb24nO1xuaW1wb3J0IHsgdXNlSWRBbGxvY2F0b3IgfSBmcm9tICdAbGVhZnlncmVlbi11aS9ob29rcyc7XG5pbXBvcnQgeyB1c2VEYXJrTW9kZSB9IGZyb20gJ0BsZWFmeWdyZWVuLXVpL2xlYWZ5Z3JlZW4tcHJvdmlkZXInO1xuXG5pbXBvcnQge1xuICBjb21ib2JveEdyb3VwTGFiZWwsXG4gIGNvbWJvYm94R3JvdXBMYWJlbFRoZW1lU3R5bGUsXG4gIGNvbWJvYm94R3JvdXBTdHlsZSxcbn0gZnJvbSAnLi9Db21ib2JveEdyb3VwLnN0eWxlcyc7XG5pbXBvcnQgeyBDb21ib2JveEdyb3VwUHJvcHMgfSBmcm9tICcuL0NvbWJvYm94R3JvdXAudHlwZXMnO1xuXG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgZnVuY3Rpb24gSW50ZXJuYWxDb21ib2JveEdyb3VwKHtcbiAgbGFiZWwsXG4gIGNsYXNzTmFtZSxcbiAgY2hpbGRyZW4sXG59OiBDb21ib2JveEdyb3VwUHJvcHMpOiBKU1guRWxlbWVudCB7XG4gIGNvbnN0IHsgdGhlbWUgfSA9IHVzZURhcmtNb2RlKCk7XG5cbiAgY29uc3QgZ3JvdXBJZCA9IHVzZUlkQWxsb2NhdG9yKHsgcHJlZml4OiAnY29tYm9ib3gtZ3JvdXAnIH0pO1xuICBjb25zdCBjaGlsZENvdW50ID0gUmVhY3QuQ2hpbGRyZW4uY291bnQoY2hpbGRyZW4pO1xuXG4gIHJldHVybiBjaGlsZENvdW50ID4gMCA/IChcbiAgICA8ZGl2IGNsYXNzTmFtZT17Y3goY29tYm9ib3hHcm91cFN0eWxlW3RoZW1lXSwgY2xhc3NOYW1lKX0+XG4gICAgICA8ZGl2XG4gICAgICAgIGNsYXNzTmFtZT17Y3goY29tYm9ib3hHcm91cExhYmVsLCBjb21ib2JveEdyb3VwTGFiZWxUaGVtZVN0eWxlW3RoZW1lXSl9XG4gICAgICAgIGlkPXtncm91cElkfVxuICAgICAgPlxuICAgICAgICB7bGFiZWx9XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgcm9sZT1cImdyb3VwXCIgYXJpYS1sYWJlbGxlZGJ5PXtncm91cElkfT5cbiAgICAgICAge2NoaWxkcmVufVxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICkgOiAoXG4gICAgPD48Lz5cbiAgKTtcbn1cblxuQ29tYm9ib3hHcm91cC5kaXNwbGF5TmFtZSA9ICdDb21ib2JveEdyb3VwJztcblxuQ29tYm9ib3hHcm91cC5wcm9wVHlwZXMgPSB7XG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLmlzUmVxdWlyZWQsXG4gIGxhYmVsOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gQ29tYm9ib3hHcm91cChfOiBDb21ib2JveEdyb3VwUHJvcHMpOiBKU1guRWxlbWVudCB7XG4gIHRocm93IEVycm9yKCdgQ29tYm9ib3hHcm91cGAgbXVzdCBiZSBhIGNoaWxkIG9mIGEgYENvbWJvYm94YCBpbnN0YW5jZScpO1xufVxuIl0sIm5hbWVzIjpbIlJlYWN0IiwiUHJvcFR5cGVzIiwiY3giLCJ1c2VJZEFsbG9jYXRvciIsInVzZURhcmtNb2RlIiwiY29tYm9ib3hHcm91cExhYmVsIiwiY29tYm9ib3hHcm91cExhYmVsVGhlbWVTdHlsZSIsImNvbWJvYm94R3JvdXBTdHlsZSIsIkludGVybmFsQ29tYm9ib3hHcm91cCIsIl9yZWYiLCJsYWJlbCIsImNsYXNzTmFtZSIsImNoaWxkcmVuIiwiX3VzZURhcmtNb2RlIiwidGhlbWUiLCJncm91cElkIiwicHJlZml4IiwiY2hpbGRDb3VudCIsIkNoaWxkcmVuIiwiY291bnQiLCJjcmVhdGVFbGVtZW50IiwiaWQiLCJyb2xlIiwiRnJhZ21lbnQiLCJDb21ib2JveEdyb3VwIiwiZGlzcGxheU5hbWUiLCJwcm9wVHlwZXMiLCJzdHJpbmciLCJub2RlIiwiaXNSZXF1aXJlZCIsIl8iLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./packages/combobox/src/ComboboxGroup/ComboboxGroup.tsx\n')},"./packages/combobox/src/ComboboxGroup/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{U:()=>_ComboboxGroup__WEBPACK_IMPORTED_MODULE_0__.U,n:()=>_ComboboxGroup__WEBPACK_IMPORTED_MODULE_0__.n});var _ComboboxGroup__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./packages/combobox/src/ComboboxGroup/ComboboxGroup.tsx")},"./packages/combobox/src/ComboboxMenu/ComboboxMenu.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  x: () => (/* binding */ ComboboxMenu)\n});\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js\nvar esm_extends = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/extends.js");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\nvar taggedTemplateLiteral = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/typeof.js\nvar esm_typeof = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/typeof.js");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\nvar objectWithoutProperties = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js");\n// EXTERNAL MODULE: consume shared module (default) react@^17.0.2 (singleton) (fallback: ./node_modules/react/index.js)\nvar index_js_ = __webpack_require__("webpack/sharing/consume/default/react/react");\nvar index_js_default = /*#__PURE__*/__webpack_require__.n(index_js_);\n// EXTERNAL MODULE: ./node_modules/lodash/isUndefined.js\nvar isUndefined = __webpack_require__("./node_modules/lodash/isUndefined.js");\nvar isUndefined_default = /*#__PURE__*/__webpack_require__.n(isUndefined);\n// EXTERNAL MODULE: ./packages/emotion/dist/esm/index.js\nvar esm = __webpack_require__("./packages/emotion/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/hooks/dist/esm/index.js\nvar dist_esm = __webpack_require__("./packages/hooks/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/icon/dist/esm/index.js\nvar icon_dist_esm = __webpack_require__("./packages/icon/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/leafygreen-provider/dist/esm/index.js\nvar leafygreen_provider_dist_esm = __webpack_require__("./packages/leafygreen-provider/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/palette/dist/esm/index.js\nvar palette_dist_esm = __webpack_require__("./packages/palette/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/popover/dist/esm/index.js\nvar popover_dist_esm = __webpack_require__("./packages/popover/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/typography/dist/esm/index.js\nvar typography_dist_esm = __webpack_require__("./packages/typography/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/combobox/src/ComboboxContext/index.ts\nvar ComboboxContext = __webpack_require__("./packages/combobox/src/ComboboxContext/index.ts");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js + 2 modules\nvar defineProperty = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js");\n// EXTERNAL MODULE: ./node_modules/polished/dist/polished.esm.js\nvar polished_esm = __webpack_require__("./node_modules/polished/dist/polished.esm.js");\n// EXTERNAL MODULE: ./packages/lib/dist/esm/index.js\nvar lib_dist_esm = __webpack_require__("./packages/lib/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/tokens/dist/esm/index.js\nvar tokens_dist_esm = __webpack_require__("./packages/tokens/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/combobox/src/ComboboxChip/ComboboxChip.styles.ts\nvar ComboboxChip_styles = __webpack_require__("./packages/combobox/src/ComboboxChip/ComboboxChip.styles.ts");\n// EXTERNAL MODULE: ./packages/combobox/src/types/index.ts + 1 modules\nvar types = __webpack_require__("./packages/combobox/src/types/index.ts");\n;// CONCATENATED MODULE: ./packages/combobox/src/ComboboxMenu/Menu.styles.ts\n\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14;\n\n\n\n\n\n\n\nvar menuItemPadding = (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, types/* ComboboxSize */.C.XSmall, {\n  x: 12,\n  y: 8\n}), types/* ComboboxSize */.C.Small, {\n  x: 12,\n  y: 8\n}), types/* ComboboxSize */.C.Default, {\n  x: 12,\n  y: 8\n}), types/* ComboboxSize */.C.Large, {\n  x: 12,\n  y: 8\n});\n\n/** Util that returns the height of a menu item (in px) */\nvar getMenuItemHeight = function getMenuItemHeight(size) {\n  return lineHeight[size] + 2 * menuItemPadding[size].y;\n};\n\n/**\n * Menu styles\n */\n\nvar popoverStyle = function popoverStyle() {\n  var width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 384;\n  return (0,esm.css)(_templateObject || (_templateObject = (0,taggedTemplateLiteral/* default */.Z)(["\\n  width: ", "px;\\n  overflow: hidden;\\n  border-radius: 12px;\\n  border: 1px solid;\\n"])), width);\n};\nvar popoverThemeStyle = (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, lib_dist_esm/* Theme */.Q2.Light, (0,esm.css)(_templateObject2 || (_templateObject2 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    box-shadow: 0px 4px 7px ", ";\\n    border-color: ", ";\\n  "])), (0,polished_esm/* transparentize */.DZ)(0.85, palette_dist_esm/* palette */.D.black), palette_dist_esm/* palette */.D.gray.light2)), lib_dist_esm/* Theme */.Q2.Dark, (0,esm.css)(_templateObject3 || (_templateObject3 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    box-shadow: 0px 4px 7px ", ";\\n    border-color: ", ";\\n  "])), (0,polished_esm/* transparentize */.DZ)(0.85, palette_dist_esm/* palette */.D.black), palette_dist_esm/* palette */.D.gray.dark2));\nvar menuBaseStyle = (0,esm.css)(_templateObject4 || (_templateObject4 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  position: relative;\\n  width: 100%;\\n  margin: 0;\\n  padding: ", "px 0;\\n  font-family: ", ";\\n  border-radius: inherit;\\n  overflow-y: auto;\\n  scroll-behavior: smooth;\\n"])), tokens_dist_esm/* spacing */.W0[2], tokens_dist_esm/* fontFamilies */.Vl["default"]);\nvar menuThemeStyle = (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, lib_dist_esm/* Theme */.Q2.Light, (0,esm.css)(_templateObject5 || (_templateObject5 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    color: ", ";\\n    background-color: ", ";\\n  "])), palette_dist_esm/* palette */.D.black, palette_dist_esm/* palette */.D.white)), lib_dist_esm/* Theme */.Q2.Dark, (0,esm.css)(_templateObject6 || (_templateObject6 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    color: ", ";\\n    background-color: ", ";\\n  "])), palette_dist_esm/* palette */.D.gray.light1, palette_dist_esm/* palette */.D.gray.dark3));\nvar getMenuThemeStyles = function getMenuThemeStyles(theme) {\n  return (0,esm.css)(_templateObject7 || (_templateObject7 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  background-color: ", ";\\n"])), tokens_dist_esm/* color */.$_[theme].background.primary["default"]);\n};\nvar menuList = (0,esm.css)(_templateObject8 || (_templateObject8 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  position: relative;\\n  margin: 0;\\n  padding: 0;\\n"])));\nvar menuMessageBaseStyle = (0,esm.css)(_templateObject9 || (_templateObject9 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  font-family: inherit;\\n  display: inline-flex;\\n  align-items: center;\\n  gap: 8px;\\n"])));\nvar menuMessageThemeStyle = (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, lib_dist_esm/* Theme */.Q2.Light, (0,esm.css)(_templateObject10 || (_templateObject10 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    color: ", ";\\n  "])), palette_dist_esm/* palette */.D.gray.dark3)), lib_dist_esm/* Theme */.Q2.Dark, (0,esm.css)(_templateObject11 || (_templateObject11 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    color: ", ";\\n  "])), palette_dist_esm/* palette */.D.gray.light3));\nvar menuMessageSizeStyle = function menuMessageSizeStyle(size) {\n  return (0,esm.css)(_templateObject12 || (_templateObject12 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  font-size: ", "px;\\n  line-height: ", "px;\\n  padding: ", "px ", "px;\\n"])), ComboboxChip_styles/* fontSize */.JB[size], ComboboxChip_styles/* lineHeight */.Nv[size], menuItemPadding[size].y, menuItemPadding[size].x);\n};\nvar loadingIconAnimation = (0,esm.keyframes)(_templateObject13 || (_templateObject13 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  0% {\\n    transform: rotate(0deg);\\n  }\\n  100% {\\n    transform: rotate(360deg);\\n  }\\n"])));\nvar loadingIconStyle = (0,esm.css)(_templateObject14 || (_templateObject14 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  animation: ", " 1.5s linear infinite;\\n"])), loadingIconAnimation);\n;// CONCATENATED MODULE: ./packages/combobox/src/ComboboxMenu/ComboboxMenu.tsx\n\n\n\n\nvar ComboboxMenu_templateObject;\nvar _excluded = ["children", "id", "refEl", "labelId", "menuWidth", "searchLoadingMessage", "searchErrorMessage", "searchEmptyMessage"];\n\n\n\n\n\n\n\n\n\n\n\nvar ComboboxMenu = /*#__PURE__*/index_js_default().forwardRef(function (_ref, forwardedRef) {\n  var children = _ref.children,\n    id = _ref.id,\n    refEl = _ref.refEl,\n    labelId = _ref.labelId,\n    menuWidth = _ref.menuWidth,\n    searchLoadingMessage = _ref.searchLoadingMessage,\n    searchErrorMessage = _ref.searchErrorMessage,\n    searchEmptyMessage = _ref.searchEmptyMessage,\n    popoverProps = (0,objectWithoutProperties/* default */.Z)(_ref, _excluded);\n  var _useDarkMode = (0,leafygreen_provider_dist_esm/* useDarkMode */.vs)(),\n    darkMode = _useDarkMode.darkMode,\n    theme = _useDarkMode.theme;\n  var _useContext = (0,index_js_.useContext)(ComboboxContext/* ComboboxContext */.c),\n    disabled = _useContext.disabled,\n    size = _useContext.size,\n    isOpen = _useContext.isOpen,\n    searchState = _useContext.searchState;\n  var ref = (0,dist_esm/* useForwardedRef */.ts)(forwardedRef, null);\n\n  /** The max height of the menu element */\n  var availableSpace = (0,dist_esm/* useAvailableSpace */.Uu)(refEl);\n  var maxHeightValue = !isUndefined_default()(availableSpace) ? "".concat(Math.min(availableSpace, 256), "px") : \'unset\';\n\n  /**\n   * The rendered menu JSX contents\n   * Includes error, empty, search and default states\n   */\n  var renderedMenuContents = (0,index_js_.useMemo)(function () {\n    var messageStyles = (0,esm.cx)(menuMessageBaseStyle, menuMessageThemeStyle[theme], menuMessageSizeStyle(size));\n    var errorMessageStyles = (0,esm.cx)(menuMessageBaseStyle, menuMessageSizeStyle(size));\n    switch (searchState) {\n      case \'loading\':\n        {\n          return /*#__PURE__*/index_js_default().createElement("span", {\n            className: messageStyles\n          }, /*#__PURE__*/index_js_default().createElement(icon_dist_esm/* default */.ZP, {\n            glyph: "Refresh",\n            color: darkMode ? palette_dist_esm/* palette */.D.blue.light1 : palette_dist_esm/* palette */.D.blue.base,\n            className: loadingIconStyle\n          }), searchLoadingMessage);\n        }\n      case \'error\':\n        {\n          return /*#__PURE__*/index_js_default().createElement(typography_dist_esm/* Error */.jj, {\n            className: errorMessageStyles\n          }, /*#__PURE__*/index_js_default().createElement(icon_dist_esm/* default */.ZP, {\n            glyph: "Warning",\n            color: darkMode ? palette_dist_esm/* palette */.D.red.light1 : palette_dist_esm/* palette */.D.red.base\n          }), /*#__PURE__*/index_js_default().createElement("span", null, searchErrorMessage));\n        }\n      case \'unset\':\n      default:\n        {\n          if (children && (0,esm_typeof/* default */.Z)(children) === \'object\' && \'length\' in children && children.length > 0) {\n            return /*#__PURE__*/index_js_default().createElement("ul", {\n              className: menuList\n            }, children);\n          }\n          return /*#__PURE__*/index_js_default().createElement("span", {\n            className: messageStyles\n          }, searchEmptyMessage);\n        }\n    }\n  }, [theme, size, searchState, darkMode, searchLoadingMessage, searchErrorMessage, children, searchEmptyMessage]);\n  return /*#__PURE__*/index_js_default().createElement(popover_dist_esm/* default */.ZP, (0,esm_extends/* default */.Z)({\n    active: isOpen && !disabled,\n    spacing: 4,\n    align: "bottom",\n    justify: "middle",\n    refEl: refEl,\n    adjustOnMutation: true,\n    className: (0,esm.cx)(popoverStyle(menuWidth), popoverThemeStyle[theme])\n  }, popoverProps), /*#__PURE__*/index_js_default().createElement("div", {\n    ref: ref,\n    id: id,\n    role: "listbox",\n    "aria-labelledby": labelId,\n    "aria-expanded": isOpen,\n    className: (0,esm.cx)(menuBaseStyle, getMenuThemeStyles(theme), (0,esm.css)(ComboboxMenu_templateObject || (ComboboxMenu_templateObject = (0,taggedTemplateLiteral/* default */.Z)(["\\n              max-height: ", ";\\n            "])), maxHeightValue)),\n    onMouseDownCapture: function onMouseDownCapture(e) {\n      return e.preventDefault();\n    }\n  }, renderedMenuContents));\n});\nComboboxMenu.displayName = \'ComboboxMenu\';//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/combobox/src/ComboboxMenu/ComboboxMenu.tsx\n')},"./packages/combobox/src/ComboboxOption/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{O:()=>_ComboboxOption__WEBPACK_IMPORTED_MODULE_0__.O,y:()=>_ComboboxOption__WEBPACK_IMPORTED_MODULE_0__.y});var _ComboboxOption__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./packages/combobox/src/ComboboxOption/ComboboxOption.tsx")},"./packages/icon-button/dist/esm/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (/* binding */ F)\n/* harmony export */ });\n/* unused harmony export Size */\n/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/typeof.js");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("webpack/sharing/consume/default/react/react");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _leafygreen_ui_a11y__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/a11y/dist/esm/index.js");\n/* harmony import */ var _leafygreen_ui_box__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/box/dist/esm/index.js");\n/* harmony import */ var _leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/emotion/dist/esm/index.js");\n/* harmony import */ var _leafygreen_ui_icon__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/icon/dist/esm/index.js");\n/* harmony import */ var _leafygreen_ui_leafygreen_provider__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/leafygreen-provider/dist/esm/index.js");\n/* harmony import */ var _leafygreen_ui_lib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./packages/lib/dist/esm/index.js");\n/* harmony import */ var polished__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("./node_modules/polished/dist/polished.esm.js");\n/* harmony import */ var _leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./packages/palette/dist/esm/index.js");\n/* harmony import */ var _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("./packages/tokens/dist/esm/index.js");\n\n\n\n\n\n\n\n\n\n\n\n\nfunction d(n, r, e) {\n  return (r = function (n) {\n    var r = function (n, r) {\n      if ("object" != (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(n) || !n) return n;\n      var e = n[Symbol.toPrimitive];\n      if (void 0 !== e) {\n        var o = e.call(n, r);\n        if ("object" != (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(o)) return o;\n        throw new TypeError("@@toPrimitive must return a primitive value.");\n      }\n      return String(n);\n    }(n, "string");\n    return "symbol" == (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(r) ? r : r + "";\n  }(r)) in n ? Object.defineProperty(n, r, {\n    value: e,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : n[r] = e, n;\n}\nfunction p() {\n  return p = Object.assign ? Object.assign.bind() : function (n) {\n    for (var r = 1; r < arguments.length; r++) {\n      var e = arguments[r];\n      for (var o in e) ({}).hasOwnProperty.call(e, o) && (n[o] = e[o]);\n    }\n    return n;\n  }, p.apply(null, arguments);\n}\nfunction y(n, r) {\n  var e = Object.keys(n);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(n);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(n, r).enumerable;\n    })), e.push.apply(e, o);\n  }\n  return e;\n}\nfunction h(n) {\n  for (var r = 1; r < arguments.length; r++) {\n    var e = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? y(Object(e), !0).forEach(function (r) {\n      d(n, r, e[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(n, Object.getOwnPropertyDescriptors(e)) : y(Object(e)).forEach(function (r) {\n      Object.defineProperty(n, r, Object.getOwnPropertyDescriptor(e, r));\n    });\n  }\n  return n;\n}\nfunction m(n, r) {\n  return r || (r = n.slice(0)), Object.freeze(Object.defineProperties(n, {\n    raw: {\n      value: Object.freeze(r)\n    }\n  }));\n}\nvar v,\n  k,\n  O,\n  w,\n  j,\n  x,\n  P,\n  D,\n  S,\n  E,\n  L,\n  N,\n  z,\n  I,\n  C = {\n    Default: "default",\n    Large: "large",\n    XLarge: "xlarge"\n  },\n  M = (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_3__.css)(v || (v = m(["\\n  border: none;\\n  -webkit-appearance: unset;\\n  padding: unset;\\n"]))),\n  B = (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_3__.css)(k || (k = m(["\\n  display: inline-block;\\n  border-radius: 100px;\\n  position: relative;\\n  cursor: pointer;\\n  flex-shrink: 0;\\n  transition: ", "ms ease-in-out;\\n  transition-property: color, box-shadow;\\n\\n  // Set background to fully-transparent white for cross-browser compatability with Safari\\n  //\\n  // Safari treats \\"transparent\\" values in CSS as transparent black instead of white\\n  // which can make things render differently across browsers if not defined explicitly.\\n  background-color: rgba(255, 255, 255, 0);\\n\\n  &:before {\\n    content: \'\';\\n    transition: ", "ms all ease-in-out;\\n    position: absolute;\\n    top: 0;\\n    bottom: 0;\\n    left: 0;\\n    right: 0;\\n    border-radius: 100%;\\n    transform: scale(0.8);\\n  }\\n\\n  &:active:before,\\n  &:hover:before,\\n  &:focus:before {\\n    transform: scale(1);\\n  }\\n\\n  &:focus {\\n    outline: none;\\n  }\\n"])), _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_8__/* .transitionDuration */ .nV["default"], _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_8__/* .transitionDuration */ .nV["default"]),\n  T = d(d(d({}, C.Default, (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_3__.css)(O || (O = m(["\\n    height: 28px;\\n    width: 28px;\\n  "])))), C.Large, (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_3__.css)(w || (w = m(["\\n    height: 36px;\\n    width: 36px;\\n  "])))), C.XLarge, (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_3__.css)(j || (j = m(["\\n    height: 42px;\\n    width: 42px;\\n  "])))),\n  X = d(d({}, _leafygreen_ui_lib__WEBPACK_IMPORTED_MODULE_6__/* .Theme */ .Q2.Light, (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_3__.css)(x || (x = m(["\\n    color: ", ";\\n\\n    &:active,\\n    &:hover {\\n      color: ", ";\\n\\n      &:before {\\n        background-color: ", ";\\n      }\\n    }\\n  "])), _leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_7__/* .palette */ .D.gray.dark1, _leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_7__/* .palette */ .D.black, (0,polished__WEBPACK_IMPORTED_MODULE_10__/* .transparentize */ .DZ)(.9, _leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_7__/* .palette */ .D.gray.dark2))), _leafygreen_ui_lib__WEBPACK_IMPORTED_MODULE_6__/* .Theme */ .Q2.Dark, (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_3__.css)(P || (P = m(["\\n    color: ", ";\\n\\n    &:active,\\n    &:hover {\\n      color: ", ";\\n\\n      &:before {\\n        background-color: ", ";\\n      }\\n    }\\n  "])), _leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_7__/* .palette */ .D.gray.light1, _leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_7__/* .palette */ .D.gray.light3, (0,polished__WEBPACK_IMPORTED_MODULE_10__/* .transparentize */ .DZ)(.9, _leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_7__/* .palette */ .D.gray.light2))),\n  R = d(d({}, _leafygreen_ui_lib__WEBPACK_IMPORTED_MODULE_6__/* .Theme */ .Q2.Light, (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_3__.css)(D || (D = m(["\\n    &:focus-visible {\\n      color: ", ";\\n      box-shadow: ", ";\\n\\n      &:before {\\n        background-color: ", ";\\n      }\\n    }\\n  "])), _leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_7__/* .palette */ .D.black, _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_8__/* .focusRing */ .kN[_leafygreen_ui_lib__WEBPACK_IMPORTED_MODULE_6__/* .Theme */ .Q2.Light]["default"], (0,polished__WEBPACK_IMPORTED_MODULE_10__/* .transparentize */ .DZ)(.9, _leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_7__/* .palette */ .D.gray.dark2))), _leafygreen_ui_lib__WEBPACK_IMPORTED_MODULE_6__/* .Theme */ .Q2.Dark, (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_3__.css)(S || (S = m(["\\n    &:focus-visible {\\n      color: ", ";\\n      box-shadow: ", ";\\n\\n      &:before {\\n        background-color: ", ";\\n      }\\n    }\\n  "])), _leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_7__/* .palette */ .D.gray.light3, _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_8__/* .focusRing */ .kN[_leafygreen_ui_lib__WEBPACK_IMPORTED_MODULE_6__/* .Theme */ .Q2.Dark]["default"], (0,polished__WEBPACK_IMPORTED_MODULE_10__/* .transparentize */ .DZ)(.9, _leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_7__/* .palette */ .D.gray.light2))),\n  V = d(d({}, _leafygreen_ui_lib__WEBPACK_IMPORTED_MODULE_6__/* .Theme */ .Q2.Light, (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_3__.css)(E || (E = m(["\\n    cursor: not-allowed;\\n    color: ", ";\\n    background-color: rgba(255, 255, 255, 0);\\n\\n    &:active,\\n    &:hover {\\n      color: ", ";\\n\\n      &:before {\\n        background-color: rgba(255, 255, 255, 0);\\n      }\\n    }\\n\\n    &:focus {\\n      color: ", ";\\n\\n      &:before {\\n        background-color: rgba(255, 255, 255, 0);\\n      }\\n    }\\n  "])), _leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_7__/* .palette */ .D.gray.light1, _leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_7__/* .palette */ .D.gray.light1, _leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_7__/* .palette */ .D.gray.light1)), _leafygreen_ui_lib__WEBPACK_IMPORTED_MODULE_6__/* .Theme */ .Q2.Dark, (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_3__.css)(L || (L = m(["\\n    cursor: not-allowed;\\n    color: ", ";\\n    background-color: rgba(255, 255, 255, 0);\\n\\n    &:active,\\n    &:hover {\\n      color: ", ";\\n\\n      &:before {\\n        background-color: rgba(255, 255, 255, 0);\\n      }\\n    }\\n\\n    &:focus {\\n      color: ", ";\\n\\n      &:before {\\n        background-color: rgba(255, 255, 255, 0);\\n      }\\n    }\\n  "])), _leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_7__/* .palette */ .D.gray.dark1, _leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_7__/* .palette */ .D.gray.dark1, _leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_7__/* .palette */ .D.gray.dark1)),\n  _ = d(d({}, _leafygreen_ui_lib__WEBPACK_IMPORTED_MODULE_6__/* .Theme */ .Q2.Light, (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_3__.css)(N || (N = m(["\\n    color: ", ";\\n\\n    &:before {\\n      background-color: ", ";\\n      transform: scale(1);\\n    }\\n  "])), _leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_7__/* .palette */ .D.black, (0,polished__WEBPACK_IMPORTED_MODULE_10__/* .transparentize */ .DZ)(.9, _leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_7__/* .palette */ .D.gray.dark2))), _leafygreen_ui_lib__WEBPACK_IMPORTED_MODULE_6__/* .Theme */ .Q2.Dark, (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_3__.css)(z || (z = m(["\\n    color: ", ";\\n\\n    &:before {\\n      background-color: ", ";\\n      transform: scale(1);\\n    }\\n  "])), _leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_7__/* .palette */ .D.gray.light3, (0,polished__WEBPACK_IMPORTED_MODULE_10__/* .transparentize */ .DZ)(.9, _leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_7__/* .palette */ .D.gray.light2))),\n  q = (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_3__.css)(I || (I = m(["\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n"]))),\n  A = ["size", "darkMode", "disabled", "active", "tabIndex", "className", "children"],\n  F = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().forwardRef(function (r, t) {\n    var c = r.size,\n      s = void 0 === c ? C.Default : c,\n      u = r.darkMode,\n      b = r.disabled,\n      g = void 0 !== b && b,\n      y = r.active,\n      m = void 0 !== y && y,\n      v = r.tabIndex,\n      k = void 0 === v ? 0 : v,\n      O = r.className,\n      w = r.children,\n      j = function (n, r) {\n        if (null == n) return {};\n        var e,\n          o,\n          t = function (n, r) {\n            if (null == n) return {};\n            var e = {};\n            for (var o in n) if ({}.hasOwnProperty.call(n, o)) {\n              if (r.indexOf(o) >= 0) continue;\n              e[o] = n[o];\n            }\n            return e;\n          }(n, r);\n        if (Object.getOwnPropertySymbols) {\n          var a = Object.getOwnPropertySymbols(n);\n          for (o = 0; o < a.length; o++) e = a[o], r.indexOf(e) >= 0 || {}.propertyIsEnumerable.call(n, e) && (t[e] = n[e]);\n        }\n        return t;\n      }(r, A),\n      x = (0,_leafygreen_ui_leafygreen_provider__WEBPACK_IMPORTED_MODULE_5__/* .useDarkMode */ .vs)(u).theme,\n      P = "string" == typeof j.href;\n    (0,_leafygreen_ui_a11y__WEBPACK_IMPORTED_MODULE_1__/* .validateAriaLabelProps */ .Lk)(j, "IconButton");\n    var D = react__WEBPACK_IMPORTED_MODULE_0___default().Children.map(w, function (r) {\n        if (!r) return null;\n        if ((0,_leafygreen_ui_lib__WEBPACK_IMPORTED_MODULE_6__/* .isComponentType */ .Kf)(r, "Icon") || (0,_leafygreen_ui_icon__WEBPACK_IMPORTED_MODULE_4__/* .isComponentGlyph */ .fx)(r)) {\n          var e = r.props,\n            o = e.size,\n            t = e.title,\n            a = {\n              size: o || s\n            };\n          return "string" == typeof t && 0 !== t.length || (a.title = !1), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(r, a);\n        }\n        return r;\n      }),\n      S = h(h({}, j), {}, d(d(d(d({\n        ref: t,\n        tabIndex: k\n      }, "aria-disabled", g), "href", g ? void 0 : j.href), "onClick", g ? void 0 : j.onClick), "className", (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_3__.cx)(M, B, T[s], X[x], R[x], d(d({}, _[x], m && !g), V[x], g), O)));\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_leafygreen_ui_box__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, p({\n      as: P ? "a" : "button"\n    }, S), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {\n      className: q\n    }, D));\n  });\nF.displayName = "IconButton", F.propTypes =  false ? 0 : {};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/icon-button/dist/esm/index.js\n')}}]);