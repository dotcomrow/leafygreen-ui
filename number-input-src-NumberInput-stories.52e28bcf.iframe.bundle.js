"use strict";(self.webpackChunkleafygreen_ui=self.webpackChunkleafygreen_ui||[]).push([[7551],{"./packages/number-input/src/NumberInput.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{LiveExample:()=>LiveExample,Unitless:()=>Unitless,WithUnitSelect:()=>WithUnitSelect,WithUnits:()=>WithUnits,__namedExportsOrder:()=>__namedExportsOrder,default:()=>NumberInput_stories});var _templateObject,_templateObject2,esm_extends=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/extends.js"),taggedTemplateLiteral=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"),slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),objectWithoutProperties=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),toConsumableArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),index_js_=__webpack_require__("webpack/sharing/consume/default/react/react"),index_js_default=__webpack_require__.n(index_js_),esm=__webpack_require__("./tools/storybook-utils/dist/esm/index.js"),dist_esm=__webpack_require__("./packages/emotion/dist/esm/index.js"),NumberInput_types=__webpack_require__("./packages/number-input/src/NumberInput/NumberInput.types.ts"),NumberInput=__webpack_require__("./packages/number-input/src/NumberInput/index.tsx"),_excluded=["unit","unitOptions"],unitOptions=[{displayName:"Hours",value:"hours"},{displayName:"Days",value:"days"},{displayName:"Months",value:"months"},{displayName:"Astronomical units",value:"au"}];const NumberInput_stories={title:"Components/NumberInput",component:NumberInput.Y,parameters:{default:"LiveExample",controls:{exclude:[].concat((0,toConsumableArray.Z)(esm.xZ),["as","children","value","onSelectChange"])},generate:{storyNames:["Unitless","WithUnits","WithUnitSelect"],combineArgs:{darkMode:[!1,!0],size:Object.values(NumberInput_types.$u),label:["Label",void 0],description:["Description",void 0],state:Object.values(NumberInput_types.ZM).reverse(),disabled:[!1,!0]},excludeCombinations:[{label:void 0,description:"Description"}]}},args:{label:"Label",disabled:!1},argTypes:{darkMode:esm.bN.darkMode,size:{control:"select",options:Object.values(NumberInput_types.$u)},state:{control:"select",options:Object.values(NumberInput_types.ZM)},disabled:{control:"boolean"},label:{control:"text"},description:{control:"text"},unit:{control:"text"},errorMessage:{control:"text"},placeholder:{control:"text"},withOptions:{control:"boolean"}}};var LiveExample=function Template(args){var _unitOptions$,_args$unit=args.unit,unitProp=void 0===_args$unit?"one":_args$unit,_args$unitOptions=args.unitOptions,unitOptions=void 0===_args$unitOptions?[]:_args$unitOptions,rest=(0,objectWithoutProperties.Z)(args,_excluded),_useState=(0,index_js_.useState)(null===(_unitOptions$=unitOptions[0])||void 0===_unitOptions$?void 0:_unitOptions$.displayName),_useState2=(0,slicedToArray.Z)(_useState,2),unit=_useState2[0],setUnit=_useState2[1],_useState3=(0,index_js_.useState)(""),_useState4=(0,slicedToArray.Z)(_useState3,2),value=_useState4[0],setValue=_useState4[1],inputRef=(0,index_js_.useRef)(null);return index_js_default().createElement(NumberInput.Y,(0,esm_extends.Z)({},rest,{ref:inputRef,value,unit:unitOptions.length?unit:unitProp,unitOptions,onSelectChange:function handleSelectChange(unit){setUnit(unit.displayName),console.log("story: select value",null==unit?void 0:unit.value)},onChange:function handleChange(e){var _inputRef$current;console.log("story: event: ",e.target.value),console.log("story: ref",null===(_inputRef$current=inputRef.current)||void 0===_inputRef$current?void 0:_inputRef$current.value),setValue(e.target.value)},onBlur:function handleBlur(e){var _inputRef$current2;console.log("story: event: ",e.target.blur),console.log("story: ref",null===(_inputRef$current2=inputRef.current)||void 0===_inputRef$current2?void 0:_inputRef$current2.blur)},inputClassName:(0,dist_esm.css)(_templateObject||(_templateObject=(0,taggedTemplateLiteral.Z)(["\n        width: 100px;\n      "]))),selectClassName:(0,dist_esm.css)(_templateObject2||(_templateObject2=(0,taggedTemplateLiteral.Z)(["\n        max-width: 100px;\n      "])))}))}.bind({});LiveExample.args={unitOptions,unit:unitOptions[0].displayName},LiveExample.parameters={chromatic:{disableSnapshot:!0}};var Unitless=function Unitless(){return index_js_default().createElement(index_js_default().Fragment,null)};Unitless.args={unit:void 0};var WithUnits=function WithUnits(){return index_js_default().createElement(index_js_default().Fragment,null)};WithUnits.args={unit:unitOptions[0].displayName,unitOptions:void 0};var WithUnitSelect=function WithUnitSelect(){return index_js_default().createElement(index_js_default().Fragment,null)};WithUnitSelect.args={unit:unitOptions[0].displayName,unitOptions},LiveExample.parameters={...LiveExample.parameters,docs:{...LiveExample.parameters?.docs,source:{originalSource:"(args: StoryNumberInputProps) => {\n  const {\n    unit: unitProp = 'one',\n    unitOptions = [],\n    ...rest\n  } = args;\n  const [unit, setUnit] = useState<string>(unitOptions[0]?.displayName);\n  const [value, setValue] = useState<string>('');\n  const inputRef = useRef<HTMLInputElement | null>(null);\n  const handleSelectChange = (unit: UnitOption) => {\n    setUnit(unit.displayName);\n    // eslint-disable-next-line no-console\n    console.log('story: select value', unit?.value);\n  };\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    // eslint-disable-next-line no-console\n    console.log('story: event: ', e.target.value);\n    // eslint-disable-next-line no-console\n    console.log('story: ref', inputRef.current?.value);\n    setValue(e.target.value);\n  };\n  const handleBlur = (e: React.FocusEvent<HTMLElement>) => {\n    // eslint-disable-next-line no-console\n    console.log('story: event: ', e.target.blur);\n    // eslint-disable-next-line no-console\n    console.log('story: ref', inputRef.current?.blur);\n  };\n  return <NumberInput {...rest} ref={inputRef} value={value} unit={unitOptions.length ? unit : unitProp} unitOptions={unitOptions} onSelectChange={handleSelectChange} onChange={handleChange} onBlur={handleBlur} inputClassName={css`\n        width: 100px;\n      `} selectClassName={css`\n        max-width: 100px;\n      `} />;\n}",...LiveExample.parameters?.docs?.source}}},Unitless.parameters={...Unitless.parameters,docs:{...Unitless.parameters?.docs,source:{originalSource:"() => <></>",...Unitless.parameters?.docs?.source}}},WithUnits.parameters={...WithUnits.parameters,docs:{...WithUnits.parameters?.docs,source:{originalSource:"() => <></>",...WithUnits.parameters?.docs?.source}}},WithUnitSelect.parameters={...WithUnitSelect.parameters,docs:{...WithUnitSelect.parameters?.docs,source:{originalSource:"() => <></>",...WithUnitSelect.parameters?.docs?.source}}};const __namedExportsOrder=["LiveExample","Unitless","WithUnits","WithUnitSelect"]},"./tools/storybook-utils/dist/esm/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{bN:()=>n,xZ:()=>r});__webpack_require__("./node_modules/lodash/mergeWith.js");var n={baseFontSize:{description:"The base font size passed to the LeafyGreenProvider that wraps the component",control:{type:"radio"},options:[14,16]},updatedBaseFontSize:{description:"The base font size passed to the LeafyGreenProvider that wraps the component. Uses the updated font size values for Euclid Circular A.",control:{type:"radio"},options:[13,16]},darkMode:{description:"Render the component in dark mode.",control:"boolean"},children:{description:"Element rendered inside the component",control:"text"},as:{description:"The component will be rendered in HTML as the element selected here",options:["small","button","a","abbr","address","article","aside","b","big","blockquote","caption","cite","code","dd","del","details","dfn","dialog","div","em","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","i","ins","kbd","keygen","label","legend","li","main","map","mark","menu","menuitem","meter","nav","noscript","ol","p","picture","pre","progress","q","rp","rt","ruby","s","samp","slot","script","section","select","span","strong","style","sub","summary","sup","template","tbody","td","tfoot","th","thead","time","title","tr","u","ul"],type:{name:"string"},control:{type:"select"},defaultValue:"button"}},r=["aria-controls","aria-describedby","aria-label","aria-labelledby","aria-describedby","className","data-lgid","id","onBlur","onCancel","onChange","onClear","onClick","onConfirm","onDismiss","onFilter","popoverZIndex","portalClassName","portalContainer","ref","setOpen","scrollContainer","usePortal"]}}]);