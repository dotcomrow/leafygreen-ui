"use strict";(self.webpackChunkleafygreen_ui=self.webpackChunkleafygreen_ui||[]).push([[8448],{"./packages/icon/dist/Checkmark.js":(module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval('/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/typeof.js");\n/* module decorator */ module = __webpack_require__.hmd(module);\n\n!function (e, r) {\n  "object" == (typeof exports === "undefined" ? "undefined" : (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(exports)) && "undefined" != "object" ? module.exports = r(__webpack_require__("webpack/sharing/consume/default/react/react"), __webpack_require__("./node_modules/prop-types/index.js"), __webpack_require__("./packages/emotion/dist/esm/index.js")) : "function" == typeof define && __webpack_require__.amdO ? define(["react", "prop-types", "@leafygreen-ui/emotion"], r) : ((e = "undefined" != typeof globalThis ? globalThis : e || self).Checkmark = e.Checkmark || {}, e.Checkmark.js = r(e.React, e.PropTypes, e["@leafygreen-ui/emotion"]));\n}(undefined, function (e, r, t) {\n  "use strict";\n\n  function n(e) {\n    return e && "object" == (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(e) && "default" in e ? e : {\n      "default": e\n    };\n  }\n  function a(e) {\n    if (e && "object" == (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(e) && "default" in e) return e;\n    var r = Object.create(null);\n    return e && Object.keys(e).forEach(function (t) {\n      if ("default" !== t) {\n        var n = Object.getOwnPropertyDescriptor(e, t);\n        Object.defineProperty(r, t, n.get ? n : {\n          enumerable: !0,\n          get: function get() {\n            return e[t];\n          }\n        });\n      }\n    }), r["default"] = e, Object.freeze(r);\n  }\n  var l = a(e),\n    i = n(r);\n  function o(e, r, t) {\n    return (r = function (e) {\n      var r = function (e, r) {\n        if ("object" != (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(e) || !e) return e;\n        var t = e[Symbol.toPrimitive];\n        if (void 0 !== t) {\n          var n = t.call(e, r);\n          if ("object" != (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(n)) return n;\n          throw new TypeError("@@toPrimitive must return a primitive value.");\n        }\n        return String(e);\n      }(e, "string");\n      return "symbol" == (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(r) ? r : r + "";\n    }(r)) in e ? Object.defineProperty(e, r, {\n      value: t,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }) : e[r] = t, e;\n  }\n  function u() {\n    return u = Object.assign ? Object.assign.bind() : function (e) {\n      for (var r = 1; r < arguments.length; r++) {\n        var t = arguments[r];\n        for (var n in t) ({}).hasOwnProperty.call(t, n) && (e[n] = t[n]);\n      }\n      return e;\n    }, u.apply(null, arguments);\n  }\n  function f(e, r) {\n    return r || (r = e.slice(0)), Object.freeze(Object.defineProperties(e, {\n      raw: {\n        value: Object.freeze(r)\n      }\n    }));\n  }\n  var c,\n    s,\n    b = {\n      small: 14,\n      "default": 16,\n      large: 20,\n      xlarge: 24\n    };\n  var p = ["className", "size", "title", "aria-label", "aria-labelledby", "fill", "role"],\n    d = function d(e) {\n      var r = e.className,\n        n = e.size,\n        a = void 0 === n ? 16 : n,\n        i = e.title,\n        d = e["aria-label"],\n        y = e["aria-labelledby"],\n        m = e.fill,\n        v = e.role,\n        g = void 0 === v ? "img" : v,\n        h = function (e, r) {\n          if (null == e) return {};\n          var t,\n            n,\n            a = function (e, r) {\n              if (null == e) return {};\n              var t = {};\n              for (var n in e) if ({}.hasOwnProperty.call(e, n)) {\n                if (r.indexOf(n) >= 0) continue;\n                t[n] = e[n];\n              }\n              return t;\n            }(e, r);\n          if (Object.getOwnPropertySymbols) {\n            var l = Object.getOwnPropertySymbols(e);\n            for (n = 0; n < l.length; n++) t = l[n], r.indexOf(t) >= 0 || {}.propertyIsEnumerable.call(e, t) && (a[t] = e[t]);\n          }\n          return a;\n        }(e, p),\n        O = t.css(c || (c = f(["\\n        color: ", ";\\n      "])), m),\n        j = t.css(s || (s = f(["\\n        flex-shrink: 0;\\n      "]))),\n        k = function (e, r, t) {\n          var n,\n            a = t["aria-label"],\n            l = t["aria-labelledby"],\n            i = t.title;\n          switch (e) {\n            case "img":\n              return a || l || i ? o(o(o({}, "aria-labelledby", l), "aria-label", a), "title", i) : {\n                "aria-label": (n = r, "".concat(n.replace(/([a-z])([A-Z])/g, "$1 $2"), " Icon"))\n              };\n            case "presentation":\n              return {\n                "aria-hidden": !0,\n                alt: ""\n              };\n          }\n        }(g, "Checkmark", o(o({\n          title: i\n        }, "aria-label", d), "aria-labelledby", y));\n      return l.createElement("svg", u({\n        className: t.cx(o({}, O, null != m), j, r),\n        height: "number" == typeof a ? a : b[a],\n        width: "number" == typeof a ? a : b[a],\n        role: g\n      }, k, h, {\n        viewBox: "0 0 16 16"\n      }), l.createElement("path", {\n        fillRule: "evenodd",\n        clipRule: "evenodd",\n        d: "M6.30583 9.05037L11.7611 3.59509C12.1516 3.20457 12.7848 3.20457 13.1753 3.59509L13.8824 4.3022C14.273 4.69273 14.273 5.32589 13.8824 5.71642L6.81525 12.7836C6.38819 13.2106 5.68292 13.1646 5.31505 12.6856L2.26638 8.71605C1.92998 8.27804 2.01235 7.65025 2.45036 7.31385L3.04518 6.85702C3.59269 6.43652 4.37742 6.53949 4.79792 7.087L6.30583 9.05037Z",\n        fill: "currentColor"\n      }));\n    };\n  return d.displayName = "Checkmark", d.isGlyph = !0, d.propTypes =  false ? 0 : {}, d;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/icon/dist/Checkmark.js\n')},"./packages/icon/dist/Ellipsis.js":(module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval('/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/typeof.js");\n/* module decorator */ module = __webpack_require__.hmd(module);\n\n!function (e, r) {\n  "object" == (typeof exports === "undefined" ? "undefined" : (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(exports)) && "undefined" != "object" ? module.exports = r(__webpack_require__("webpack/sharing/consume/default/react/react"), __webpack_require__("./node_modules/prop-types/index.js"), __webpack_require__("./packages/emotion/dist/esm/index.js")) : "function" == typeof define && __webpack_require__.amdO ? define(["react", "prop-types", "@leafygreen-ui/emotion"], r) : ((e = "undefined" != typeof globalThis ? globalThis : e || self).Ellipsis = e.Ellipsis || {}, e.Ellipsis.js = r(e.React, e.PropTypes, e["@leafygreen-ui/emotion"]));\n}(undefined, function (e, r, t) {\n  "use strict";\n\n  function l(e) {\n    return e && "object" == (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(e) && "default" in e ? e : {\n      "default": e\n    };\n  }\n  function i(e) {\n    if (e && "object" == (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(e) && "default" in e) return e;\n    var r = Object.create(null);\n    return e && Object.keys(e).forEach(function (t) {\n      if ("default" !== t) {\n        var l = Object.getOwnPropertyDescriptor(e, t);\n        Object.defineProperty(r, t, l.get ? l : {\n          enumerable: !0,\n          get: function get() {\n            return e[t];\n          }\n        });\n      }\n    }), r["default"] = e, Object.freeze(r);\n  }\n  var n = i(e),\n    a = l(r);\n  function o(e, r, t) {\n    return (r = function (e) {\n      var r = function (e, r) {\n        if ("object" != (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(e) || !e) return e;\n        var t = e[Symbol.toPrimitive];\n        if (void 0 !== t) {\n          var l = t.call(e, r);\n          if ("object" != (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(l)) return l;\n          throw new TypeError("@@toPrimitive must return a primitive value.");\n        }\n        return String(e);\n      }(e, "string");\n      return "symbol" == (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(r) ? r : r + "";\n    }(r)) in e ? Object.defineProperty(e, r, {\n      value: t,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }) : e[r] = t, e;\n  }\n  function u() {\n    return u = Object.assign ? Object.assign.bind() : function (e) {\n      for (var r = 1; r < arguments.length; r++) {\n        var t = arguments[r];\n        for (var l in t) ({}).hasOwnProperty.call(t, l) && (e[l] = t[l]);\n      }\n      return e;\n    }, u.apply(null, arguments);\n  }\n  function f(e, r) {\n    return r || (r = e.slice(0)), Object.freeze(Object.defineProperties(e, {\n      raw: {\n        value: Object.freeze(r)\n      }\n    }));\n  }\n  var c,\n    s,\n    p = {\n      small: 14,\n      "default": 16,\n      large: 20,\n      xlarge: 24\n    };\n  var b = ["className", "size", "title", "aria-label", "aria-labelledby", "fill", "role"],\n    d = function d(e) {\n      var r = e.className,\n        l = e.size,\n        i = void 0 === l ? 16 : l,\n        a = e.title,\n        d = e["aria-label"],\n        y = e["aria-labelledby"],\n        v = e.fill,\n        m = e.role,\n        g = void 0 === m ? "img" : m,\n        O = function (e, r) {\n          if (null == e) return {};\n          var t,\n            l,\n            i = function (e, r) {\n              if (null == e) return {};\n              var t = {};\n              for (var l in e) if ({}.hasOwnProperty.call(e, l)) {\n                if (r.indexOf(l) >= 0) continue;\n                t[l] = e[l];\n              }\n              return t;\n            }(e, r);\n          if (Object.getOwnPropertySymbols) {\n            var n = Object.getOwnPropertySymbols(e);\n            for (l = 0; l < n.length; l++) t = n[l], r.indexOf(t) >= 0 || {}.propertyIsEnumerable.call(e, t) && (i[t] = e[t]);\n          }\n          return i;\n        }(e, b),\n        j = t.css(c || (c = f(["\\n        color: ", ";\\n      "])), v),\n        h = t.css(s || (s = f(["\\n        flex-shrink: 0;\\n      "]))),\n        C = function (e, r, t) {\n          var l,\n            i = t["aria-label"],\n            n = t["aria-labelledby"],\n            a = t.title;\n          switch (e) {\n            case "img":\n              return i || n || a ? o(o(o({}, "aria-labelledby", n), "aria-label", i), "title", a) : {\n                "aria-label": (l = r, "".concat(l.replace(/([a-z])([A-Z])/g, "$1 $2"), " Icon"))\n              };\n            case "presentation":\n              return {\n                "aria-hidden": !0,\n                alt: ""\n              };\n          }\n        }(g, "Ellipsis", o(o({\n          title: a\n        }, "aria-label", d), "aria-labelledby", y));\n      return n.createElement("svg", u({\n        className: t.cx(o({}, j, null != v), h, r),\n        height: "number" == typeof i ? i : p[i],\n        width: "number" == typeof i ? i : p[i],\n        role: g\n      }, C, O, {\n        viewBox: "0 0 16 16"\n      }), n.createElement("path", {\n        fillRule: "evenodd",\n        clipRule: "evenodd",\n        d: "M2.75 6C3.7165 6 4.5 6.7835 4.5 7.75C4.5 8.7165 3.7165 9.5 2.75 9.5C1.7835 9.5 1 8.7165 1 7.75C1 6.7835 1.7835 6 2.75 6ZM7.75 6C8.7165 6 9.5 6.7835 9.5 7.75C9.5 8.7165 8.7165 9.5 7.75 9.5C6.7835 9.5 6 8.7165 6 7.75C6 6.7835 6.7835 6 7.75 6ZM14.5 7.75C14.5 6.7835 13.7165 6 12.75 6C11.7835 6 11 6.7835 11 7.75C11 8.7165 11.7835 9.5 12.75 9.5C13.7165 9.5 14.5 8.7165 14.5 7.75Z",\n        fill: "currentColor"\n      }));\n    };\n  return d.displayName = "Ellipsis", d.isGlyph = !0, d.propTypes =  false ? 0 : {}, d;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/icon/dist/Ellipsis.js\n')},"./packages/stepper/src/Step/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  h: () => (/* reexport */ Step)\n});\n\n// EXTERNAL MODULE: consume shared module (default) react@^17.0.2 (singleton) (fallback: ./node_modules/react/index.js)\nvar index_js_ = __webpack_require__("webpack/sharing/consume/default/react/react");\nvar index_js_default = /*#__PURE__*/__webpack_require__.n(index_js_);\n;// CONCATENATED MODULE: ./packages/stepper/src/Step/Step.tsx\n\nvar Step = (index_js_default()).Fragment;\n;// CONCATENATED MODULE: ./packages/stepper/src/Step/index.ts\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9zdGVwcGVyL3NyYy9TdGVwL2luZGV4LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBMEI7QUFFbkIsSUFBTUMsSUFBSSxHQUFHRCw2QkFBYyxDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVhZnlncmVlbi11aS8uL3BhY2thZ2VzL3N0ZXBwZXIvc3JjL1N0ZXAvU3RlcC50c3g/ZmQ1OSIsIndlYnBhY2s6Ly9sZWFmeWdyZWVuLXVpLy4vcGFja2FnZXMvc3RlcHBlci9zcmMvU3RlcC9pbmRleC50cz82ODQyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmV4cG9ydCBjb25zdCBTdGVwID0gUmVhY3QuRnJhZ21lbnQ7XG4iLCJleHBvcnQgeyBTdGVwIH0gZnJvbSAnLi9TdGVwJztcbiJdLCJuYW1lcyI6WyJSZWFjdCIsIlN0ZXAiLCJGcmFnbWVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./packages/stepper/src/Step/index.ts\n')},"./packages/stepper/src/Stepper/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  p: () => (/* reexport */ StepStates),\n  v: () => (/* reexport */ Stepper)\n});\n\n;// CONCATENATED MODULE: ./packages/stepper/src/types.ts\nvar StepStates = {\n  CompletedMultiple: \'completed-multiple\',\n  Completed: \'completed\',\n  Current: \'current\',\n  Upcoming: \'upcoming\',\n  UpcomingMultiple: \'upcoming-multiple\'\n};\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js\nvar esm_extends = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/extends.js");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\nvar objectWithoutProperties = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js");\n// EXTERNAL MODULE: consume shared module (default) react@^17.0.2 (singleton) (fallback: ./node_modules/react/index.js)\nvar index_js_ = __webpack_require__("webpack/sharing/consume/default/react/react");\nvar index_js_default = /*#__PURE__*/__webpack_require__.n(index_js_);\n// EXTERNAL MODULE: ./packages/emotion/dist/esm/index.js\nvar esm = __webpack_require__("./packages/emotion/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/leafygreen-provider/dist/esm/index.js\nvar dist_esm = __webpack_require__("./packages/leafygreen-provider/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/tooltip/dist/esm/index.js\nvar tooltip_dist_esm = __webpack_require__("./packages/tooltip/dist/esm/index.js");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js + 2 modules\nvar defineProperty = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\nvar taggedTemplateLiteral = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js");\n// EXTERNAL MODULE: ./packages/lib/dist/esm/index.js\nvar lib_dist_esm = __webpack_require__("./packages/lib/dist/esm/index.js");\n;// CONCATENATED MODULE: ./packages/stepper/src/constants.ts\n\nvar stepLabelClassName = (0,lib_dist_esm/* createUniqueClassName */.hy)();\nvar stepIconClassName = (0,lib_dist_esm/* createUniqueClassName */.hy)();\n// EXTERNAL MODULE: ./packages/palette/dist/esm/index.js\nvar palette_dist_esm = __webpack_require__("./packages/palette/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/tokens/dist/esm/index.js\nvar tokens_dist_esm = __webpack_require__("./packages/tokens/dist/esm/index.js");\n;// CONCATENATED MODULE: ./packages/stepper/src/StepIcon/StepIcon.styles.ts\n\n\nvar _templateObject, _templateObject2;\n\n\n\n\n\nvar baseStyles = (0,esm.css)(_templateObject || (_templateObject = (0,taggedTemplateLiteral/* default */.Z)(["\\n  box-sizing: content-box;\\n  margin-bottom: ", "px;\\n  border-radius: 50%;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  border: 1px solid;\\n  transition: ", "ms box-shadow ease;\\n  z-index: 1;\\n\\n  svg {\\n    width: 100%;\\n  }\\n"])), tokens_dist_esm/* spacing */.W0[1], tokens_dist_esm/* transitionDuration */.nV.slower);\nvar themedStateColor = (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, lib_dist_esm/* Theme */.Q2.Dark, (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, StepStates.CompletedMultiple, palette_dist_esm/* palette */.D.black), StepStates.Completed, palette_dist_esm/* palette */.D.black), StepStates.Current, palette_dist_esm/* palette */.D.green.base), StepStates.Upcoming, palette_dist_esm/* palette */.D.gray.light1), StepStates.UpcomingMultiple, palette_dist_esm/* palette */.D.gray.light1)), lib_dist_esm/* Theme */.Q2.Light, (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, StepStates.CompletedMultiple, palette_dist_esm/* palette */.D.white), StepStates.Completed, palette_dist_esm/* palette */.D.white), StepStates.Current, palette_dist_esm/* palette */.D.green.dark2), StepStates.Upcoming, palette_dist_esm/* palette */.D.gray.dark1), StepStates.UpcomingMultiple, palette_dist_esm/* palette */.D.gray.dark1));\nvar themedStateBgColor = (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, lib_dist_esm/* Theme */.Q2.Dark, (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, StepStates.CompletedMultiple, palette_dist_esm/* palette */.D.green.base), StepStates.Completed, palette_dist_esm/* palette */.D.green.base), StepStates.Current, palette_dist_esm/* palette */.D.black), StepStates.Upcoming, palette_dist_esm/* palette */.D.black), StepStates.UpcomingMultiple, palette_dist_esm/* palette */.D.black)), lib_dist_esm/* Theme */.Q2.Light, (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, StepStates.CompletedMultiple, palette_dist_esm/* palette */.D.green.dark1), StepStates.Completed, palette_dist_esm/* palette */.D.green.dark1), StepStates.Current, palette_dist_esm/* palette */.D.white), StepStates.Upcoming, palette_dist_esm/* palette */.D.white), StepStates.UpcomingMultiple, palette_dist_esm/* palette */.D.white));\nvar themedStateBorderColor = (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, lib_dist_esm/* Theme */.Q2.Dark, (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, StepStates.CompletedMultiple, palette_dist_esm/* palette */.D.green.base), StepStates.Completed, palette_dist_esm/* palette */.D.green.base), StepStates.Current, palette_dist_esm/* palette */.D.green.base), StepStates.Upcoming, palette_dist_esm/* palette */.D.gray.light1), StepStates.UpcomingMultiple, palette_dist_esm/* palette */.D.gray.light1)), lib_dist_esm/* Theme */.Q2.Light, (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, StepStates.CompletedMultiple, palette_dist_esm/* palette */.D.green.dark1), StepStates.Completed, palette_dist_esm/* palette */.D.green.dark1), StepStates.Current, palette_dist_esm/* palette */.D.green.dark1), StepStates.Upcoming, palette_dist_esm/* palette */.D.gray.dark1), StepStates.UpcomingMultiple, palette_dist_esm/* palette */.D.gray.dark1));\nvar getThemedStateStyles = function getThemedStateStyles(theme, state) {\n  return (0,esm.css)(_templateObject2 || (_templateObject2 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  color: ", ";\\n  background-color: ", ";\\n  border-color: ", ";\\n"])), themedStateColor[theme][state], themedStateBgColor[theme][state], themedStateBorderColor[theme][state]);\n};\n// EXTERNAL MODULE: ./packages/icon/dist/Checkmark.js\nvar Checkmark = __webpack_require__("./packages/icon/dist/Checkmark.js");\n// EXTERNAL MODULE: ./packages/icon/dist/Ellipsis.js\nvar Ellipsis = __webpack_require__("./packages/icon/dist/Ellipsis.js");\n// EXTERNAL MODULE: ./packages/typography/dist/esm/index.js\nvar typography_dist_esm = __webpack_require__("./packages/typography/dist/esm/index.js");\n;// CONCATENATED MODULE: ./packages/stepper/src/StepIcon/StepIconGlyph.tsx\n\nvar StepIconGlyph_templateObject;\n\n\n\n\n\n\n\nvar StepIconGlyph = function StepIconGlyph(_ref) {\n  var state = _ref.state,\n    children = _ref.children;\n  if (state === StepStates.Completed) {\n    return /*#__PURE__*/index_js_default().createElement(Checkmark/* default */.Z, null);\n  } else if (state === StepStates.UpcomingMultiple || state === StepStates.CompletedMultiple) {\n    return /*#__PURE__*/index_js_default().createElement(Ellipsis/* default */.Z, null);\n  } else {\n    // if Current (single) or Upcoming (single)\n    return /*#__PURE__*/index_js_default().createElement(typography_dist_esm/* Overline */.Lh, {\n      className: (0,esm.css)(StepIconGlyph_templateObject || (StepIconGlyph_templateObject = (0,taggedTemplateLiteral/* default */.Z)(["\\n          font-weight: ", ";\\n          color: inherit;\\n        "])), tokens_dist_esm/* fontWeights */.vC.medium)\n    }, children);\n  }\n};\n;// CONCATENATED MODULE: ./packages/stepper/src/StepIcon/StepIcon.tsx\n\n\n\nvar StepIcon_templateObject;\nvar _excluded = ["state", "size", "className"];\n\n\n\n\n\n\nvar StepIcon = function StepIcon(_ref) {\n  var state = _ref.state,\n    size = _ref.size,\n    className = _ref.className,\n    rest = (0,objectWithoutProperties/* default */.Z)(_ref, _excluded);\n  var _useDarkMode = (0,dist_esm/* useDarkMode */.vs)(),\n    theme = _useDarkMode.theme;\n  return /*#__PURE__*/index_js_default().createElement("div", {\n    className: (0,esm.cx)(stepIconClassName, baseStyles, (0,esm.css)(StepIcon_templateObject || (StepIcon_templateObject = (0,taggedTemplateLiteral/* default */.Z)(["\\n          width: ", "px;\\n          height: ", "px;\\n        "])), size, size), getThemedStateStyles(theme, state), className)\n  }, /*#__PURE__*/index_js_default().createElement(StepIconGlyph, (0,esm_extends/* default */.Z)({\n    state: state\n  }, rest)));\n};\n;// CONCATENATED MODULE: ./packages/stepper/src/StepIcon/index.ts\n\n\n;// CONCATENATED MODULE: ./packages/stepper/src/StepLabel/StepLabel.styles.ts\n\n\nvar StepLabel_styles_templateObject, StepLabel_styles_templateObject2;\n\n\n\n\nvar StepLabel_styles_themedStateColor = (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, lib_dist_esm/* Theme */.Q2.Dark, (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, StepStates.CompletedMultiple, palette_dist_esm/* palette */.D.green.base), StepStates.Completed, palette_dist_esm/* palette */.D.green.base), StepStates.Current, palette_dist_esm/* palette */.D.gray.light2), StepStates.Upcoming, palette_dist_esm/* palette */.D.gray.light1), StepStates.UpcomingMultiple, palette_dist_esm/* palette */.D.gray.light1)), lib_dist_esm/* Theme */.Q2.Light, (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, StepStates.CompletedMultiple, palette_dist_esm/* palette */.D.green.dark2), StepStates.Completed, palette_dist_esm/* palette */.D.green.dark2), StepStates.Current, palette_dist_esm/* palette */.D.green.dark3), StepStates.Upcoming, palette_dist_esm/* palette */.D.gray.dark1), StepStates.UpcomingMultiple, palette_dist_esm/* palette */.D.gray.dark1));\nvar getThemedStateColorStyles = function getThemedStateColorStyles(theme, state) {\n  return (0,esm.css)(StepLabel_styles_templateObject || (StepLabel_styles_templateObject = (0,taggedTemplateLiteral/* default */.Z)(["\\n  color: ", ";\\n"])), StepLabel_styles_themedStateColor[theme][state]);\n};\nvar multipleStyles = (0,esm.css)(StepLabel_styles_templateObject2 || (StepLabel_styles_templateObject2 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  text-decoration-line: underline;\\n  text-decoration-style: dotted;\\n  text-underline-position: under;\\n"])));\n;// CONCATENATED MODULE: ./packages/stepper/src/StepLabel/StepLabel.tsx\n\n\n\n\n\n\n\n\nvar StepLabel = function StepLabel(_ref) {\n  var children = _ref.children,\n    state = _ref.state;\n  var isCurrent = state === StepStates.Current;\n  var _useDarkMode = (0,dist_esm/* useDarkMode */.vs)(),\n    theme = _useDarkMode.theme;\n  return /*#__PURE__*/index_js_default().createElement(typography_dist_esm/* Body */.uT, {\n    className: (0,esm.cx)(getThemedStateColorStyles(theme, state), (0,defineProperty/* default */.Z)({}, multipleStyles, state === StepStates.CompletedMultiple || state === StepStates.UpcomingMultiple), stepLabelClassName),\n    weight: isCurrent ? \'medium\' : \'regular\',\n    as: "div"\n  }, children);\n};\n;// CONCATENATED MODULE: ./packages/stepper/src/StepLabel/index.ts\n\n\n;// CONCATENATED MODULE: ./packages/stepper/src/InternalStep/InternalStep.styles.ts\n\n\nvar InternalStep_styles_templateObject, InternalStep_styles_templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6;\n\n\n\n\n\nvar InternalStep_styles_baseStyles = (0,esm.css)(InternalStep_styles_templateObject || (InternalStep_styles_templateObject = (0,taggedTemplateLiteral/* default */.Z)(["\\n  display: flex;\\n  margin: auto;\\n  flex-direction: column;\\n  align-items: center;\\n  padding-bottom: ", "px;\\n  position: relative; // for the :after line\\n\\n  &:focus-visible {\\n    outline: none;\\n  }\\n"])), tokens_dist_esm/* spacing */.W0[1]);\nvar themeStyles = (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, lib_dist_esm/* Theme */.Q2.Dark, (0,esm.css)(InternalStep_styles_templateObject2 || (InternalStep_styles_templateObject2 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    &:focus-visible {\\n      .", " {\\n        box-shadow: 0px 0px 0px 2px ", ",\\n          0px 0px 0px 4px ", ";\\n      }\\n    }\\n  "])), stepIconClassName, palette_dist_esm/* palette */.D.black, palette_dist_esm/* palette */.D.blue.light1)), lib_dist_esm/* Theme */.Q2.Light, (0,esm.css)(_templateObject3 || (_templateObject3 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    &:focus-visible {\\n      .", " {\\n        box-shadow: 0px 0px 0px 2px ", ",\\n          0px 0px 0px 4px ", ";\\n      }\\n    }\\n  "])), stepIconClassName, palette_dist_esm/* palette */.D.white, palette_dist_esm/* palette */.D.blue.light1));\nvar lineStyles = function lineStyles(iconSize, darkMode) {\n  return (0,esm.css)(_templateObject4 || (_templateObject4 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  &:after {\\n    content: \'\';\\n    height: 1px;\\n    width: 100%;\\n    position: absolute;\\n    top: ", "px;\\n    left: 50%;\\n    z-index: 0;\\n    background-color: ", ";\\n  }\\n"])), iconSize / 2, darkMode ? palette_dist_esm/* palette */.D.gray.light1 : palette_dist_esm/* palette */.D.gray.base);\n};\nvar completedLineStyles = (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, lib_dist_esm/* Theme */.Q2.Dark, (0,esm.css)(_templateObject5 || (_templateObject5 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    &:after {\\n      background-color: ", ";\\n    }\\n  "])), palette_dist_esm/* palette */.D.green.base)), lib_dist_esm/* Theme */.Q2.Light, (0,esm.css)(_templateObject6 || (_templateObject6 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    &:after {\\n      background-color: ", ";\\n    }\\n  "])), palette_dist_esm/* palette */.D.green.dark1));\n;// CONCATENATED MODULE: ./packages/stepper/src/InternalStep/InternalStep.tsx\n\n\n\nvar InternalStep_excluded = ["children", "index", "state", "ariaLabel", "shouldDisplayLine", "iconSize", "className"];\n\n\n\n\n\n\n\nvar InternalStep = function InternalStep(_ref) {\n  var children = _ref.children,\n    index = _ref.index,\n    state = _ref.state,\n    _ref$ariaLabel = _ref.ariaLabel,\n    ariaLabel = _ref$ariaLabel === void 0 ? "step".concat(index || \'\') : _ref$ariaLabel,\n    _ref$shouldDisplayLin = _ref.shouldDisplayLine,\n    shouldDisplayLine = _ref$shouldDisplayLin === void 0 ? true : _ref$shouldDisplayLin,\n    _ref$iconSize = _ref.iconSize,\n    iconSize = _ref$iconSize === void 0 ? 20 : _ref$iconSize,\n    className = _ref.className,\n    rest = (0,objectWithoutProperties/* default */.Z)(_ref, InternalStep_excluded);\n  var _useDarkMode = (0,dist_esm/* useDarkMode */.vs)(),\n    darkMode = _useDarkMode.darkMode,\n    theme = _useDarkMode.theme;\n  var isCurrent = state === StepStates.Current;\n  var isCompleted = state === StepStates.Completed || state === StepStates.CompletedMultiple;\n  return /*#__PURE__*/index_js_default().createElement("div", (0,esm_extends/* default */.Z)({\n    className: (0,esm.cx)(InternalStep_styles_baseStyles, (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, lineStyles(iconSize, darkMode), shouldDisplayLine), completedLineStyles[theme], isCompleted && shouldDisplayLine), className),\n    "aria-label": ariaLabel,\n    "aria-current": isCurrent && \'step\'\n  }, rest), /*#__PURE__*/index_js_default().createElement(StepIcon, {\n    state: state,\n    size: iconSize\n  }, index), /*#__PURE__*/index_js_default().createElement(StepLabel, {\n    state: state\n  }, children));\n};\n;// CONCATENATED MODULE: ./packages/stepper/src/InternalStep/index.ts\n\n\n;// CONCATENATED MODULE: ./packages/stepper/src/EllipsesStep/EllipsesStep.types.ts\n\nvar EllipsesStepStates = {\n  CompletedMultiple: StepStates.CompletedMultiple,\n  UpcomingMultiple: StepStates.UpcomingMultiple\n};\n;// CONCATENATED MODULE: ./packages/stepper/src/EllipsesStep/EllipsesStep.styles.ts\n\n\nvar EllipsesStep_styles_templateObject, EllipsesStep_styles_templateObject2;\n\n\n\n\n\n\n\n// TODO: would be good to put these styles inside a baseStyles, but it is currently impossible because the <Tooltip> content is rendered in a Portal.\nvar tooltipStyles = (0,esm.css)(EllipsesStep_styles_templateObject || (EllipsesStep_styles_templateObject = (0,taggedTemplateLiteral/* default */.Z)(["\\n  // TODO: this is an arbitrary value. It would be nice to have a separate component for <ol> that handles this spacing.\\n  padding-inline-start: ", "px;\\n"])), tokens_dist_esm/* spacing */.W0[4]);\nvar themedStateShadowColor = (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, lib_dist_esm/* Theme */.Q2.Dark, (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, EllipsesStepStates.CompletedMultiple, palette_dist_esm/* palette */.D.green.dark1), EllipsesStepStates.UpcomingMultiple, palette_dist_esm/* palette */.D.gray.dark2)), lib_dist_esm/* Theme */.Q2.Light, (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, EllipsesStepStates.CompletedMultiple, palette_dist_esm/* palette */.D.green.light2), EllipsesStepStates.UpcomingMultiple, palette_dist_esm/* palette */.D.gray.light2));\nvar getMultipleStyles = function getMultipleStyles(theme, state) {\n  return (0,esm.css)(EllipsesStep_styles_templateObject2 || (EllipsesStep_styles_templateObject2 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  &:hover .", " {\\n    // TODO: use centralized box-shadow value\\n    box-shadow: 0px 0px 0px 3px ", ";\\n  }\\n"])), stepIconClassName, themedStateShadowColor[theme][state]);\n};\n;// CONCATENATED MODULE: ./packages/stepper/src/EllipsesStep/EllipsesStep.tsx\n\n\nvar EllipsesStep_excluded = ["state", "children", "tooltipContent", "startingStepIndex"];\n\n\n\n\n\nvar EllipsesStep = function EllipsesStep(_ref) {\n  var state = _ref.state,\n    children = _ref.children,\n    tooltipContent = _ref.tooltipContent,\n    startingStepIndex = _ref.startingStepIndex,\n    rest = (0,objectWithoutProperties/* default */.Z)(_ref, EllipsesStep_excluded);\n  var _useDarkMode = (0,dist_esm/* useDarkMode */.vs)(),\n    darkMode = _useDarkMode.darkMode,\n    theme = _useDarkMode.theme;\n  return /*#__PURE__*/index_js_default().createElement(tooltip_dist_esm/* default */.ZP, {\n    align: tooltip_dist_esm/* Align */.xM.Top,\n    justify: tooltip_dist_esm/* Justify */.WD.Middle,\n    darkMode: darkMode,\n    trigger:\n    /*#__PURE__*/\n    // The <li> needs to be defined here and not in <Stepper> because the Tooltip doesn\'t trigger without a wrapping HTML element.\n    index_js_default().createElement("li", null, /*#__PURE__*/index_js_default().createElement(InternalStep, (0,esm_extends/* default */.Z)({\n      className: getMultipleStyles(theme, state),\n      state: state,\n      tabIndex: 0\n    }, rest), children))\n  }, /*#__PURE__*/index_js_default().createElement("div", null, /*#__PURE__*/index_js_default().createElement("ol", {\n    className: tooltipStyles\n  }, index_js_default().Children.map(tooltipContent, function (stepContents, i) {\n    return /*#__PURE__*/index_js_default().createElement("li", {\n      value: startingStepIndex + i\n    }, stepContents);\n  }))));\n};\n;// CONCATENATED MODULE: ./packages/stepper/src/EllipsesStep/index.ts\n\n\n;// CONCATENATED MODULE: ./packages/stepper/src/Stepper/Stepper.styles.ts\n\nvar Stepper_styles_templateObject;\n\nvar Stepper_styles_baseStyles = (0,esm.css)(Stepper_styles_templateObject || (Stepper_styles_templateObject = (0,taggedTemplateLiteral/* default */.Z)(["\\n  list-style: none;\\n  padding-inline-start: 0;\\n  width: 100%;\\n  display: flex;\\n  & > * {\\n    flex: 1;\\n  }\\n"])));\n;// CONCATENATED MODULE: ./packages/stepper/src/Stepper/Stepper.tsx\n\n\nvar Stepper_excluded = ["children", "currentStep", "maxDisplayedSteps", "completedStepsShown", "darkMode", "className"];\n\n\n\n\n\n\n\n\nvar Stepper = function Stepper(_ref) {\n  var children = _ref.children,\n    currentStep = _ref.currentStep,\n    _ref$maxDisplayedStep = _ref.maxDisplayedSteps,\n    maxDisplayedSteps = _ref$maxDisplayedStep === void 0 ? Array.isArray(children) ? children.length : 1 : _ref$maxDisplayedStep,\n    _ref$completedStepsSh = _ref.completedStepsShown,\n    completedStepsShown = _ref$completedStepsSh === void 0 ? 1 : _ref$completedStepsSh,\n    darkModeProp = _ref.darkMode,\n    className = _ref.className,\n    rest = (0,objectWithoutProperties/* default */.Z)(_ref, Stepper_excluded);\n  var _useDarkMode = (0,dist_esm/* useDarkMode */.vs)(darkModeProp),\n    darkMode = _useDarkMode.darkMode;\n  // Helper Variables\n  var numSteps = index_js_default().Children.count(children);\n  maxDisplayedSteps = Math.min(maxDisplayedSteps, numSteps);\n  var childrenArray = index_js_default().Children.toArray(children);\n  // first non-Ellipses step displayed\n  var firstDisplayedStep = Math.min(Math.max(currentStep - completedStepsShown, 0), numSteps - maxDisplayedSteps);\n  var lastDisplayedStep = firstDisplayedStep + maxDisplayedSteps;\n  var hasPriorSteps = firstDisplayedStep > 0;\n  var hasLaterSteps = lastDisplayedStep < numSteps;\n  if (hasPriorSteps) firstDisplayedStep++; // one step will be the prior Ellipses\n  if (hasLaterSteps) lastDisplayedStep--; // one step will be the later Ellipses\n\n  var getStepState = function getStepState(step) {\n    if (step < currentStep) {\n      return StepStates.Completed;\n    } else if (step === currentStep) {\n      return StepStates.Current;\n    } else {\n      return StepStates.Upcoming;\n    }\n  };\n\n  // Helper Functions\n  var isLastStep = function isLastStep(step) {\n    return step + 1 === numSteps;\n  };\n  var getStepRangeText = function getStepRangeText(startStep, endStep) {\n    var stepRange = endStep - startStep;\n    if (stepRange === 1) {\n      return "Steps ".concat(startStep, " and ").concat(endStep);\n    } else {\n      return "Steps ".concat(startStep, " to ").concat(endStep);\n    }\n  };\n  return /*#__PURE__*/index_js_default().createElement(dist_esm/* default */.ZP, {\n    darkMode: darkMode\n  }, /*#__PURE__*/index_js_default().createElement("ol", (0,esm_extends/* default */.Z)({\n    className: (0,esm.cx)(Stepper_styles_baseStyles, className),\n    "aria-label": "progress"\n  }, rest), hasPriorSteps && /*#__PURE__*/index_js_default().createElement(EllipsesStep, {\n    state: StepStates.CompletedMultiple,\n    startingStepIndex: 1,\n    shouldDisplayLine: maxDisplayedSteps > 1,\n    tooltipContent: childrenArray.slice(0, firstDisplayedStep)\n  }, getStepRangeText(1, firstDisplayedStep)), index_js_default().Children.map(childrenArray.slice(firstDisplayedStep, lastDisplayedStep), function (stepContents, i) {\n    return /*#__PURE__*/index_js_default().createElement("li", null, /*#__PURE__*/index_js_default().createElement(InternalStep, {\n      state: getStepState(firstDisplayedStep + i),\n      shouldDisplayLine: !isLastStep(firstDisplayedStep + i),\n      index: firstDisplayedStep + i + 1\n    }, stepContents));\n  }), hasLaterSteps && /*#__PURE__*/index_js_default().createElement(EllipsesStep, {\n    state: StepStates.UpcomingMultiple,\n    startingStepIndex: lastDisplayedStep + 1,\n    shouldDisplayLine: false,\n    tooltipContent: childrenArray.slice(lastDisplayedStep, numSteps)\n  }, getStepRangeText(lastDisplayedStep + 1, numSteps))));\n};\nStepper.displayName = \'Stepper\';\nStepper.propTypes =  false ? 0 : {};\n;// CONCATENATED MODULE: ./packages/stepper/src/Stepper/index.ts\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/stepper/src/Stepper/index.ts\n')},"./packages/tooltip/dist/esm/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WD: () => (/* reexport safe */ _leafygreen_ui_popover__WEBPACK_IMPORTED_MODULE_6__.WD),\n/* harmony export */   ZP: () => (/* binding */ pe),\n/* harmony export */   jx: () => (/* binding */ ae),\n/* harmony export */   xM: () => (/* binding */ le)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/typeof.js");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("webpack/sharing/consume/default/react/react");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/lodash/debounce.js");\n/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_debounce__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/emotion/dist/esm/index.js");\n/* harmony import */ var _leafygreen_ui_hooks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/hooks/dist/esm/index.js");\n/* harmony import */ var _leafygreen_ui_icon__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/icon/dist/esm/index.js");\n/* harmony import */ var _leafygreen_ui_leafygreen_provider__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/leafygreen-provider/dist/esm/index.js");\n/* harmony import */ var _leafygreen_ui_popover__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./packages/popover/dist/esm/index.js");\n/* harmony import */ var _leafygreen_ui_typography__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./packages/typography/dist/esm/index.js");\n/* harmony import */ var polished__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__("./node_modules/polished/dist/polished.esm.js");\n/* harmony import */ var _leafygreen_ui_lib__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("./packages/lib/dist/esm/index.js");\n/* harmony import */ var _leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("./packages/palette/dist/esm/index.js");\n/* harmony import */ var _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("./packages/tokens/dist/esm/index.js");\n/* harmony import */ var lodash_clamp__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__("./node_modules/lodash/clamp.js");\n/* harmony import */ var lodash_clamp__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(lodash_clamp__WEBPACK_IMPORTED_MODULE_11__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction M(e, t) {\n  t > e.length && (t = e.length);\n  for (var n = 0, r = Array(t); n < t; n++) r[n] = e[n];\n  return r;\n}\nfunction S(e, t, n) {\n  return (t = function (e) {\n    var t = function (e, t) {\n      if ("object" != (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(e) || !e) return e;\n      var n = e[Symbol.toPrimitive];\n      if (void 0 !== n) {\n        var r = n.call(e, t);\n        if ("object" != (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(r)) return r;\n        throw new TypeError("@@toPrimitive must return a primitive value.");\n      }\n      return String(e);\n    }(e, "string");\n    return "symbol" == (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(t) ? t : t + "";\n  }(t)) in e ? Object.defineProperty(e, t, {\n    value: n,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[t] = n, e;\n}\nfunction F() {\n  return F = Object.assign ? Object.assign.bind() : function (e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var n = arguments[t];\n      for (var r in n) ({}).hasOwnProperty.call(n, r) && (e[r] = n[r]);\n    }\n    return e;\n  }, F.apply(null, arguments);\n}\nfunction T(e, t) {\n  var n = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var r = Object.getOwnPropertySymbols(e);\n    t && (r = r.filter(function (t) {\n      return Object.getOwnPropertyDescriptor(e, t).enumerable;\n    })), n.push.apply(n, r);\n  }\n  return n;\n}\nfunction I(e) {\n  for (var t = 1; t < arguments.length; t++) {\n    var n = null != arguments[t] ? arguments[t] : {};\n    t % 2 ? T(Object(n), !0).forEach(function (t) {\n      S(e, t, n[t]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : T(Object(n)).forEach(function (t) {\n      Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));\n    });\n  }\n  return e;\n}\nfunction R(e, t) {\n  return function (e) {\n    if (Array.isArray(e)) return e;\n  }(e) || function (e, t) {\n    var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];\n    if (null != n) {\n      var r,\n        o,\n        i,\n        a,\n        l = [],\n        c = !0,\n        s = !1;\n      try {\n        if (i = (n = n.call(e)).next, 0 === t) ;else for (; !(c = (r = i.call(n)).done) && (l.push(r.value), l.length !== t); c = !0);\n      } catch (e) {\n        s = !0, o = e;\n      } finally {\n        try {\n          if (!c && null != n["return"] && (a = n["return"](), Object(a) !== a)) return;\n        } finally {\n          if (s) throw o;\n        }\n      }\n      return l;\n    }\n  }(e, t) || function (e, t) {\n    if (e) {\n      if ("string" == typeof e) return M(e, t);\n      var n = {}.toString.call(e).slice(8, -1);\n      return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? M(e, t) : void 0;\n    }\n  }(e, t) || function () {\n    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n  }();\n}\nfunction A(e, t) {\n  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, {\n    raw: {\n      value: Object.freeze(t)\n    }\n  }));\n}\nfunction z(t) {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", F({\n    width: 26,\n    height: 8,\n    fill: "#001E2B",\n    xmlns: "http://www.w3.org/2000/svg",\n    viewBox: "0 0 26 8"\n  }, t), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {\n    d: "M27 0H-1v1h.699a10 10 0 017.26 3.123l1.685 1.78a6 6 0 008.712 0l1.686-1.78A10 10 0 0126.302 1H27V0z"\n  }));\n}\nvar L,\n  B,\n  D,\n  H,\n  U,\n  X,\n  Y,\n  Z,\n  G,\n  V,\n  q,\n  J,\n  K,\n  $ = 8,\n  _ = 26,\n  Q = 16,\n  W = (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__.css)(L || (L = A(["\\n  margin: unset;\\n  font-family: ", ";\\n  color: ", ";\\n  font-weight: ", ";\\n  width: 100%;\\n  overflow-wrap: anywhere;\\n"])), _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_10__/* .fontFamilies */ .Vl["default"], _leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_9__/* .palette */ .D.gray.light1, _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_10__/* .fontWeights */ .vC.regular),\n  ee = (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__.css)(B || (B = A(["\\n  display: flex;\\n  align-items: center;\\n  border-radius: ", "px;\\n  padding: 12px ", "px;\\n  box-shadow: 0px 2px 4px -1px ", ";\\n  cursor: default;\\n  width: fit-content;\\n  max-width: 256px;\\n"])), Q, Q, (0,polished__WEBPACK_IMPORTED_MODULE_13__/* .transparentize */ .DZ)(.85, _leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_9__/* .palette */ .D.black)),\n  te = (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__.css)(D || (D = A(["\\n  position: relative;\\n"]))),\n  ne = S(S({}, _leafygreen_ui_lib__WEBPACK_IMPORTED_MODULE_8__/* .Theme */ .Q2.Light, {\n    tooltip: (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__.css)(H || (H = A(["\\n      background-color: ", ";\\n      color: ", ";\\n    "])), _leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_9__/* .palette */ .D.black, _leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_9__/* .palette */ .D.gray.light1),\n    children: (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__.css)(U || (U = A(["\\n      color: inherit;\\n    "]))),\n    notchFill: _leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_9__/* .palette */ .D.black\n  }), _leafygreen_ui_lib__WEBPACK_IMPORTED_MODULE_8__/* .Theme */ .Q2.Dark, {\n    tooltip: (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__.css)(X || (X = A(["\\n      background-color: ", ";\\n      color: ", ";\\n    "])), _leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_9__/* .palette */ .D.gray.light2, _leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_9__/* .palette */ .D.black),\n    children: (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__.css)(Y || (Y = A(["\\n      color: inherit;\\n    "]))),\n    notchFill: _leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_9__/* .palette */ .D.gray.light2\n  }),\n  re = _ + 2 * Q,\n  oe = (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__.css)(Z || (Z = A(["\\n  min-height: ", "px;\\n"])), re),\n  ie = (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__.css)(G || (G = A(["\\n  transition-delay: ", "ms;\\n"])), _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_10__/* .transitionDuration */ .nV.slowest),\n  ae = {\n    Hover: "hover",\n    Click: "click"\n  },\n  le = {\n    Top: _leafygreen_ui_popover__WEBPACK_IMPORTED_MODULE_6__/* .Align */ .xM.Top,\n    Bottom: _leafygreen_ui_popover__WEBPACK_IMPORTED_MODULE_6__/* .Align */ .xM.Bottom,\n    Left: _leafygreen_ui_popover__WEBPACK_IMPORTED_MODULE_6__/* .Align */ .xM.Left,\n    Right: _leafygreen_ui_popover__WEBPACK_IMPORTED_MODULE_6__/* .Align */ .xM.Right\n  };\nvar ce = ["initialOpen", "open", "setOpen", "darkMode", "baseFontSize", "triggerEvent", "enabled", "align", "justify", "spacing", "usePortal", "onClose", "id", "shouldClose", "portalClassName", "portalContainer", "portalRef", "scrollContainer", "popoverZIndex", "refEl", "className", "children", "trigger"],\n  se = function se(e) {\n    e.stopPropagation();\n  };\nfunction pe(e) {\n  var c,\n    b = e.initialOpen,\n    O = void 0 !== b && b,\n    j = e.open,\n    E = e.setOpen,\n    k = e.darkMode,\n    C = e.baseFontSize,\n    P = e.triggerEvent,\n    M = void 0 === P ? ae.Hover : P,\n    T = e.enabled,\n    L = void 0 === T || T,\n    B = e.align,\n    D = void 0 === B ? "top" : B,\n    H = e.justify,\n    U = void 0 === H ? "start" : H,\n    X = e.spacing,\n    Y = void 0 === X ? 12 : X,\n    Z = e.usePortal,\n    G = void 0 === Z || Z,\n    re = e.onClose,\n    pe = void 0 === re ? function () {} : re,\n    fe = e.id,\n    ue = e.shouldClose,\n    de = e.portalClassName,\n    he = e.portalContainer,\n    ge = e.portalRef,\n    me = e.scrollContainer,\n    ye = e.popoverZIndex,\n    be = e.refEl,\n    ve = e.className,\n    xe = e.children,\n    we = e.trigger,\n    Oe = function (e, t) {\n      if (null == e) return {};\n      var n,\n        r,\n        o = function (e, t) {\n          if (null == e) return {};\n          var n = {};\n          for (var r in e) if ({}.hasOwnProperty.call(e, r)) {\n            if (t.indexOf(r) >= 0) continue;\n            n[r] = e[r];\n          }\n          return n;\n        }(e, t);\n      if (Object.getOwnPropertySymbols) {\n        var i = Object.getOwnPropertySymbols(e);\n        for (r = 0; r < i.length; r++) n = i[r], t.indexOf(n) >= 0 || {}.propertyIsEnumerable.call(e, n) && (o[n] = e[n]);\n      }\n      return o;\n    }(e, ce),\n    je = "boolean" == typeof j,\n    Ee = R((0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(O), 2),\n    ke = Ee[0],\n    Ce = Ee[1],\n    Pe = (0,_leafygreen_ui_typography__WEBPACK_IMPORTED_MODULE_7__/* .useUpdatedBaseFontSize */ .hN)(C),\n    Ne = je ? j : ke,\n    Me = je && E ? E : Ce,\n    Se = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),\n    Fe = null != fe ? fe : null === (c = Se.current) || void 0 === c ? void 0 : c.id,\n    Te = (0,_leafygreen_ui_hooks__WEBPACK_IMPORTED_MODULE_3__/* .useIdAllocator */ .ue)({\n      prefix: "tooltip",\n      id: Fe\n    }),\n    Ie = (0,_leafygreen_ui_leafygreen_provider__WEBPACK_IMPORTED_MODULE_5__/* .useDarkMode */ .vs)(k),\n    Re = Ie.darkMode,\n    Ae = Ie.theme;\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    we && /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(we) && (0,_leafygreen_ui_icon__WEBPACK_IMPORTED_MODULE_4__/* .isComponentGlyph */ .fx)(we) && console.warn("Using a LeafyGreenUI Icon or Glyph component as a trigger will not render a Tooltip, as these components do not render their children. To use, please wrap your trigger element in another HTML tag.");\n  }, [we]);\n  var ze = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n      ("function" != typeof ue || ue()) && (pe(), Me(!1));\n    }, [Me, ue, pe]),\n    Le = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (e, t) {\n      return e === ae.Hover ? {\n        onMouseEnter: lodash_debounce__WEBPACK_IMPORTED_MODULE_1___default()(function (e) {\n          n("onMouseEnter", e);\n        }, 35),\n        onMouseLeave: lodash_debounce__WEBPACK_IMPORTED_MODULE_1___default()(function (e) {\n          n("onMouseLeave", e), ze();\n        }, 35),\n        onFocus: function onFocus(e) {\n          n("onFocus", e), Me(!0);\n        },\n        onBlur: function onBlur(e) {\n          n("onBlur", e), ze();\n        }\n      } : {\n        onClick: function onClick(e) {\n          e.target !== Se.current && (n("onClick", e), Me(function (e) {\n            return !e;\n          }));\n        }\n      };\n      function n(e, n) {\n        t && t[e] && "function" == typeof t[e] && t[e](n);\n      }\n    }, [ze, Me, Se]);\n  (0,_leafygreen_ui_hooks__WEBPACK_IMPORTED_MODULE_3__/* .useEscapeKey */ .qX)(ze, {\n    enabled: Ne\n  }), (0,_leafygreen_ui_hooks__WEBPACK_IMPORTED_MODULE_3__/* .useBackdropClick */ .Sj)(ze, [Se], Ne && "click" === M);\n  var Be = I({\n      refEl: be,\n      popoverZIndex: ye\n    }, G ? {\n      spacing: Y,\n      usePortal: G,\n      portalClassName: de,\n      portalContainer: he,\n      portalRef: ge,\n      scrollContainer: me\n    } : {\n      spacing: Y,\n      usePortal: G\n    }),\n    De = L && Ne,\n    He = ["left", "right"].includes(D),\n    Ue = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_leafygreen_ui_popover__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .ZP, F({\n      key: "tooltip",\n      active: De,\n      align: D,\n      justify: U,\n      adjustOnMutation: !0,\n      onClick: se,\n      className: (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__.cx)(ie, S({}, (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__.css)(K || (K = A(["\\n          // Try to fit all the content on one line (until it hits max-width)\\n          // Overrides default behavior, which is to set width to size of the trigger.\\n          // Except when justify is set to fit because the width should be the size of the trigger.\\n          // Another exception is when justify is set to fit and the alignment is either left or right. In this case only the height should be the size of the trigger so we still want the width to fit the max content.\\n          width: max-content;\\n        "]))), U !== _leafygreen_ui_popover__WEBPACK_IMPORTED_MODULE_6__/* .Justify */ .WD.Fit || U === _leafygreen_ui_popover__WEBPACK_IMPORTED_MODULE_6__/* .Justify */ .WD.Fit && (D === le.Left || D === le.Right)))\n    }, Be), function (e) {\n      var n = function (e) {\n          var t = e.align,\n            n = e.justify,\n            r = e.triggerRect;\n          if (!t || !n || !r) return {\n            notchContainer: "",\n            notch: "",\n            tooltip: ""\n          };\n          var o,\n            i,\n            a = _,\n            l = -(a - $) / 2,\n            c = {},\n            p = {},\n            f = Q,\n            u = 2 * f,\n            d = 0,\n            h = "";\n          switch (t) {\n            case "top":\n            case "bottom":\n              switch (u = 3 * f, o = r.width / 2 - a / 2, d = lodash_clamp__WEBPACK_IMPORTED_MODULE_11___default()(o, f, u), i = o <= f, c.left = "0px", c.right = "0px", "top" === t ? (p.top = "calc(100% - 1px)", c.top = "".concat(l, "px")) : (p.bottom = "calc(100% - 1px)", c.bottom = "".concat(l, "px"), c.transform = "rotate(180deg)"), n) {\n                case _leafygreen_ui_popover__WEBPACK_IMPORTED_MODULE_6__/* .Justify */ .WD.Start:\n                  p.left = "".concat(d, "px"), i && (h = "translateX(-".concat(f - o, "px)"));\n                  break;\n                case _leafygreen_ui_popover__WEBPACK_IMPORTED_MODULE_6__/* .Justify */ .WD.Middle:\n                  p.left = "0px", p.right = "0px";\n                  break;\n                case _leafygreen_ui_popover__WEBPACK_IMPORTED_MODULE_6__/* .Justify */ .WD.Fit:\n                  p.left = "".concat(d, "px"), i && (h = "translateX(-".concat(f - o, "px)"));\n                  break;\n                case _leafygreen_ui_popover__WEBPACK_IMPORTED_MODULE_6__/* .Justify */ .WD.End:\n                  p.right = "".concat(d, "px"), i && (h = "translateX(".concat(f - o, "px)"));\n              }\n              break;\n            case "left":\n            case "right":\n              switch (u = 2 * f, o = r.height / 2 - a / 2, d = lodash_clamp__WEBPACK_IMPORTED_MODULE_11___default()(o, f, u), i = o <= f, c.top = "0px", c.bottom = "0px", "left" === t ? (p.left = "calc(100% - 1px)", c.left = "".concat(l, "px"), c.transform = "rotate(-90deg)") : (p.right = "calc(100% - 1px)", c.right = "".concat(l, "px"), c.transform = "rotate(90deg)"), n) {\n                case _leafygreen_ui_popover__WEBPACK_IMPORTED_MODULE_6__/* .Justify */ .WD.Start:\n                  p.top = "".concat(d, "px"), i && (h = "translateY(-".concat(f - o, "px)"));\n                  break;\n                case _leafygreen_ui_popover__WEBPACK_IMPORTED_MODULE_6__/* .Justify */ .WD.Middle:\n                  p.top = "0px", p.bottom = "0px";\n                  break;\n                case _leafygreen_ui_popover__WEBPACK_IMPORTED_MODULE_6__/* .Justify */ .WD.Fit:\n                  p.top = "".concat(d, "px"), i && (h = "translateY(-".concat(f - o, "px)"));\n                  break;\n                case _leafygreen_ui_popover__WEBPACK_IMPORTED_MODULE_6__/* .Justify */ .WD.End:\n                  p.bottom = "".concat(d, "px"), i && (h = "translateY(".concat(f - o, "px)"));\n              }\n          }\n          return {\n            notchContainer: (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__.css)(V || (V = A(["\\n      position: absolute;\\n      width: ", "px;\\n      height: ", "px;\\n      overflow: hidden;\\n      margin: auto;\\n      pointer-events: none;\\n      ", ";\\n    "])), a, a, (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__.css)(p)),\n            notch: (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__.css)(q || (q = A(["\\n      ", ";\\n      position: absolute;\\n      width: ", "px;\\n      height: ", "px; // Keep it square. Rotating is simpler\\n      margin: 0;\\n    "])), (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__.css)(c), _, _),\n            tooltip: (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__.css)(J || (J = A(["\\n      min-width: ", "px;\\n      transform: ", ";\\n    "])), 2 * d + a, h)\n          };\n        }({\n          align: e.align,\n          justify: e.justify,\n          triggerRect: e.referenceElPos\n        }),\n        r = n.notchContainer,\n        o = n.notch,\n        i = n.tooltip;\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_leafygreen_ui_leafygreen_provider__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP, {\n        darkMode: !Re\n      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", F({\n        role: "tooltip"\n      }, Oe, {\n        id: Te,\n        className: (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__.cx)(ee, i, ne[Ae].tooltip, S({}, oe, He), ve),\n        ref: Se\n      }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {\n        className: (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__.cx)(W, _leafygreen_ui_typography__WEBPACK_IMPORTED_MODULE_7__/* .bodyTypeScaleStyles */ .dF[Pe], ne[Ae].children)\n      }, xe), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {\n        className: r\n      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(z, {\n        className: (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__.cx)(o),\n        fill: ne[Ae].notchFill\n      }))));\n    });\n  return we ? "function" == typeof we ? we(I(I({}, Le(M)), {}, {\n    className: te,\n    "aria-describedby": De ? Te : void 0,\n    children: Ue\n  })) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(we, I(I({}, Le(M, we.props)), {}, {\n    "aria-describedby": De ? Te : void 0,\n    children: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, we.props.children, Ue),\n    className: (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__.cx)(te, we.props.className)\n  })) : Ue;\n}\npe.displayName = "Tooltip", pe.propTypes =  false ? 0 : {};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/tooltip/dist/esm/index.js\n')}}]);