"use strict";(self.webpackChunkleafygreen_ui=self.webpackChunkleafygreen_ui||[]).push([[5818],{"./node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (/* binding */ _objectDestructuringEmpty)\n/* harmony export */ });\nfunction _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError("Cannot destructure " + obj);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0RGVzdHJ1Y3R1cmluZ0VtcHR5LmpzIiwibWFwcGluZ3MiOiI7OztBQUFlO0FBQ2Y7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlYWZ5Z3JlZW4tdWkvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0RGVzdHJ1Y3R1cmluZ0VtcHR5LmpzPzg0NjgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX29iamVjdERlc3RydWN0dXJpbmdFbXB0eShvYmopIHtcbiAgaWYgKG9iaiA9PSBudWxsKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGRlc3RydWN0dXJlIFwiICsgb2JqKTtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js\n')},"./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  Z: () => (/* binding */ _toConsumableArray)\n});\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js\nvar arrayLikeToArray = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js");\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return (0,arrayLikeToArray/* default */.Z)(arr);\n}\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArray.js\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);\n}\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js\nvar unsupportedIterableToArray = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js");\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js\nfunction _nonIterableSpread() {\n  throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n}\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\n\n\n\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || (0,unsupportedIterableToArray/* default */.Z)(arr) || _nonIterableSpread();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXFEO0FBQ3RDO0FBQ2YsaUNBQWlDLG1DQUFnQjtBQUNqRCxDOztBQ0hlO0FBQ2Y7QUFDQSxDOzs7O0FDRmU7QUFDZjtBQUNBLEM7O0FDRnVEO0FBQ0o7QUFDc0I7QUFDbEI7QUFDeEM7QUFDZixTQUFTLGtCQUFpQixTQUFTLGdCQUFlLFNBQVMsNkNBQTBCLFNBQVMsa0JBQWlCO0FBQy9HIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVhZnlncmVlbi11aS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hcnJheVdpdGhvdXRIb2xlcy5qcz82MDA1Iiwid2VicGFjazovL2xlYWZ5Z3JlZW4tdWkvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaXRlcmFibGVUb0FycmF5LmpzP2RiOTAiLCJ3ZWJwYWNrOi8vbGVhZnlncmVlbi11aS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9ub25JdGVyYWJsZVNwcmVhZC5qcz8zNDI3Iiwid2VicGFjazovL2xlYWZ5Z3JlZW4tdWkvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkuanM/MjkwOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXJyYXlMaWtlVG9BcnJheSBmcm9tIFwiLi9hcnJheUxpa2VUb0FycmF5LmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnJheUxpa2VUb0FycmF5KGFycik7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheShpdGVyKSB7XG4gIGlmICh0eXBlb2YgU3ltYm9sICE9PSBcInVuZGVmaW5lZFwiICYmIGl0ZXJbU3ltYm9sLml0ZXJhdG9yXSAhPSBudWxsIHx8IGl0ZXJbXCJAQGl0ZXJhdG9yXCJdICE9IG51bGwpIHJldHVybiBBcnJheS5mcm9tKGl0ZXIpO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9ub25JdGVyYWJsZVNwcmVhZCgpIHtcbiAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7XG59IiwiaW1wb3J0IGFycmF5V2l0aG91dEhvbGVzIGZyb20gXCIuL2FycmF5V2l0aG91dEhvbGVzLmpzXCI7XG5pbXBvcnQgaXRlcmFibGVUb0FycmF5IGZyb20gXCIuL2l0ZXJhYmxlVG9BcnJheS5qc1wiO1xuaW1wb3J0IHVuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5IGZyb20gXCIuL3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5LmpzXCI7XG5pbXBvcnQgbm9uSXRlcmFibGVTcHJlYWQgZnJvbSBcIi4vbm9uSXRlcmFibGVTcHJlYWQuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF90b0NvbnN1bWFibGVBcnJheShhcnIpIHtcbiAgcmV0dXJuIGFycmF5V2l0aG91dEhvbGVzKGFycikgfHwgaXRlcmFibGVUb0FycmF5KGFycikgfHwgdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCBub25JdGVyYWJsZVNwcmVhZCgpO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\n')},"./packages/date-picker/src/shared/components/DateInput/DateInputBox/DateInputBox.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  a: () => (/* binding */ DateInputBox)\n});\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js\nvar esm_extends = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/extends.js");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js + 2 modules\nvar defineProperty = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\nvar objectWithoutProperties = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js");\n// EXTERNAL MODULE: consume shared module (default) react@^17.0.2 (singleton) (fallback: ./node_modules/react/index.js)\nvar index_js_ = __webpack_require__("webpack/sharing/consume/default/react/react");\nvar index_js_default = /*#__PURE__*/__webpack_require__.n(index_js_);\n// EXTERNAL MODULE: ./node_modules/lodash/isEqual.js\nvar isEqual = __webpack_require__("./node_modules/lodash/isEqual.js");\nvar isEqual_default = /*#__PURE__*/__webpack_require__.n(isEqual);\n// EXTERNAL MODULE: ./node_modules/lodash/isNull.js\nvar isNull = __webpack_require__("./node_modules/lodash/isNull.js");\nvar isNull_default = /*#__PURE__*/__webpack_require__.n(isNull);\n// EXTERNAL MODULE: ./packages/date-utils/dist/esm/index.js\nvar esm = __webpack_require__("./packages/date-utils/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/emotion/dist/esm/index.js\nvar dist_esm = __webpack_require__("./packages/emotion/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/hooks/dist/esm/index.js\nvar hooks_dist_esm = __webpack_require__("./packages/hooks/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/leafygreen-provider/dist/esm/index.js\nvar leafygreen_provider_dist_esm = __webpack_require__("./packages/leafygreen-provider/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/lib/dist/esm/index.js\nvar lib_dist_esm = __webpack_require__("./packages/lib/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/date-picker/src/shared/context/index.ts + 3 modules\nvar context = __webpack_require__("./packages/date-picker/src/shared/context/index.ts");\n// EXTERNAL MODULE: ./packages/date-picker/src/shared/hooks/index.ts + 6 modules\nvar hooks = __webpack_require__("./packages/date-picker/src/shared/hooks/index.ts");\n// EXTERNAL MODULE: ./packages/date-picker/src/shared/types/index.ts + 2 modules\nvar types = __webpack_require__("./packages/date-picker/src/shared/types/index.ts");\n// EXTERNAL MODULE: ./packages/date-picker/src/shared/utils/index.ts + 30 modules\nvar utils = __webpack_require__("./packages/date-picker/src/shared/utils/index.ts");\n// EXTERNAL MODULE: ./packages/date-picker/src/shared/components/DateInput/DateInputSegment/index.ts\nvar DateInputSegment = __webpack_require__("./packages/date-picker/src/shared/components/DateInput/DateInputSegment/index.ts");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\nvar taggedTemplateLiteral = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js");\n// EXTERNAL MODULE: ./packages/palette/dist/esm/index.js\nvar palette_dist_esm = __webpack_require__("./packages/palette/dist/esm/index.js");\n;// CONCATENATED MODULE: ./packages/date-picker/src/shared/components/DateInput/DateInputBox/DateInputBox.styles.ts\n\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4;\n\n\n\nvar segmentPartsWrapperStyles = (0,dist_esm.css)(_templateObject || (_templateObject = (0,taggedTemplateLiteral/* default */.Z)(["\\n  display: flex;\\n  align-items: center;\\n  gap: 1px;\\n"])));\nvar separatorLiteralStyles = (0,dist_esm.css)(_templateObject2 || (_templateObject2 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  user-select: none;\\n"])));\nvar separatorLiteralDisabledStyles = (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, lib_dist_esm/* Theme */.Q2.Dark, (0,dist_esm.css)(_templateObject3 || (_templateObject3 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    color: ", ";\\n  "])), palette_dist_esm/* palette */.D.gray.dark2)), lib_dist_esm/* Theme */.Q2.Light, (0,dist_esm.css)(_templateObject4 || (_templateObject4 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    color: ", ";\\n  "])), palette_dist_esm/* palette */.D.gray.base));\n;// CONCATENATED MODULE: ./packages/date-picker/src/shared/components/DateInput/DateInputBox/DateInputBox.tsx\n\n\n\nvar _excluded = ["value", "setValue", "className", "labelledBy", "segmentRefs", "onSegmentChange"];\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Renders a styled date input with appropriate segment order & separator characters.\n *\n * Depends on {@link DateInputSegment}\n *\n * Uses parameters `value` & `locale` along with {@link Intl.DateTimeFormat.prototype.formatToParts}\n * to determine the segment order and separator characters.\n *\n * Provided value is assumed to be UTC.\n *\n * Argument passed into `setValue` callback is also in UTC\n * @internal\n */\nvar DateInputBox = /*#__PURE__*/index_js_default().forwardRef(function (_ref, fwdRef) {\n  var value = _ref.value,\n    setValue = _ref.setValue,\n    className = _ref.className,\n    labelledBy = _ref.labelledBy,\n    segmentRefs = _ref.segmentRefs,\n    onSegmentChange = _ref.onSegmentChange,\n    rest = (0,objectWithoutProperties/* default */.Z)(_ref, _excluded);\n  var _useSharedDatePickerC = (0,context/* useSharedDatePickerContext */.Fp)(),\n    isDirty = _useSharedDatePickerC.isDirty,\n    formatParts = _useSharedDatePickerC.formatParts,\n    disabled = _useSharedDatePickerC.disabled,\n    min = _useSharedDatePickerC.min,\n    max = _useSharedDatePickerC.max,\n    setIsDirty = _useSharedDatePickerC.setIsDirty;\n  var _useDarkMode = (0,leafygreen_provider_dist_esm/* useDarkMode */.vs)(),\n    theme = _useDarkMode.theme;\n  var containerRef = (0,hooks_dist_esm/* useForwardedRef */.ts)(fwdRef, null);\n\n  /** Formats and sets the segment value */\n  var getFormattedSegmentValue = function getFormattedSegmentValue(segmentName, segmentValue) {\n    var formatter = (0,utils/* getValueFormatter */.kZ)(segmentName);\n    var formattedValue = formatter(segmentValue);\n    return formattedValue;\n  };\n\n  /** if the value is a `Date` the component is dirty */\n  (0,index_js_.useEffect)(function () {\n    if ((0,esm/* isDateObject */.dB)(value) && !isDirty) {\n      setIsDirty(true);\n    }\n  }, [isDirty, setIsDirty, value]);\n\n  /**\n   * When a segment is updated,\n   * trigger a `change` event for the segment, and\n   * update the external Date value if necessary\n   */\n  var handleSegmentUpdate = function handleSegmentUpdate(newSegments, prevSegments) {\n    var hasAnySegmentChanged = !isEqual_default()(newSegments, prevSegments);\n    if (hasAnySegmentChanged) {\n      var newDate = (0,utils/* newDateFromSegments */.vo)(newSegments);\n      var shouldSetValue = isNull_default()(newDate) || (0,esm/* isValidDate */.qb)(newDate) && (0,utils/* isEverySegmentValueExplicit */.qu)(newSegments) || (0,esm/* isInvalidDateObject */.h1)(newDate) && (isDirty || (0,utils/* isEverySegmentFilled */.IY)(newSegments));\n      if (shouldSetValue) {\n        setValue === null || setValue === void 0 ? void 0 : setValue({\n          value: newDate,\n          segments: newSegments\n        });\n      }\n    }\n  };\n\n  /** Keep track of each date segment */\n  var _useDateSegments = (0,hooks/* useDateSegments */.zr)(value, {\n      onUpdate: handleSegmentUpdate\n    }),\n    segments = _useDateSegments.segments,\n    setSegment = _useDateSegments.setSegment;\n\n  /** Fired when an individual segment value changes */\n  var handleSegmentInputChange = function handleSegmentInputChange(segmentChangeEvent) {\n    var segmentValue = segmentChangeEvent.value;\n    var segmentName = segmentChangeEvent.segment,\n      meta = segmentChangeEvent.meta;\n    var changedViaArrowKeys = (meta === null || meta === void 0 ? void 0 : meta.key) === lib_dist_esm/* keyMap */.Pc.ArrowDown || (meta === null || meta === void 0 ? void 0 : meta.key) === lib_dist_esm/* keyMap */.Pc.ArrowUp;\n\n    // Auto-format the segment if it is explicit and was not changed via arrow-keys\n    if (!changedViaArrowKeys && (0,utils/* isExplicitSegmentValue */.Zy)(segmentName, segmentValue)) {\n      segmentValue = getFormattedSegmentValue(segmentName, segmentValue);\n\n      // Auto-advance focus (if possible)\n      var nextSegmentName = (0,utils/* getRelativeSegment */.Uf)(\'next\', {\n        segment: segmentName,\n        formatParts: formatParts\n      });\n      if (nextSegmentName) {\n        var _nextSegmentRef$curre, _nextSegmentRef$curre2;\n        var nextSegmentRef = segmentRefs[nextSegmentName];\n        nextSegmentRef === null || nextSegmentRef === void 0 || (_nextSegmentRef$curre = nextSegmentRef.current) === null || _nextSegmentRef$curre === void 0 ? void 0 : _nextSegmentRef$curre.focus();\n        nextSegmentRef === null || nextSegmentRef === void 0 || (_nextSegmentRef$curre2 = nextSegmentRef.current) === null || _nextSegmentRef$curre2 === void 0 ? void 0 : _nextSegmentRef$curre2.select();\n      }\n    }\n    setSegment(segmentName, segmentValue);\n    onSegmentChange === null || onSegmentChange === void 0 ? void 0 : onSegmentChange(segmentChangeEvent);\n  };\n\n  /** Triggered when a segment is blurred */\n  var handleSegmentInputBlur = function handleSegmentInputBlur(e) {\n    var segmentName = e.target.getAttribute(\'id\');\n    var segmentValue = e.target.value;\n    if ((0,types/* isDateSegment */.V2)(segmentName)) {\n      var formattedValue = getFormattedSegmentValue(segmentName, segmentValue);\n      setSegment(segmentName, formattedValue);\n    }\n  };\n  return /*#__PURE__*/index_js_default().createElement("div", (0,esm_extends/* default */.Z)({\n    className: (0,dist_esm.cx)(segmentPartsWrapperStyles, className),\n    ref: containerRef\n  }, rest), formatParts === null || formatParts === void 0 ? void 0 : formatParts.map(function (part, i) {\n    if (part.type === \'literal\') {\n      return /*#__PURE__*/index_js_default().createElement("span", {\n        className: (0,dist_esm.cx)(separatorLiteralStyles, (0,defineProperty/* default */.Z)({}, separatorLiteralDisabledStyles[theme], disabled)),\n        key: \'literal-\' + i\n      }, part.value);\n    } else if ((0,types/* isDateSegment */.V2)(part.type)) {\n      return /*#__PURE__*/index_js_default().createElement(DateInputSegment/* DateInputSegment */._, {\n        key: part.type,\n        ref: segmentRefs[part.type],\n        "aria-labelledby": labelledBy,\n        min: (0,utils/* getMinSegmentValue */.RD)(part.type, {\n          date: value,\n          min: min\n        }),\n        max: (0,utils/* getMaxSegmentValue */.Lf)(part.type, {\n          date: value,\n          max: max\n        }),\n        segment: part.type,\n        value: segments[part.type],\n        onChange: handleSegmentInputChange,\n        onBlur: handleSegmentInputBlur\n      });\n    }\n  }));\n});\nDateInputBox.displayName = \'DateInputBox\';//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/date-picker/src/shared/components/DateInput/DateInputBox/DateInputBox.tsx\n')},"./packages/date-picker/src/shared/components/DateInput/DateInputSegment/DateInputSegment.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  _: () => (/* binding */ DateInputSegment)\n});\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js\nvar esm_extends = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/extends.js");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\nvar objectWithoutProperties = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js");\n// EXTERNAL MODULE: consume shared module (default) react@^17.0.2 (singleton) (fallback: ./node_modules/react/index.js)\nvar index_js_ = __webpack_require__("webpack/sharing/consume/default/react/react");\nvar index_js_default = /*#__PURE__*/__webpack_require__.n(index_js_);\n// EXTERNAL MODULE: ./packages/emotion/dist/esm/index.js\nvar esm = __webpack_require__("./packages/emotion/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/hooks/dist/esm/index.js\nvar dist_esm = __webpack_require__("./packages/hooks/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/leafygreen-provider/dist/esm/index.js\nvar leafygreen_provider_dist_esm = __webpack_require__("./packages/leafygreen-provider/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/lib/dist/esm/index.js\nvar lib_dist_esm = __webpack_require__("./packages/lib/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/tokens/dist/esm/index.js\nvar tokens_dist_esm = __webpack_require__("./packages/tokens/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/typography/dist/esm/index.js\nvar typography_dist_esm = __webpack_require__("./packages/typography/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/date-picker/src/shared/constants.ts\nvar constants = __webpack_require__("./packages/date-picker/src/shared/constants.ts");\n// EXTERNAL MODULE: ./packages/date-picker/src/shared/context/index.ts + 3 modules\nvar context = __webpack_require__("./packages/date-picker/src/shared/context/index.ts");\n// EXTERNAL MODULE: ./packages/date-picker/src/shared/utils/index.ts + 30 modules\nvar utils = __webpack_require__("./packages/date-picker/src/shared/utils/index.ts");\n;// CONCATENATED MODULE: ./packages/date-picker/src/shared/components/DateInput/DateInputSegment/utils/getNewSegmentValueFromArrowKeyPress/getNewSegmentValueFromArrowKeyPress.ts\n\n/**\n * Returns a new segment value given the current state\n */\nvar getNewSegmentValueFromArrowKeyPress = function getNewSegmentValueFromArrowKeyPress(_ref) {\n  var value = _ref.value,\n    key = _ref.key,\n    segment = _ref.segment,\n    min = _ref.min,\n    max = _ref.max;\n  var valueDiff = key === lib_dist_esm/* keyMap */.Pc.ArrowUp ? 1 : -1;\n  var defaultVal = key === lib_dist_esm/* keyMap */.Pc.ArrowUp ? min : max;\n  var incrementedValue = value ? Number(value) + valueDiff : defaultVal;\n  var newValue = segment === \'year\' ? incrementedValue : (0,lib_dist_esm/* rollover */.B9)(incrementedValue, min, max);\n  return newValue;\n};\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js + 2 modules\nvar defineProperty = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\nvar taggedTemplateLiteral = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js");\n// EXTERNAL MODULE: ./packages/palette/dist/esm/index.js\nvar palette_dist_esm = __webpack_require__("./packages/palette/dist/esm/index.js");\n;// CONCATENATED MODULE: ./packages/date-picker/src/shared/components/DateInput/DateInputSegment/DateInputSegment.styles.ts\n\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12;\n\n\n\n\n\nvar baseStyles = (0,esm.css)(_templateObject || (_templateObject = (0,taggedTemplateLiteral/* default */.Z)(["\\n  font-family: ", ";\\n  font-size: ", "px;\\n  font-variant: tabular-nums;\\n  text-align: center;\\n  border: none;\\n  border-radius: 0;\\n  padding: 0;\\n\\n  &::-webkit-outer-spin-button,\\n  &::-webkit-inner-spin-button {\\n    -webkit-appearance: none;\\n    margin: 0;\\n  }\\n  -moz-appearance: textfield; /* Firefox */\\n\\n  &:focus {\\n    outline: none;\\n  }\\n"])), tokens_dist_esm/* fontFamilies */.Vl["default"], tokens_dist_esm/* BaseFontSize */.Y2.Body1);\nvar segmentThemeStyles = (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, lib_dist_esm/* Theme */.Q2.Light, (0,esm.css)(_templateObject2 || (_templateObject2 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    background-color: transparent;\\n    color: ", ";\\n\\n    &::placeholder {\\n      color: ", ";\\n    }\\n\\n    &:focus {\\n      background-color: ", ";\\n    }\\n  "])), palette_dist_esm/* palette */.D.black, palette_dist_esm/* palette */.D.gray.light1, palette_dist_esm/* palette */.D.blue.light3)), lib_dist_esm/* Theme */.Q2.Dark, (0,esm.css)(_templateObject3 || (_templateObject3 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    background-color: transparent;\\n    color: ", ";\\n\\n    &::placeholder {\\n      color: ", ";\\n    }\\n\\n    &:focus {\\n      background-color: ", ";\\n    }\\n  "])), palette_dist_esm/* palette */.D.gray.light2, palette_dist_esm/* palette */.D.gray.dark1, palette_dist_esm/* palette */.D.blue.dark3));\nvar fontSizeStyles = (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, tokens_dist_esm/* BaseFontSize */.Y2.Body1, (0,esm.css)(_templateObject4 || (_templateObject4 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    --base-font-size: ", "px;\\n  "])), tokens_dist_esm/* BaseFontSize */.Y2.Body1)), tokens_dist_esm/* BaseFontSize */.Y2.Body2, (0,esm.css)(_templateObject5 || (_templateObject5 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    --base-font-size: ", "px;\\n  "])), tokens_dist_esm/* BaseFontSize */.Y2.Body2));\nvar segmentSizeStyles = (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, tokens_dist_esm/* Size */.$u.XSmall, (0,esm.css)(_templateObject6 || (_templateObject6 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    font-size: ", "px;\\n  "])), tokens_dist_esm/* typeScales */.yL.body1.fontSize)), tokens_dist_esm/* Size */.$u.Small, (0,esm.css)(_templateObject7 || (_templateObject7 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    font-size: ", "px;\\n  "])), tokens_dist_esm/* typeScales */.yL.body1.fontSize)), tokens_dist_esm/* Size */.$u.Default, (0,esm.css)(_templateObject8 || (_templateObject8 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    font-size: var(--base-font-size, ", "px);\\n  "])), tokens_dist_esm/* typeScales */.yL.body1.fontSize)), tokens_dist_esm/* Size */.$u.Large, (0,esm.css)(_templateObject9 || (_templateObject9 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    font-size: ", "px; // Intentionally off-token\\n  "])), 18));\nvar segmentWidthStyles = {\n  day: (0,esm.css)(_templateObject10 || (_templateObject10 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    width: ", "ch;\\n  "])), constants/* charsPerSegment */.mN.day * constants/* characterWidth */.mS.D),\n  month: (0,esm.css)(_templateObject11 || (_templateObject11 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    width: ", "ch;\\n  "])), constants/* charsPerSegment */.mN.month * constants/* characterWidth */.mS.M),\n  year: (0,esm.css)(_templateObject12 || (_templateObject12 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    width: ", "ch;\\n  "])), constants/* charsPerSegment */.mN.year * constants/* characterWidth */.mS.Y)\n};\n// EXTERNAL MODULE: ./node_modules/lodash/last.js\nvar last = __webpack_require__("./node_modules/lodash/last.js");\nvar last_default = /*#__PURE__*/__webpack_require__.n(last);\n;// CONCATENATED MODULE: ./packages/date-picker/src/shared/components/DateInput/DateInputSegment/utils/getNewSegmentValueFromInputValue/getNewSegmentValueFromInputValue.ts\n\n\n\n\n\n/**\n * Calculates the new value for the segment given an incoming change.\n *\n * Does not allow incoming values that\n * - are not valid numbers\n * - include a period\n * - would cause the segment to overflow\n */\nvar getNewSegmentValueFromInputValue = function getNewSegmentValueFromInputValue(segmentName, currentValue, incomingValue) {\n  // If the incoming value is not a valid number\n  var isIncomingValueNumber = !isNaN(Number(incomingValue));\n  // macOS adds a period when pressing SPACE twice inside a text input.\n  var doesIncomingValueContainPeriod = /\\./.test(incomingValue);\n\n  // if the current value is "full", do not allow any additional characters to be entered\n  var wouldCauseOverflow = currentValue.length === constants/* charsPerSegment */.mN[segmentName] && incomingValue.length > constants/* charsPerSegment */.mN[segmentName];\n  if (!isIncomingValueNumber || doesIncomingValueContainPeriod || wouldCauseOverflow) {\n    return currentValue;\n  }\n  var isIncomingValueValid = (0,utils/* isValidValueForSegment */.Dj)(segmentName, incomingValue);\n  if (isIncomingValueValid || segmentName === \'year\') {\n    var _newValue = (0,lib_dist_esm/* truncateStart */.xh)(incomingValue, {\n      length: constants/* charsPerSegment */.mN[segmentName]\n    });\n    return _newValue;\n  }\n  var typedChar = last_default()(incomingValue.split(\'\'));\n  var newValue = typedChar === \'0\' ? \'0\' : typedChar !== null && typedChar !== void 0 ? typedChar : \'\';\n  return newValue;\n};\n;// CONCATENATED MODULE: ./packages/date-picker/src/shared/components/DateInput/DateInputSegment/utils/index.ts\n\n;// CONCATENATED MODULE: ./packages/date-picker/src/shared/components/DateInput/DateInputSegment/DateInputSegment.tsx\n\n\nvar _excluded = ["segment", "value", "min", "max", "onChange", "onBlur", "onKeyDown"];\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Controlled component\n *\n * Renders a single date segment with the\n * appropriate character padding/truncation.\n *\n *\n * @internal\n */\nvar DateInputSegment = /*#__PURE__*/index_js_default().forwardRef(function (_ref, fwdRef) {\n  var segment = _ref.segment,\n    value = _ref.value,\n    minProp = _ref.min,\n    maxProp = _ref.max,\n    onChange = _ref.onChange,\n    onBlur = _ref.onBlur,\n    onKeyDown = _ref.onKeyDown,\n    rest = (0,objectWithoutProperties/* default */.Z)(_ref, _excluded);\n  var min = minProp !== null && minProp !== void 0 ? minProp : constants/* defaultMin */.kP[segment];\n  var max = maxProp !== null && maxProp !== void 0 ? maxProp : constants/* defaultMax */.hh[segment];\n  var inputRef = (0,dist_esm/* useForwardedRef */.ts)(fwdRef, null);\n  var _useDarkMode = (0,leafygreen_provider_dist_esm/* useDarkMode */.vs)(),\n    theme = _useDarkMode.theme;\n  var baseFontSize = (0,typography_dist_esm/* useUpdatedBaseFontSize */.hN)();\n  var _useSharedDatePickerC = (0,context/* useSharedDatePickerContext */.Fp)(),\n    size = _useSharedDatePickerC.size,\n    disabled = _useSharedDatePickerC.disabled,\n    autoCompleteProp = _useSharedDatePickerC.autoComplete;\n  var formatter = (0,utils/* getValueFormatter */.kZ)(segment);\n  var autoComplete = (0,utils/* getAutoComplete */.bn)(autoCompleteProp, segment);\n  var pattern = "[0-9]{".concat(constants/* charsPerSegment */.mN[segment], "}");\n\n  /**\n   * Receives native input events,\n   * determines whether the input value is valid and should change,\n   * and fires a custom `DateInputSegmentChangeEvent`.\n   */\n  var handleChange = function handleChange(e) {\n    var target = e.target;\n    var newValue = getNewSegmentValueFromInputValue(segment, value, target.value);\n    var hasValueChanged = newValue !== value;\n    if (hasValueChanged) {\n      onChange({\n        segment: segment,\n        value: newValue\n      });\n    } else {\n      // If the value has not changed, ensure the input value is reset\n      target.value = value;\n    }\n  };\n\n  /** Handle keydown presses that don\'t natively fire a change event */\n  var handleKeyDown = function handleKeyDown(e) {\n    var _ref2 = e,\n      key = _ref2.key,\n      target = _ref2.target;\n\n    // A key press can be an `arrow`, `enter`, `space`, etc so we check for number presses\n    // We also check for `space` because Number(\' \') returns true\n    var isNumber = Number(key) && key !== lib_dist_esm/* keyMap */.Pc.Space;\n    if (isNumber) {\n      // if the value length is equal to the charsPerSegment, reset the input\n      if (target.value.length === constants/* charsPerSegment */.mN[segment]) {\n        target.value = \'\';\n      }\n    }\n    switch (key) {\n      case lib_dist_esm/* keyMap */.Pc.ArrowUp:\n      case lib_dist_esm/* keyMap */.Pc.ArrowDown:\n        {\n          e.preventDefault();\n          var newValue = getNewSegmentValueFromArrowKeyPress({\n            key: key,\n            value: value,\n            min: min,\n            max: max,\n            segment: segment\n          });\n          var valueString = formatter(newValue);\n\n          /** Fire a custom change event when the up/down arrow keys are pressed */\n          onChange({\n            segment: segment,\n            value: valueString,\n            meta: {\n              key: key\n            }\n          });\n          break;\n        }\n\n      // On backspace the value is reset\n      case lib_dist_esm/* keyMap */.Pc.Backspace:\n        {\n          // Don\'t fire change event if the input is initially empty\n          if (value) {\n            // Prevent the onKeyDown handler inside `DatePickerInput` from firing. Because we reset the value on backspace, that will trigger the previous segment to focus but we want the focus to remain inside the current segment.\n            e.stopPropagation();\n\n            /** Fire a custom change event when the backspace key is pressed */\n            onChange({\n              segment: segment,\n              value: \'\',\n              meta: {\n                key: key\n              }\n            });\n          }\n          break;\n        }\n\n      // On space the value is reset\n      case lib_dist_esm/* keyMap */.Pc.Space:\n        {\n          e.preventDefault();\n\n          // Don\'t fire change event if the input is initially empty\n          if (value) {\n            /** Fire a custom change event when the space key is pressed */\n            onChange({\n              segment: segment,\n              value: \'\',\n              meta: {\n                key: key\n              }\n            });\n          }\n          break;\n        }\n      default:\n        {\n          break;\n        }\n    }\n    onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(e);\n  };\n\n  // Note: Using a text input with pattern attribute due to Firefox\n  // stripping leading zeros on number inputs - Thanks @matt-d-rat\n  // Number inputs also don\'t support the `selectionStart`/`End` API\n  return /*#__PURE__*/index_js_default().createElement("input", (0,esm_extends/* default */.Z)({}, rest, {\n    "aria-label": segment,\n    id: segment,\n    ref: inputRef,\n    type: "text",\n    pattern: pattern,\n    role: "spinbutton",\n    value: value,\n    min: min,\n    max: max,\n    placeholder: constants/* defaultPlaceholder */.WY[segment],\n    onChange: handleChange,\n    onBlur: onBlur,\n    onKeyDown: handleKeyDown,\n    disabled: disabled,\n    "data-testid": "lg-date_picker_input-segment",\n    "data-segment": segment,\n    className: (0,esm.cx)(baseStyles, fontSizeStyles[baseFontSize], segmentThemeStyles[theme], segmentSizeStyles[size !== null && size !== void 0 ? size : tokens_dist_esm/* Size */.$u.Default], segmentWidthStyles[segment]),\n    autoComplete: autoComplete\n  }));\n});\nDateInputSegment.displayName = \'DateInputSegment\';//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/date-picker/src/shared/components/DateInput/DateInputSegment/DateInputSegment.tsx\n')},"./packages/date-picker/src/shared/components/DateInput/DateInputSegment/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{_:()=>_DateInputSegment__WEBPACK_IMPORTED_MODULE_0__._});var _DateInputSegment__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./packages/date-picker/src/shared/components/DateInput/DateInputSegment/DateInputSegment.tsx")},"./packages/date-picker/src/shared/hooks/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  OZ: () => (/* reexport */ useControlledValue),\n  zr: () => (/* reexport */ useDateSegments),\n  FF: () => (/* reexport */ useSegmentRefs)\n});\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 3 modules\nvar slicedToArray = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js");\n// EXTERNAL MODULE: consume shared module (default) react@^17.0.2 (singleton) (fallback: ./node_modules/react/index.js)\nvar index_js_ = __webpack_require__("webpack/sharing/consume/default/react/react");\n// EXTERNAL MODULE: ./node_modules/lodash/isUndefined.js\nvar isUndefined = __webpack_require__("./node_modules/lodash/isUndefined.js");\nvar isUndefined_default = /*#__PURE__*/__webpack_require__.n(isUndefined);\n// EXTERNAL MODULE: ./packages/hooks/dist/esm/index.js\nvar esm = __webpack_require__("./packages/hooks/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/lib/dist/esm/index.js\nvar dist_esm = __webpack_require__("./packages/lib/dist/esm/index.js");\n;// CONCATENATED MODULE: ./packages/date-picker/src/shared/hooks/useControlledValue/useControlledValue.ts\n\n\n\n\n\n\n/**\n * TODO: move this to `packages/hooks`\n * https://jira.mongodb.org/browse/LG-3608\n */\n\n/**\n * A hook that enables a component to be both controlled or uncontrolled.\n *\n * Returns a {@link ControlledValueReturnObject}\n */\nvar useControlledValue = function useControlledValue(valueProp, onChange, initialProp) {\n  // Initially set isControlled to the existence of `valueProp`.\n  // If the value prop changes from undefined to something defined,\n  // then isControlled is set to true,\n  // and will remain true for the life of the component\n  var _useState = (0,index_js_.useState)(!isUndefined_default()(valueProp)),\n    _useState2 = (0,slicedToArray/* default */.Z)(_useState, 2),\n    isControlled = _useState2[0],\n    setControlled = _useState2[1];\n  (0,index_js_.useEffect)(function () {\n    setControlled(isControlled || !isUndefined_default()(valueProp));\n  }, [isControlled, valueProp]);\n  var wasControlled = (0,esm/* usePrevious */.D9)(isControlled);\n  (0,index_js_.useEffect)(function () {\n    if (isUndefined_default()(isControlled) || isUndefined_default()(wasControlled)) return;\n    if (isControlled !== wasControlled) {\n      var err = "WARN: A component changed from ".concat(wasControlled ? \'controlled\' : \'uncontrolled\', " to ").concat(isControlled ? \'controlled\' : \'uncontrolled\', ". This can cause issues with React states. ").concat(isControlled ? \'To control a component, but have an initially empty input, consider setting the `value` prop to `null`.\' : \'\');\n      dist_esm/* consoleOnce */.X3.warn(err);\n    }\n  }, [isControlled, wasControlled]);\n\n  // We set the initial value to either the `value`\n  // or the temporary `initialValue` prop\n  var initialValue = (0,index_js_.useMemo)(function () {\n    return isControlled ? valueProp : initialProp;\n  }, [initialProp, isControlled, valueProp]);\n\n  // Keep track of the internal value state\n  var _useState3 = (0,index_js_.useState)(initialValue),\n    _useState4 = (0,slicedToArray/* default */.Z)(_useState3, 2),\n    uncontrolledValue = _useState4[0],\n    setUncontrolledValue = _useState4[1];\n\n  // The returned value is wither the provided value prop\n  // or the uncontrolled value\n  var value = (0,index_js_.useMemo)(function () {\n    return isControlled ? valueProp : uncontrolledValue;\n  }, [isControlled, uncontrolledValue, valueProp]);\n\n  // A wrapper around `handleChange` that fires a simulated event\n  var setValue = function setValue(newVal) {\n    if (!isControlled) {\n      setUncontrolledValue(newVal);\n    }\n    onChange === null || onChange === void 0 ? void 0 : onChange(newVal);\n  };\n  return {\n    isControlled: isControlled,\n    value: value,\n    setValue: setValue\n  };\n};\n;// CONCATENATED MODULE: ./packages/date-picker/src/shared/hooks/useControlledValue/index.ts\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js + 2 modules\nvar defineProperty = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js");\n// EXTERNAL MODULE: ./node_modules/lodash/isNull.js\nvar isNull = __webpack_require__("./node_modules/lodash/isNull.js");\nvar isNull_default = /*#__PURE__*/__webpack_require__.n(isNull);\n// EXTERNAL MODULE: ./packages/date-utils/dist/esm/index.js\nvar date_utils_dist_esm = __webpack_require__("./packages/date-utils/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/date-picker/src/shared/utils/index.ts + 30 modules\nvar utils = __webpack_require__("./packages/date-picker/src/shared/utils/index.ts");\n;// CONCATENATED MODULE: ./packages/date-picker/src/shared/hooks/useDateSegments/useDateSegments.ts\n\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0,defineProperty/* default */.Z)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n\n\n\n\n\n\n/** Merges old state & new state */\nvar dateSegmentsReducer = function dateSegmentsReducer(currentState, newState) {\n  var state = _objectSpread(_objectSpread({}, currentState), newState);\n  return state;\n};\n\n/**\n * Returns an object with all 3 date segments, and a setter function\n *\n * Returned segments are relative to the formatter time zone\n */\nvar useDateSegments = function useDateSegments() {\n  var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var _ref = arguments.length > 1 ? arguments[1] : undefined,\n    onUpdate = _ref.onUpdate;\n  //\n  var _useReducer = (0,index_js_.useReducer)(dateSegmentsReducer, date, utils/* getFormattedSegmentsFromDate */.wO),\n    _useReducer2 = (0,slicedToArray/* default */.Z)(_useReducer, 2),\n    segments = _useReducer2[0],\n    dispatch = _useReducer2[1];\n  var prevDate = (0,esm/* usePrevious */.D9)(date);\n\n  // If `date` prop changes, update the segments\n  (0,index_js_.useEffect)(function () {\n    // If the date has changed to a valid value\n    var hasDateValueChanged = (0,date_utils_dist_esm/* isValidDate */.qb)(date) && !(0,date_utils_dist_esm/* isSameUTCDay */.bI)(date, prevDate);\n\n    // If the date has been set to null from a previously valid date\n    var hasDateBeenCleared = (isNull_default()(date) || isUndefined_default()(date)) && (0,date_utils_dist_esm/* isValidDate */.qb)(prevDate);\n    if (hasDateValueChanged || hasDateBeenCleared) {\n      var newSegments = (0,utils/* getFormattedSegmentsFromDate */.wO)(date);\n      onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(newSegments, _objectSpread({}, segments));\n      dispatch(newSegments);\n    }\n  }, [date, onUpdate, prevDate, segments]);\n\n  /**\n   * Custom dispatch that triggers the provided side effects, and updates state\n   */\n  var setSegment = function setSegment(segment, value) {\n    // Calculate next state\n    // then, execute any side effects based on the new state\n    // finally, commit the new state\n\n    var updateObject = (0,defineProperty/* default */.Z)({}, segment, value);\n    var nextState = dateSegmentsReducer(segments, updateObject);\n    onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(nextState, _objectSpread({}, segments), segment);\n    dispatch(updateObject);\n  };\n  return {\n    segments: segments,\n    setSegment: setSegment\n  };\n};\n;// CONCATENATED MODULE: ./packages/date-picker/src/shared/hooks/useDateSegments/index.ts\n\n;// CONCATENATED MODULE: ./packages/date-picker/src/shared/hooks/useSegmentRefs/useSegmentRefs.ts\n\n\n/**\n * @returns A {@link SegmentRefs} object to keep track of each day/month/year input segment\n */\nvar useSegmentRefs = function useSegmentRefs() {\n  var getSegmentRef = (0,esm/* useDynamicRefs */.DK)();\n  var segmentRefs = (0,index_js_.useMemo)(function () {\n    return {\n      day: getSegmentRef(\'day\') || undefined,\n      month: getSegmentRef(\'month\') || undefined,\n      year: getSegmentRef(\'year\') || undefined\n    };\n  }, [getSegmentRef]);\n  return segmentRefs;\n};\n;// CONCATENATED MODULE: ./packages/date-picker/src/shared/hooks/useSegmentRefs/index.ts\n\n;// CONCATENATED MODULE: ./packages/date-picker/src/shared/hooks/index.ts\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/date-picker/src/shared/hooks/index.ts\n')},"./packages/date-picker/src/shared/testutils/getProviderPropsFromStoryContext/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Y: () => (/* binding */ getProviderPropsFromStoryContext)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js");\n/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js");\n/* harmony import */ var _babel_runtime_helpers_objectDestructuringEmpty__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js");\n/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/extends.js");\n/* harmony import */ var _babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js");\n/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js");\n/* harmony import */ var _leafygreen_ui_lib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/lib/dist/esm/index.js");\n/* harmony import */ var _context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/date-picker/src/shared/context/index.ts");\n\n\n\n\n\n\nvar _excluded = ["darkMode", "baseFontSize"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n\n\nvar getProviderPropsFromStoryContext = function getProviderPropsFromStoryContext(storyContextProps) {\n  var _pickAndOmit = (0,_leafygreen_ui_lib__WEBPACK_IMPORTED_MODULE_1__/* .pickAndOmit */ .Me)(storyContextProps, (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(_context__WEBPACK_IMPORTED_MODULE_2__/* .contextPropNames */ .CH)),\n    _pickAndOmit2 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(_pickAndOmit, 2),\n    _pickAndOmit2$ = _pickAndOmit2[0],\n    darkMode = _pickAndOmit2$.darkMode,\n    baseFontSize = _pickAndOmit2$.baseFontSize,\n    datePickerProviderProps = (0,_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(_pickAndOmit2$, _excluded),\n    storyProps = (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)({}, ((0,_babel_runtime_helpers_objectDestructuringEmpty__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(_pickAndOmit2[1]), _pickAndOmit2[1]));\n  return {\n    leafyGreenProviderProps: {\n      darkMode: darkMode,\n      baseFontSize: baseFontSize === 13 ? 14 : baseFontSize\n    },\n    datePickerProviderProps: _objectSpread({}, datePickerProviderProps),\n    storyProps: storyProps\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9kYXRlLXBpY2tlci9zcmMvc2hhcmVkL3Rlc3R1dGlscy9nZXRQcm92aWRlclByb3BzRnJvbVN0b3J5Q29udGV4dC9pbmRleC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNpRDtBQU8xQjtBQVFoQixJQUFNRSxnQ0FBZ0MsR0FBRyxTQUFuQ0EsZ0NBQWdDQSxDQUMzQ0MsaUJBQTZELEVBQ0Y7RUFDM0QsSUFBQUMsWUFBQSxHQUdJSix5RUFBVyxDQUFDRyxpQkFBaUIsRUFBQUUsNkZBQUEsQ0FBTUosZ0VBQWdCLENBQUMsQ0FBQztJQUFBSyxhQUFBLEdBQUFDLHlGQUFBLENBQUFILFlBQUE7SUFBQUksY0FBQSxHQUFBRixhQUFBO0lBRnJERyxRQUFRLEdBQUFELGNBQUEsQ0FBUkMsUUFBUTtJQUFFQyxZQUFZLEdBQUFGLGNBQUEsQ0FBWkUsWUFBWTtJQUFLQyx1QkFBdUIsR0FBQUMsbUdBQUEsQ0FBQUosY0FBQSxFQUFBSyxTQUFBO0lBQy9DQyxVQUFVLEdBQUFDLG1GQUFBLE1BQUFDLG9HQUFBLENBQUFWLGFBQUEsTUFBQUEsYUFBQTtFQUdqQixPQUFPO0lBQ0xXLHVCQUF1QixFQUFFO01BQ3ZCUixRQUFRLEVBQVJBLFFBQVE7TUFDUkMsWUFBWSxFQUFFQSxZQUFZLEtBQUssRUFBRSxHQUFHLEVBQUUsR0FBR0E7SUFDM0MsQ0FBQztJQUNEQyx1QkFBdUIsRUFBQU8sYUFBQSxLQUNsQlAsdUJBQXVCLENBQzNCO0lBQ0RHLFVBQVUsRUFBVkE7RUFDRixDQUFDO0FBQ0gsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2xlYWZ5Z3JlZW4tdWkvLi9wYWNrYWdlcy9kYXRlLXBpY2tlci9zcmMvc2hhcmVkL3Rlc3R1dGlscy9nZXRQcm92aWRlclByb3BzRnJvbVN0b3J5Q29udGV4dC9pbmRleC50cz9iYmIxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IExlYWZ5R3JlZW5Qcm92aWRlclByb3BzIH0gZnJvbSAnQGxlYWZ5Z3JlZW4tdWkvbGVhZnlncmVlbi1wcm92aWRlcic7XG5pbXBvcnQgeyBwaWNrQW5kT21pdCB9IGZyb20gJ0BsZWFmeWdyZWVuLXVpL2xpYic7XG5cbmltcG9ydCB7IERhdGVQaWNrZXJQcm9wcyB9IGZyb20gJy4uLy4uLy4uL0RhdGVQaWNrZXIvRGF0ZVBpY2tlci50eXBlcyc7XG5pbXBvcnQge1xuICBDb250ZXh0UHJvcEtleXMsXG4gIGNvbnRleHRQcm9wTmFtZXMsXG4gIFNoYXJlZERhdGVQaWNrZXJQcm92aWRlclByb3BzLFxufSBmcm9tICcuLi8uLi9jb250ZXh0JztcblxuZXhwb3J0IGludGVyZmFjZSBQcm92aWRlclByb3BzT2JqZWN0PFQ+IHtcbiAgbGVhZnlHcmVlblByb3ZpZGVyUHJvcHM6IExlYWZ5R3JlZW5Qcm92aWRlclByb3BzO1xuICBkYXRlUGlja2VyUHJvdmlkZXJQcm9wczogU2hhcmVkRGF0ZVBpY2tlclByb3ZpZGVyUHJvcHM7XG4gIHN0b3J5UHJvcHM6IFQ7XG59XG5cbmV4cG9ydCBjb25zdCBnZXRQcm92aWRlclByb3BzRnJvbVN0b3J5Q29udGV4dCA9IDxQID0gRGF0ZVBpY2tlclByb3BzPihcbiAgc3RvcnlDb250ZXh0UHJvcHM6IFBhcnRpYWw8UCAmIFNoYXJlZERhdGVQaWNrZXJQcm92aWRlclByb3BzPixcbik6IFByb3ZpZGVyUHJvcHNPYmplY3Q8UGFydGlhbDxPbWl0PFAsIENvbnRleHRQcm9wS2V5cz4+PiA9PiB7XG4gIGNvbnN0IFtcbiAgICB7IGRhcmtNb2RlLCBiYXNlRm9udFNpemUsIC4uLmRhdGVQaWNrZXJQcm92aWRlclByb3BzIH0sXG4gICAgeyAuLi5zdG9yeVByb3BzIH0sXG4gIF0gPSBwaWNrQW5kT21pdChzdG9yeUNvbnRleHRQcm9wcywgWy4uLmNvbnRleHRQcm9wTmFtZXNdKTtcblxuICByZXR1cm4ge1xuICAgIGxlYWZ5R3JlZW5Qcm92aWRlclByb3BzOiB7XG4gICAgICBkYXJrTW9kZSxcbiAgICAgIGJhc2VGb250U2l6ZTogYmFzZUZvbnRTaXplID09PSAxMyA/IDE0IDogYmFzZUZvbnRTaXplLFxuICAgIH0sXG4gICAgZGF0ZVBpY2tlclByb3ZpZGVyUHJvcHM6IHtcbiAgICAgIC4uLmRhdGVQaWNrZXJQcm92aWRlclByb3BzLFxuICAgIH0sXG4gICAgc3RvcnlQcm9wcyxcbiAgfTtcbn07XG4iXSwibmFtZXMiOlsicGlja0FuZE9taXQiLCJjb250ZXh0UHJvcE5hbWVzIiwiZ2V0UHJvdmlkZXJQcm9wc0Zyb21TdG9yeUNvbnRleHQiLCJzdG9yeUNvbnRleHRQcm9wcyIsIl9waWNrQW5kT21pdCIsIl90b0NvbnN1bWFibGVBcnJheSIsIl9waWNrQW5kT21pdDIiLCJfc2xpY2VkVG9BcnJheSIsIl9waWNrQW5kT21pdDIkIiwiZGFya01vZGUiLCJiYXNlRm9udFNpemUiLCJkYXRlUGlja2VyUHJvdmlkZXJQcm9wcyIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllcyIsIl9leGNsdWRlZCIsInN0b3J5UHJvcHMiLCJfZXh0ZW5kcyIsIl9vYmplY3REZXN0cnVjdHVyaW5nRW1wdHkiLCJsZWFmeUdyZWVuUHJvdmlkZXJQcm9wcyIsIl9vYmplY3RTcHJlYWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./packages/date-picker/src/shared/testutils/getProviderPropsFromStoryContext/index.ts\n')}}]);