"use strict";(self.webpackChunkleafygreen_ui=self.webpackChunkleafygreen_ui||[]).push([[1027],{"./packages/segmented-control/src/SegmentedControl.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  Generated: () => (/* binding */ Generated),\n  LiveExample: () => (/* binding */ LiveExample),\n  __namedExportsOrder: () => (/* binding */ __namedExportsOrder),\n  "default": () => (/* binding */ SegmentedControl_stories)\n});\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 3 modules\nvar toConsumableArray = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js");\n// EXTERNAL MODULE: consume shared module (default) react@^17.0.2 (singleton) (fallback: ./node_modules/react/index.js)\nvar index_js_ = __webpack_require__("webpack/sharing/consume/default/react/react");\nvar index_js_default = /*#__PURE__*/__webpack_require__.n(index_js_);\n// EXTERNAL MODULE: ./tools/storybook-utils/dist/esm/index.js\nvar esm = __webpack_require__("./tools/storybook-utils/dist/esm/index.js");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/typeof.js\nvar esm_typeof = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/typeof.js");\n// EXTERNAL MODULE: ./node_modules/lodash/isNull.js\nvar isNull = __webpack_require__("./node_modules/lodash/isNull.js");\nvar isNull_default = /*#__PURE__*/__webpack_require__.n(isNull);\n// EXTERNAL MODULE: ./node_modules/lodash/once.js\nvar once = __webpack_require__("./node_modules/lodash/once.js");\nvar once_default = /*#__PURE__*/__webpack_require__.n(once);\n// EXTERNAL MODULE: ./packages/emotion/dist/esm/index.js\nvar dist_esm = __webpack_require__("./packages/emotion/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/hooks/dist/esm/index.js\nvar hooks_dist_esm = __webpack_require__("./packages/hooks/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/leafygreen-provider/dist/esm/index.js\nvar leafygreen_provider_dist_esm = __webpack_require__("./packages/leafygreen-provider/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/lib/dist/esm/index.js\nvar lib_dist_esm = __webpack_require__("./packages/lib/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/typography/dist/esm/index.js\nvar typography_dist_esm = __webpack_require__("./packages/typography/dist/esm/index.js");\n// EXTERNAL MODULE: ./node_modules/polished/dist/polished.esm.js\nvar polished_esm = __webpack_require__("./node_modules/polished/dist/polished.esm.js");\n// EXTERNAL MODULE: ./packages/palette/dist/esm/index.js\nvar palette_dist_esm = __webpack_require__("./packages/palette/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/tokens/dist/esm/index.js\nvar tokens_dist_esm = __webpack_require__("./packages/tokens/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/box/dist/esm/index.js\nvar box_dist_esm = __webpack_require__("./packages/box/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/icon/dist/esm/index.js\nvar icon_dist_esm = __webpack_require__("./packages/icon/dist/esm/index.js");\n;// CONCATENATED MODULE: ./packages/segmented-control/dist/esm/index.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction _(n, e) {\n  e > n.length && (e = n.length);\n  for (var r = 0, o = Array(e); r < e; r++) o[r] = n[r];\n  return o;\n}\nfunction j(n, e, r) {\n  return (e = function (n) {\n    var e = function (n, e) {\n      if ("object" != (0,esm_typeof/* default */.Z)(n) || !n) return n;\n      var r = n[Symbol.toPrimitive];\n      if (void 0 !== r) {\n        var o = r.call(n, e);\n        if ("object" != (0,esm_typeof/* default */.Z)(o)) return o;\n        throw new TypeError("@@toPrimitive must return a primitive value.");\n      }\n      return String(n);\n    }(n, "string");\n    return "symbol" == (0,esm_typeof/* default */.Z)(e) ? e : e + "";\n  }(e)) in n ? Object.defineProperty(n, e, {\n    value: r,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : n[e] = r, n;\n}\nfunction D() {\n  return D = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var r = arguments[e];\n      for (var o in r) ({}).hasOwnProperty.call(r, o) && (n[o] = r[o]);\n    }\n    return n;\n  }, D.apply(null, arguments);\n}\nfunction A(n, e) {\n  if (null == n) return {};\n  var r,\n    o,\n    t = function (n, e) {\n      if (null == n) return {};\n      var r = {};\n      for (var o in n) if ({}.hasOwnProperty.call(n, o)) {\n        if (e.indexOf(o) >= 0) continue;\n        r[o] = n[o];\n      }\n      return r;\n    }(n, e);\n  if (Object.getOwnPropertySymbols) {\n    var a = Object.getOwnPropertySymbols(n);\n    for (o = 0; o < a.length; o++) r = a[o], e.indexOf(r) >= 0 || {}.propertyIsEnumerable.call(n, r) && (t[r] = n[r]);\n  }\n  return t;\n}\nfunction I(n, e) {\n  return function (n) {\n    if (Array.isArray(n)) return n;\n  }(n) || function (n, e) {\n    var r = null == n ? null : "undefined" != typeof Symbol && n[Symbol.iterator] || n["@@iterator"];\n    if (null != r) {\n      var o,\n        t,\n        a,\n        i,\n        l = [],\n        c = !0,\n        d = !1;\n      try {\n        if (a = (r = r.call(n)).next, 0 === e) ;else for (; !(c = (o = a.call(r)).done) && (l.push(o.value), l.length !== e); c = !0);\n      } catch (n) {\n        d = !0, t = n;\n      } finally {\n        try {\n          if (!c && null != r["return"] && (i = r["return"](), Object(i) !== i)) return;\n        } finally {\n          if (d) throw t;\n        }\n      }\n      return l;\n    }\n  }(n, e) || function (n, e) {\n    if (n) {\n      if ("string" == typeof n) return _(n, e);\n      var r = {}.toString.call(n).slice(8, -1);\n      return "Object" === r && n.constructor && (r = n.constructor.name), "Map" === r || "Set" === r ? Array.from(n) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? _(n, e) : void 0;\n    }\n  }(n, e) || function () {\n    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n  }();\n}\nfunction L(n, e) {\n  return e || (e = n.slice(0)), Object.freeze(Object.defineProperties(n, {\n    raw: {\n      value: Object.freeze(e)\n    }\n  }));\n}\nvar P,\n  F,\n  M,\n  H,\n  T,\n  V,\n  X,\n  q,\n  K,\n  G,\n  R,\n  U,\n  $ = "small",\n  B = {\n    XSmall: "xsmall",\n    Default: "default",\n    Large: "large"\n  },\n  J = /*#__PURE__*/index_js_default().createContext({\n    size: B.Default,\n    theme: lib_dist_esm/* Theme */.Q2.Light,\n    name: "",\n    followFocus: !0\n  });\nvar Q,\n  W,\n  Y = (0,dist_esm.css)(P || (P = L(["\\n  display: flex;\\n  gap: 8px;\\n  align-items: center;\\n  z-index: 0;\\n  font-family: ", ";\\n"])), tokens_dist_esm/* fontFamilies */.Vl["default"]),\n  Z = (0,dist_esm.css)(F || (F = L(["\\n  white-space: nowrap;\\n"]))),\n  nn = j(j({}, lib_dist_esm/* Theme */.Q2.Light, (0,dist_esm.css)(M || (M = L(["\\n    color: ", ";\\n  "])), palette_dist_esm/* palette */.D.gray.dark1)), lib_dist_esm/* Theme */.Q2.Dark, (0,dist_esm.css)(H || (H = L(["\\n    color: ", ";\\n  "])), palette_dist_esm/* palette */.D.gray.light1)),\n  en = j(j(j({}, B.XSmall, (0,dist_esm.css)(T || (T = L(["\\n    --segment-gap: 1px; // space between segments\\n    --wrapper-padding: 0px;\\n    --indicator-height: 100%;\\n    --outer-radius: 6px;\\n    --indicator-radius: 6px;\\n  "])))), B.Default, (0,dist_esm.css)(V || (V = L(["\\n    --segment-gap: 5px; // space between segments\\n    --indicator-height: calc(100% - 2 * var(--wrapper-padding));\\n    --wrapper-padding: 3px;\\n    --outer-radius: 8px;\\n    --indicator-radius: 6px;\\n  "])))), B.Large, (0,dist_esm.css)(X || (X = L(["\\n    --segment-gap: 5px; // space between segments\\n    --indicator-height: calc(100% - 2 * var(--wrapper-padding));\\n    --outer-radius: 8px;\\n    --wrapper-padding: 3px;\\n    --indicator-radius: 6px;\\n  "])))),\n  rn = j(j({}, lib_dist_esm/* Theme */.Q2.Light, (0,dist_esm.css)(q || (q = L(["\\n    --background-color: ", ";\\n    --inner-shadow: 0px 1px 2px ", " inset;\\n    --outer-shadow: 0px 1px 1px ", ";\\n    --hover-background-color: ", ";\\n    --indicator-background-color: ", ";\\n    --indicator-border-color: ", ";\\n  "])), palette_dist_esm/* palette */.D.gray.light3, (0,polished_esm/* transparentize */.DZ)(.7, palette_dist_esm/* palette */.D.black), palette_dist_esm/* palette */.D.gray.light2, palette_dist_esm/* palette */.D.white, palette_dist_esm/* palette */.D.black, palette_dist_esm/* palette */.D.black)), lib_dist_esm/* Theme */.Q2.Dark, (0,dist_esm.css)(K || (K = L(["\\n    --background-color: ", ";\\n    --border-color: rgba(255, 255, 255, 0);\\n    --inner-shadow: 0px 0px 0px 1px ", " inset;\\n    --outer-shadow: 0px 0px 0px 0px rgba(255, 255, 255, 0);\\n    --hover-background-color: ", ";\\n    --indicator-background-color: ", ";\\n    --indicator-border-color: ", ";\\n  "])), palette_dist_esm/* palette */.D.gray.dark4, palette_dist_esm/* palette */.D.gray.dark1, palette_dist_esm/* palette */.D.gray.dark3, palette_dist_esm/* palette */.D.gray.light2, palette_dist_esm/* palette */.D.gray.light2)),\n  on = function on(n) {\n    var e = n.theme,\n      r = n.size;\n    return (0,dist_esm.cx)(en[void 0 === r ? "default" : r], rn[e], (0,dist_esm.css)(G || (G = L(["\\n      position: relative;\\n      display: grid;\\n      grid-auto-flow: column;\\n      grid-auto-columns: minmax(\\n        0,\\n        1fr\\n      ); // allows the grid tracks to be as small as 0 but as large as 1fr, creating columns that will stay equal\\n      gap: var(--segment-gap);\\n      align-items: center;\\n      padding: var(--wrapper-padding);\\n      border-radius: var(--outer-radius);\\n      background-color: var(--background-color);\\n\\n      &:focus {\\n        outline: none;\\n      }\\n\\n      // Frame shadow\\n      &:after {\\n        content: \'\';\\n        position: absolute;\\n        width: 100%;\\n        height: 100%;\\n        border-radius: inherit;\\n        box-shadow: var(--inner-shadow), var(--outer-shadow);\\n        z-index: 1;\\n        pointer-events: none;\\n      }\\n    "]))));\n  },\n  tn = (0,dist_esm.css)(R || (R = L(["\\n  position: absolute;\\n  width: 100%;\\n  height: var(--indicator-height);\\n  z-index: 2;\\n  border-radius: var(--indicator-radius);\\n  background-color: var(--indicator-background-color);\\n  transition: transform ", "ms ease-in-out;\\n"])), tokens_dist_esm/* transitionDuration */.nV["default"]),\n  an = (0,dist_esm.css)(U || (U = L(["\\n  position: absolute;\\n  height: var(--indicator-height);\\n  width: 100%;\\n  border-radius: var(--indicator-radius);\\n  background-color: var(--hover-background-color);\\n  z-index: 0;\\n  opacity: 0;\\n  transition: opacity 100ms ease-in-out;\\n"]))),\n  ln = ["children", "name", "size", "darkMode", "defaultValue", "value", "onChange", "className", "label", "followFocus", "aria-controls"],\n  cn = /*#__PURE__*/(0,index_js_.forwardRef)(function (o, l) {\n    var d,\n      s,\n      m = o.children,\n      b = o.name,\n      w = o.size,\n      k = void 0 === w ? B.Default : w,\n      C = o.darkMode,\n      z = o.defaultValue,\n      S = o.value,\n      E = o.onChange,\n      O = o.className,\n      N = o.label,\n      _ = o.followFocus,\n      j = void 0 === _ || _,\n      P = o["aria-controls"],\n      F = A(o, ln),\n      M = (0,leafygreen_provider_dist_esm/* useUsingKeyboardContext */.LB)().usingKeyboard,\n      H = (0,index_js_.useRef)(null),\n      T = I((0,index_js_.useState)(!1), 2),\n      V = T[0],\n      X = T[1],\n      q = (0,leafygreen_provider_dist_esm/* useDarkMode */.vs)(C).theme,\n      K = (0,hooks_dist_esm/* useDynamicRefs */.DK)({\n        prefix: "option"\n      }),\n      G = (0,hooks_dist_esm/* useIdAllocator */.ue)({\n        prefix: "segmented-control",\n        id: b\n      }),\n      R = (0,index_js_.useMemo)(function () {\n        return null != S;\n      }, [S]),\n      U = I((0,index_js_.useState)(null != z ? z : S), 2),\n      en = U[0],\n      rn = U[1],\n      cn = I((0,index_js_.useState)(null != z ? z : S), 2),\n      dn = cn[0],\n      sn = cn[1];\n    d = function d() {\n      var e = index_js_default().Children.toArray(m)[0];\n      !en && (0,lib_dist_esm/* isComponentType */.Kf)(e, "SegmentedControlOption") && (rn(e.props.value), sn(e.props.value));\n    }, s = (0,index_js_.useRef)(!1), (0,index_js_.useEffect)(function () {\n      s.current || (s.current = !0, d());\n    }, [d]);\n    var un = (0,index_js_.useCallback)(function () {\n      var n;\n      null !== (n = H.current) && void 0 !== n && n.contains(document.activeElement) ? X(!0) : X(!1);\n    }, []);\n    (0,index_js_.useEffect)(function () {\n      return document.addEventListener("focusin", un), function () {\n        document.removeEventListener("focusin", un);\n      };\n    }, [un]), (0,index_js_.useEffect)(function () {\n      R && rn(S);\n    }, [S, R]);\n    var pn = (0,index_js_.useCallback)(function (n) {\n        en !== n && (rn(n), null == E || E(n));\n      }, [en, E]),\n      fn = (0,index_js_.useMemo)(function () {\n        return index_js_default().Children.map(m, function (e, r) {\n          var o, t;\n          if (null == e) return e;\n          if (!(0,lib_dist_esm/* isComponentType */.Kf)(e, "SegmentedControlOption")) return Cn("Error in Segmented Control: ".concat(e, " is not a SegmentedControlOption")), e;\n          P || e.props["aria-controls"] || zn("The property `aria-controls` is required on each Segmented Control option, or on the Segmented Control parent.");\n          var a = null !== (o = e.props.id) && void 0 !== o ? o : "".concat(G, "-").concat(r),\n            i = R ? e.props.value === S || !!e.props.checked : e.props.value === en,\n            l = e.props.value === dn;\n          return /*#__PURE__*/index_js_default().cloneElement(e, {\n            _id: a,\n            _checked: i,\n            _focused: l,\n            _index: r,\n            "aria-controls": null !== (t = e.props["aria-controls"]) && void 0 !== t ? t : P,\n            _onClick: pn,\n            _onHover: function _onHover(n) {\n              mn(n ? r : null);\n            },\n            ref: K("".concat(r)),\n            isfocusInComponent: V\n          });\n        });\n      }, [m, R, S, en, dn, G, P, pn, K, V]),\n      gn = (0,index_js_.useMemo)(function () {\n        if (fn) {\n          var e,\n            r = null === (e = index_js_default().Children.map(fn, function (n) {\n              var e;\n              return null == n || null === (e = n.props) || void 0 === e ? void 0 : e._id;\n            })) || void 0 === e ? void 0 : e.join(" ");\n          return null != r ? r : "";\n        }\n        return "";\n      }, [fn]),\n      vn = I((0,index_js_.useState)(null), 2),\n      hn = vn[0],\n      mn = vn[1],\n      bn = (0,index_js_.useMemo)(function () {\n        return index_js_default().Children.toArray(fn).findIndex(function (n) {\n          return R ? n.props.value === S : n.props.value === en;\n        });\n      }, [S, R, fn, en]),\n      xn = (0,index_js_.useMemo)(function () {\n        return index_js_default().Children.toArray(fn).findIndex(function (n) {\n          return n.props.value === dn;\n        });\n      }, [fn, dn]),\n      yn = function yn(e) {\n        var r = index_js_default().Children.toArray(fn).filter(function (n) {\n            return !n.props.disabled;\n          }),\n          o = r.length,\n          t = r[e = e >= o ? e % o : e < 0 ? o + e : e].props.value;\n        sn(t);\n      };\n    (0,index_js_.useEffect)(function () {\n      M || sn(en);\n    }, [en, M]);\n    var wn = (0,index_js_.useCallback)(function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;\n        if (isNull_default()(e)) return (0,dist_esm.css)(Q || (Q = L(["\\n          width: 0;\\n        "])));\n        var r = 1 / index_js_default().Children.count(fn) * 100,\n          o = 100 * e;\n        return (0,dist_esm.css)(W || (W = L(["\\n        opacity: 1;\\n        width: calc(", "% - 2 * var(--wrapper-padding));\\n        transform: translateX(\\n          calc(", "% + ", " * var(--wrapper-padding))\\n        );\\n      "])), r, o, 2 * e + 1);\n      }, [fn]),\n      kn = k === $ ? B.XSmall : k;\n    return /*#__PURE__*/index_js_default().createElement(J.Provider, {\n      value: {\n        size: kn,\n        theme: q,\n        name: G,\n        followFocus: j\n      }\n    }, /*#__PURE__*/index_js_default().createElement("div", D({\n      ref: H,\n      className: (0,dist_esm.cx)(Y, O)\n    }, F), N && /*#__PURE__*/index_js_default().createElement(typography_dist_esm/* Overline */.Lh, {\n      className: (0,dist_esm.cx)(Z, nn[q])\n    }, N), /*#__PURE__*/index_js_default().createElement("div", {\n      role: "tablist",\n      "aria-label": G,\n      "aria-owns": gn,\n      className: (0,dist_esm.cx)(on({\n        theme: q,\n        size: kn\n      })),\n      ref: l,\n      onKeyDownCapture: function onKeyDownCapture(n) {\n        switch (n.stopPropagation(), n.key) {\n          case "ArrowRight":\n            yn(xn + 1);\n            break;\n          case "ArrowLeft":\n            yn(xn - 1);\n        }\n      }\n    }, fn, /*#__PURE__*/index_js_default().createElement("div", {\n      className: (0,dist_esm.cx)(tn, wn(bn))\n    }), /*#__PURE__*/index_js_default().createElement("div", {\n      className: (0,dist_esm.cx)(an, wn(hn))\n    }))));\n  });\ncn.displayName = "SegmentedControl";\nvar dn,\n  sn,\n  un,\n  pn,\n  fn,\n  gn,\n  vn,\n  hn,\n  mn,\n  bn,\n  xn,\n  yn,\n  wn,\n  kn,\n  Cn = once_default()(console.error),\n  zn = once_default()(console.warn);\ncn.propTypes =  false ? 0 : {};\nvar Sn = j(j({}, lib_dist_esm/* Theme */.Q2.Light, (0,dist_esm.css)(dn || (dn = L(["\\n    --base-text-color: ", ";\\n    --base-background-color: rgba(255, 255, 255, 0);\\n    --base-shadow-color: rgba(255, 255, 255, 0);\\n    // Hover\\n    --hover-text-color: ", ";\\n    // Selected\\n    --active-text-color: ", ";\\n    // Disabled\\n    --disabled-text-color: ", ";\\n    // Divider\\n    --divider-background-color: ", ";\\n  "])), palette_dist_esm/* palette */.D.gray.dark1, palette_dist_esm/* palette */.D.gray.dark3, palette_dist_esm/* palette */.D.white, palette_dist_esm/* palette */.D.gray.light1, palette_dist_esm/* palette */.D.gray.light1)), lib_dist_esm/* Theme */.Q2.Dark, (0,dist_esm.css)(sn || (sn = L(["\\n    --base-text-color: ", ";\\n    --base-background-color: rgba(255, 255, 255, 0);\\n    --base-shadow-color: rgba(255, 255, 255, 0);\\n    // Hover\\n    --hover-text-color: ", ";\\n    // Selected\\n    --active-text-color: ", ";\\n    // Disabled\\n    --disabled-text-color: ", ";\\n    // Divider\\n    --divider-background-color: ", ";\\n  "])), palette_dist_esm/* palette */.D.gray.light1, palette_dist_esm/* palette */.D.gray.light2, palette_dist_esm/* palette */.D.black, palette_dist_esm/* palette */.D.gray.dark2, palette_dist_esm/* palette */.D.gray.dark2)),\n  En = j(j(j({}, B.XSmall, (0,dist_esm.css)(un || (un = L(["\\n    --font-size: 12px;\\n    --line-height: 16px;\\n    --padding-inline: 12px;\\n    --text-transform: uppercase;\\n    --font-weight: ", ";\\n    --divider-height: 12px;\\n    --padding-block: 3px;\\n  "])), tokens_dist_esm/* fontWeights */.vC.bold)), B.Default, (0,dist_esm.css)(pn || (pn = L(["\\n    --font-size: 13px;\\n    --line-height: 24px;\\n    --padding-inline: 12px; // left/right\\n    --text-transform: none;\\n    --font-weight: ", ";\\n    --divider-height: 18px;\\n    --padding-block: 3px;\\n  "])), tokens_dist_esm/* fontWeights */.vC.medium)), B.Large, (0,dist_esm.css)(fn || (fn = L(["\\n    --font-size: 16px;\\n    --line-height: 28px;\\n    --padding-inline: 12px;\\n    --text-transform: none;\\n    --font-weight: ", ";\\n    --divider-height: 20px;\\n    --padding-block: 4px;\\n  "])), tokens_dist_esm/* fontWeights */.vC.medium)),\n  On = function On(n) {\n    var e = n.theme,\n      r = n.size,\n      o = void 0 === r ? "default" : r,\n      t = n.baseFontSize,\n      a = void 0 === t ? 14 : t;\n    return (0,dist_esm.cx)(Sn[e], En[o], (0,dist_esm.css)(gn || (gn = L(["\\n      position: relative;\\n      display: flex;\\n      width: 100%;\\n      align-items: center;\\n      justify-content: center;\\n      z-index: 3;\\n\\n      &:first-child,\\n      &[data-lg-checked=\'true\'],\\n      &[data-lg-checked=\'true\'] + [data-lg-checked=\'false\'],\\n      &:focus-within + :not(:focus-within) {\\n        --divider-background-color: transparent;\\n      }\\n\\n      /* \\n      * Adds the divider line to unselected segments \\n      */\\n      &:before {\\n        --divider-width: 1px;\\n        content: \'\';\\n        position: absolute;\\n        height: var(--divider-height);\\n        width: var(--divider-width);\\n        left: calc(0px - (var(--segment-gap) + var(--divider-width)) / 2);\\n        top: calc(\\n          (\\n              var(--line-height) + var(--padding-block) * 2 -\\n                var(--divider-height)\\n            ) / 2\\n        );\\n        transition: background-color ", "ms ease-in-out;\\n        background-color: var(--divider-background-color);\\n      }\\n    "])), tokens_dist_esm/* transitionDuration */.nV["default"]), j({}, (0,dist_esm.css)(vn || (vn = L(["\\n        --font-size: 16px;\\n      "]))), "default" === o && 16 === a));\n  },\n  Nn = (0,dist_esm.css)(hn || (hn = L(["\\n  width: 100%;\\n  height: 100%;\\n  text-decoration: none;\\n"]))),\n  _n = (0,dist_esm.css)(mn || (mn = L(["\\n  font-family: ", ";\\n  display: flex;\\n  position: relative;\\n  width: 100%;\\n  height: 100%;\\n  align-items: center;\\n  justify-content: center;\\n  padding: var(--padding-block) var(--padding-inline);\\n  background-color: var(--base-background-color);\\n  border-radius: var(--indicator-radius);\\n  text-align: center;\\n  font-size: var(--font-size);\\n  line-height: var(--line-height);\\n  text-transform: var(--text-transform, none);\\n  font-weight: var(--font-weight);\\n  color: var(--base-text-color);\\n  box-shadow: 0px 1px 2px var(--base-shadow-color);\\n  cursor: pointer;\\n  transition: ", "ms ease-in-out;\\n  transition-property: color, box-shadow;\\n  text-decoration: none;\\n  outline: none;\\n  border: none;\\n\\n  svg {\\n    transition: color ", "ms ease-in-out;\\n  }\\n\\n  &:hover {\\n    color: var(--hover-text-color);\\n  }\\n\\n  &[aria-selected=\'true\'] {\\n    color: var(--active-text-color);\\n  }\\n\\n  &:disabled {\\n    color: var(--disabled-text-color);\\n    cursor: not-allowed;\\n  }\\n\\n  &[aria-selected=\'false\']:not(:disabled):not(:hover) {\\n    svg {\\n      color: ", ";\\n    }\\n  }\\n"])), tokens_dist_esm/* fontFamilies */.Vl["default"], tokens_dist_esm/* transitionDuration */.nV["default"], tokens_dist_esm/* transitionDuration */.nV["default"], palette_dist_esm/* palette */.D.gray.base),\n  jn = (0,dist_esm.css)(bn || (bn = L(["\\n  &[aria-selected=\'false\']:not(:disabled):not(:hover) {\\n    svg {\\n      color: var(--base-text-color);\\n    }\\n  }\\n"]))),\n  Dn = j(j({}, lib_dist_esm/* Theme */.Q2.Light, (0,dist_esm.css)(xn || (xn = L(["\\n    &:focus {\\n      box-shadow: ", ";\\n    }\\n  "])), tokens_dist_esm/* focusRing */.kN.light["default"])), lib_dist_esm/* Theme */.Q2.Dark, (0,dist_esm.css)(yn || (yn = L(["\\n    &:focus {\\n      box-shadow: ", ";\\n    }\\n  "])), tokens_dist_esm/* focusRing */.kN.dark["default"])),\n  An = (0,dist_esm.css)(wn || (wn = L(["\\n  min-height: var(--line-height);\\n  gap: calc(var(--font-size) / 2);\\n  display: flex;\\n  align-items: center;\\n  min-width: 0;\\n\\n  svg {\\n    flex-shrink: 0;\\n  }\\n"]))),\n  In = (0,dist_esm.css)(kn || (kn = L(["\\n  overflow: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n"]))),\n  Ln = ["value", "children", "disabled", "as", "className", "aria-controls", "_id", "_checked", "_focused", "_index", "_onClick", "_onHover", "isfocusInComponent", "glyph"],\n  Pn = /*#__PURE__*/(0,index_js_.forwardRef)(function (o, t) {\n    var a,\n      i = o.value,\n      c = o.children,\n      d = o.disabled,\n      s = void 0 !== d && d,\n      u = o.as,\n      f = o.className,\n      g = o["aria-controls"],\n      h = o._id,\n      b = o._checked,\n      x = o._focused;\n    o._index;\n    var y = o._onClick,\n      w = o._onHover,\n      k = o.isfocusInComponent,\n      C = o.glyph,\n      z = A(o, Ln),\n      S = (0,index_js_.useContext)(J),\n      E = S.size,\n      _ = S.theme,\n      I = S.followFocus,\n      L = (0,leafygreen_provider_dist_esm/* useUsingKeyboardContext */.LB)().usingKeyboard,\n      P = (0,leafygreen_provider_dist_esm/* useBaseFontSize */.Zn)(),\n      F = (0,index_js_.useRef)(!1),\n      M = (0,index_js_.useRef)(null);\n    (0,index_js_.useEffect)(function () {\n      var n, e;\n      F.current && L && x && k && (null == M || null === (n = M.current) || void 0 === n || n.focus(), I && (null == M || null === (e = M.current) || void 0 === e || e.click()));\n      F.current = !0;\n    }, [x, I, L, k]), (0,index_js_.useEffect)(function () {\n      C && !(0,icon_dist_esm/* isComponentGlyph */.fx)(C) && console.warn("Please provide a LeafyGreen UI Icon or Glyph component.");\n    }, [C]);\n    var H = null !== (a = C && !c) && void 0 !== a && a;\n    return /*#__PURE__*/index_js_default().createElement("div", {\n      className: (0,dist_esm.cx)(On({\n        theme: _,\n        size: E,\n        baseFontSize: P\n      }), f),\n      ref: t,\n      "data-lg-checked": b\n    }, /*#__PURE__*/index_js_default().createElement(box_dist_esm/* default */.Z, D({\n      as: u,\n      tabIndex: -1,\n      className: Nn\n    }, z), /*#__PURE__*/index_js_default().createElement("button", {\n      role: "tab",\n      id: h,\n      tabIndex: x ? 0 : -1,\n      "aria-selected": b,\n      "aria-controls": g,\n      disabled: s,\n      className: (0,dist_esm.cx)(_n, j(j({}, Dn[_], L), jn, H)),\n      ref: M,\n      onClick: function onClick() {\n        null == y || y(i);\n      },\n      onMouseEnter: function onMouseEnter() {\n        null == w || w(!0);\n      },\n      onMouseLeave: function onMouseLeave() {\n        null == w || w(!1);\n      },\n      type: "button"\n    }, /*#__PURE__*/index_js_default().createElement("div", {\n      className: An\n    }, C && (0,icon_dist_esm/* isComponentGlyph */.fx)(C) && C, !H && /*#__PURE__*/index_js_default().createElement("span", {\n      className: In\n    }, c)))));\n  });\nPn.displayName = "SegmentedControlOption", Pn.propTypes =  false ? 0 : {};\n\n// EXTERNAL MODULE: ./packages/segmented-control/src/SegmentedControl/SegmentedControl.types.ts\nvar SegmentedControl_types = __webpack_require__("./packages/segmented-control/src/SegmentedControl/SegmentedControl.types.ts");\n;// CONCATENATED MODULE: ./packages/segmented-control/src/SegmentedControl.testutils.tsx\n\n\n\nvar TestChildren = {\n  Basic: [/*#__PURE__*/index_js_default().createElement(Pn, {\n    key: "dragonfruit",\n    value: "dragonfruit"\n  }, "Dragonfruit fruit"), /*#__PURE__*/index_js_default().createElement(Pn, {\n    key: "eggplant",\n    value: "eggplant"\n  }, "Eggplant banana"), /*#__PURE__*/index_js_default().createElement(Pn, {\n    key: "fig",\n    value: "fig"\n  }, "Fig"), /*#__PURE__*/index_js_default().createElement(Pn, {\n    key: "grape",\n    value: "grape",\n    disabled: true\n  }, "Grape")],\n  WithIcons: [/*#__PURE__*/index_js_default().createElement(Pn, {\n    key: "json",\n    value: "json",\n    glyph: /*#__PURE__*/index_js_default().createElement(icon_dist_esm/* default */.ZP, {\n      glyph: "CurlyBraces"\n    })\n  }, "JSON and more"), /*#__PURE__*/index_js_default().createElement(Pn, {\n    key: "xml",\n    value: "xml",\n    glyph: /*#__PURE__*/index_js_default().createElement(icon_dist_esm/* default */.ZP, {\n      glyph: "Code"\n    })\n  }, "XML"), /*#__PURE__*/index_js_default().createElement(Pn, {\n    disabled: true,\n    key: "shell",\n    value: "shell",\n    glyph: /*#__PURE__*/index_js_default().createElement(icon_dist_esm/* default */.ZP, {\n      glyph: "Shell"\n    })\n  }, "Shell")],\n  IconsOnly: [/*#__PURE__*/index_js_default().createElement(Pn, {\n    key: "cloud",\n    value: "cloud",\n    glyph: /*#__PURE__*/index_js_default().createElement(icon_dist_esm/* default */.ZP, {\n      glyph: "Cloud"\n    })\n  }), /*#__PURE__*/index_js_default().createElement(Pn, {\n    key: "globe",\n    value: "globe",\n    glyph: /*#__PURE__*/index_js_default().createElement(icon_dist_esm/* default */.ZP, {\n      glyph: "GlobeAmericas"\n    })\n  }), /*#__PURE__*/index_js_default().createElement(Pn, {\n    disabled: true,\n    key: "government",\n    value: "government",\n    glyph: /*#__PURE__*/index_js_default().createElement(icon_dist_esm/* default */.ZP, {\n      glyph: "GovernmentBuilding"\n    })\n  })]\n};\n;// CONCATENATED MODULE: ./packages/segmented-control/src/SegmentedControl.stories.tsx\n\n\n\n\n\n\n\nvar meta = {\n  title: \'Components/SegmentedControl\',\n  component: cn,\n  parameters: {\n    "default": \'LiveExample\',\n    controls: {\n      exclude: [].concat((0,toConsumableArray/* default */.Z)(esm/* storybookExcludedControlParams */.xZ), [\'children\', \'value\', \'defaultValue\'])\n    },\n    chromatic: {\n      delay: tokens_dist_esm/* transitionDuration */.nV["default"]\n    },\n    generate: {\n      combineArgs: {\n        darkMode: [false, true],\n        children: [TestChildren.Basic, TestChildren.WithIcons, TestChildren.IconsOnly],\n        size: Object.values(SegmentedControl_types/* Size */.$),\n        label: [undefined, \'Select\']\n      }\n    }\n  },\n  args: {\n    label: \'Fruit\',\n    name: \'fruit\',\n    childrenOptions: \'Basic\'\n  },\n  argTypes: {\n    childrenOptions: {\n      control: \'select\',\n      options: Object.keys(TestChildren),\n      description: \'LiveExample toggle for children\'\n    },\n    label: {\n      control: \'text\'\n    },\n    name: {\n      control: \'text\'\n    },\n    defaultValue: {\n      control: \'text\'\n    },\n    value: {\n      control: \'text\'\n    },\n    followFocus: {\n      control: \'boolean\'\n    },\n    \'aria-controls\': {\n      control: \'text\'\n    },\n    size: {\n      control: \'select\',\n      options: Object.values(SegmentedControl_types/* Size */.$)\n    },\n    darkMode: esm/* storybookArgTypes */.bN.darkMode,\n    baseFontSize: esm/* storybookArgTypes */.bN.updatedBaseFontSize\n  }\n};\n/* harmony default export */ const SegmentedControl_stories = (meta);\nvar LiveExample = function LiveExample(args) {\n  return /*#__PURE__*/index_js_default().createElement(cn, args, TestChildren[args.childrenOptions]);\n};\nLiveExample.parameters = {\n  chromatic: {\n    disableSnapshot: true\n  }\n};\nvar Generated = function Generated() {\n  return /*#__PURE__*/index_js_default().createElement((index_js_default()).Fragment, null);\n};\nLiveExample.parameters = {\n  ...LiveExample.parameters,\n  docs: {\n    ...LiveExample.parameters?.docs,\n    source: {\n      originalSource: "(args: SegmentedControlProps & LiveExampleProps) => <SegmentedControl {...args}>\\n    {TestChildren[args.childrenOptions]}\\n  </SegmentedControl>",\n      ...LiveExample.parameters?.docs?.source\n    }\n  }\n};\nGenerated.parameters = {\n  ...Generated.parameters,\n  docs: {\n    ...Generated.parameters?.docs,\n    source: {\n      originalSource: "() => <></>",\n      ...Generated.parameters?.docs?.source\n    }\n  }\n};;const __namedExportsOrder = ["LiveExample","Generated"];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/segmented-control/src/SegmentedControl.stories.tsx\n')},"./packages/box/dist/esm/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (/* binding */ l)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("webpack/sharing/consume/default/react/react");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/prop-types/index.js");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);\n\n\nfunction n() {\n  return n = Object.assign ? Object.assign.bind() : function (e) {\n    for (var r = 1; r < arguments.length; r++) {\n      var n = arguments[r];\n      for (var t in n) ({}).hasOwnProperty.call(n, t) && (e[t] = n[t]);\n    }\n    return e;\n  }, n.apply(null, arguments);\n}\nvar t = ["as"];\nfunction a(r, a) {\n  if (null != r.as) {\n    var l = r.as,\n      f = function (e, r) {\n        if (null == e) return {};\n        var n,\n          t,\n          a = function (e, r) {\n            if (null == e) return {};\n            var n = {};\n            for (var t in e) if ({}.hasOwnProperty.call(e, t)) {\n              if (r.indexOf(t) >= 0) continue;\n              n[t] = e[t];\n            }\n            return n;\n          }(e, r);\n        if (Object.getOwnPropertySymbols) {\n          var l = Object.getOwnPropertySymbols(e);\n          for (t = 0; t < l.length; t++) n = l[t], r.indexOf(n) >= 0 || {}.propertyIsEnumerable.call(e, n) && (a[n] = e[n]);\n        }\n        return a;\n      }(r, t);\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(l, n({}, f, {\n      ref: a\n    }));\n  }\n  return null != r.href ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("a", n({}, r, {\n    ref: a\n  })) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", n({}, r, {\n    ref: a\n  }));\n}\na.displayName = "InlineBox";\nvar l = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().forwardRef(a);\nl.displayName = "Box", l.propTypes = {\n  as: prop_types__WEBPACK_IMPORTED_MODULE_1___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_1___default().elementType), (prop_types__WEBPACK_IMPORTED_MODULE_1___default().element), (prop_types__WEBPACK_IMPORTED_MODULE_1___default().func)]),\n  href: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().string)\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9ib3gvZGlzdC9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsSUFBSUEsQ0FBQSxHQUFZLENBQUM7QUFNakIsU0FBU0MsRUFBVUMsQ0FBQSxFQUFPRCxDQUFBO0VBQ3hCLElBQWdCLFFBQVpDLENBQUEsQ0FBTUMsRUFBQSxFQUFZO0lBQ3BCLElBQUlDLENBQUEsR0FBWUYsQ0FBQSxDQUFNQyxFQUFBO01BQ3BCRSxDQUFBLGFBQUFDLENBQUEsRUFBQUosQ0FBQTtRQUFBLFlBQUFJLENBQUE7UUFBQSxJQUFBQyxDQUFBO1VBQUFQLENBQUE7VUFBQUMsQ0FBQSxhQUFBSyxDQUFBLEVBQUFKLENBQUE7WUFBQSxZQUFBSSxDQUFBO1lBQUEsSUFBQUMsQ0FBQTtZQUFBLFNBQUFQLENBQUEsSUFBQU0sQ0FBQSxTQUFBRSxjQUFBLENBQUFDLElBQUEsQ0FBQUgsQ0FBQSxFQUFBTixDQUFBO2NBQUEsSUFBQUUsQ0FBQSxDQUFBUSxPQUFBLENBQUFWLENBQUE7Y0FBQU8sQ0FBQSxDQUFBUCxDQUFBLElBQUFNLENBQUEsQ0FBQU4sQ0FBQTtZQUFBO1lBQUEsT0FBQU8sQ0FBQTtVQUFBLEVBQUFELENBQUEsRUFBQUosQ0FBQTtRQUFBLElBQUFTLE1BQUEsQ0FBQUMscUJBQUE7VUFBQSxJQUFBUixDQUFBLEdBQUFPLE1BQUEsQ0FBQUMscUJBQUEsQ0FBQU4sQ0FBQTtVQUFBLEtBQUFOLENBQUEsTUFBQUEsQ0FBQSxHQUFBSSxDQUFBLENBQUFTLE1BQUEsRUFBQWIsQ0FBQSxJQUFBTyxDQUFBLEdBQUFILENBQUEsQ0FBQUosQ0FBQSxHQUFBRSxDQUFBLENBQUFRLE9BQUEsQ0FBQUgsQ0FBQSxhQUFBTyxvQkFBQSxDQUFBTCxJQUFBLENBQUFILENBQUEsRUFBQUMsQ0FBQSxNQUFBTixDQUFBLENBQUFNLENBQUEsSUFBQUQsQ0FBQSxDQUFBQyxDQUFBO1FBQUE7UUFBQSxPQUFBTixDQUFBO01BQUEsQ0FBTyxDQUF5QkMsQ0FBQSxFQUFPRixDQUFBO0lBRXpDLG9CQUFvQk0sMERBQU0sQ0FBY0YsQ0FBQSxFQUFXRyxDQUFBLENBQVMsSUFBSUYsQ0FBQSxFQUFNO01BQ3BFVyxHQUFBLEVBQUtmO0lBQUEsR0FFUjtFQUFBO0VBQ0QsT0FBa0IsUUFBZEMsQ0FBQSxDQUFNZSxJQUFBLGdCQUNZWCwwREFBTSxDQUFjLEtBQUtDLENBQUEsQ0FBUyxJQUFJTCxDQUFBLEVBQU87SUFDL0RjLEdBQUEsRUFBS2Y7RUFBQSxtQkFHV0ssMERBQU0sQ0FBYyxPQUFPQyxDQUFBLENBQVMsSUFBSUwsQ0FBQSxFQUFPO0lBQ2pFYyxHQUFBLEVBQUtmO0VBQUEsR0FFVDtBQUFBO0FBQ0FBLENBQUEsQ0FBVWlCLFdBQUEsR0FBYztBQVFyQixJQUFDZCxDQUFBLGdCQUFtQkUsdURBQU0sQ0FBV0wsQ0FBQTtBQUN4Q0csQ0FBQSxDQUFJYyxXQUFBLEdBQWMsT0FHbEJkLENBQUEsQ0FBSWdCLFNBQUEsR0FBWTtFQUNkakIsRUFBQSxFQUFJRCwyREFBVSxDQUFVLENBQUNBLCtEQUFVLEVBQWFBLDJEQUFVLEVBQVNBLHdEQUFVO0VBQzdFZSxJQUFBLEVBQU1mLDBEQUFVdUI7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlYWZ5Z3JlZW4tdWkvLi4vLi4vc3JjL0JveC50c3g/ZjNhZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcblxudHlwZSBPdmVycmlkZTxULCBVPiA9IE9taXQ8VCwga2V5b2YgVT4gJiBVO1xudHlwZSBPdmVycmlkZTI8VCwgVSwgVj4gPSBPdmVycmlkZTxPdmVycmlkZTxULCBVPiwgVj47XG5cbnR5cGUgQm94RGVmYXVsdDxcbiAgRGVmYXVsdCBleHRlbmRzIFJlYWN0LkVsZW1lbnRUeXBlID0gJ2RpdicsXG4gIEV4dHJhUHJvcHMgPSB7fSxcbj4gPSBPdmVycmlkZTI8XG4gIFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aFJlZjxEZWZhdWx0PixcbiAge1xuICAgIGFzPzogbmV2ZXI7XG4gICAgaHJlZj86IG5ldmVyO1xuICB9LFxuICBFeHRyYVByb3BzXG4+O1xuXG50eXBlIEJveEFuY2hvckRlZmF1bHQ8RXh0cmFQcm9wcyA9IHt9PiA9IE92ZXJyaWRlMjxcbiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRoUmVmPCdhJz4sXG4gIHtcbiAgICBhcz86IG5ldmVyO1xuICAgIGhyZWY6IHN0cmluZztcbiAgfSxcbiAgRXh0cmFQcm9wc1xuPjtcblxudHlwZSBCb3hJbnRyaW5zaWM8XG4gIFRFbGVtZW50IGV4dGVuZHMga2V5b2YgSlNYLkludHJpbnNpY0VsZW1lbnRzID0ga2V5b2YgSlNYLkludHJpbnNpY0VsZW1lbnRzLFxuICBFeHRyYVByb3BzID0ge30sXG4+ID0gT3ZlcnJpZGUyPFxuICBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhSZWY8VEVsZW1lbnQ+LFxuICB7XG4gICAgLyoqXG4gICAgICogVGhlIGNvbXBvbmVudCBvciBIVE1MIEVsZW1lbnQgdGhhdCB0aGUgYnV0dG9uIGlzIHJlbmRlcmVkIGFzLlxuICAgICAqXG4gICAgICogQHR5cGUgSFRNTCBFbGVtZW50IHwgUmVhY3QuQ29tcG9uZW50XG4gICAgICovXG4gICAgYXM6IFRFbGVtZW50O1xuICB9LFxuICBFeHRyYVByb3BzXG4+O1xuXG50eXBlIEJveENvbXBvbmVudDxUUHJvcHMgPSB7fSwgRXh0cmFQcm9wcyA9IHt9PiA9IE92ZXJyaWRlMjxcbiAgUmVhY3QuUHJvcHNXaXRoUmVmPFRQcm9wcz4sXG4gIHtcbiAgICAvKipcbiAgICAgKiBUaGUgY29tcG9uZW50IG9yIEhUTUwgRWxlbWVudCB0aGF0IHRoZSBidXR0b24gaXMgcmVuZGVyZWQgYXMuXG4gICAgICovXG4gICAgYXM6IFJlYWN0LkNvbXBvbmVudFR5cGU8UmVhY3QuUHJvcHNXaXRoQ2hpbGRyZW48VFByb3BzPj47XG4gIH0sXG4gIEV4dHJhUHJvcHNcbj47XG5cbi8vIFRPRE86IFRTRG9jXG5leHBvcnQgdHlwZSBCb3hQcm9wczxcbiAgRGVmYXVsdCBleHRlbmRzIFJlYWN0LkVsZW1lbnRUeXBlID0gJ2RpdicsXG4gIEV4dHJhUHJvcHMgPSB7fSxcbj4gPVxuICB8IEJveEFuY2hvckRlZmF1bHQ8RXh0cmFQcm9wcz5cbiAgfCBCb3hJbnRyaW5zaWM8a2V5b2YgSlNYLkludHJpbnNpY0VsZW1lbnRzLCBFeHRyYVByb3BzPlxuICB8IEJveENvbXBvbmVudDx7fSwgRXh0cmFQcm9wcz5cbiAgfCBCb3hEZWZhdWx0PERlZmF1bHQsIEV4dHJhUHJvcHM+O1xuXG5mdW5jdGlvbiBJbmxpbmVCb3gocHJvcHM6IEJveERlZmF1bHQsIHJlZjogUmVhY3QuUmVmPGFueT4pOiBKU1guRWxlbWVudDtcbmZ1bmN0aW9uIElubGluZUJveChwcm9wczogQm94QW5jaG9yRGVmYXVsdCwgcmVmOiBSZWFjdC5SZWY8YW55Pik6IEpTWC5FbGVtZW50O1xuZnVuY3Rpb24gSW5saW5lQm94PFRFbGVtZW50IGV4dGVuZHMga2V5b2YgSlNYLkludHJpbnNpY0VsZW1lbnRzPihcbiAgcHJvcHM6IEJveEludHJpbnNpYzxURWxlbWVudD4sXG4gIHJlZjogUmVhY3QuUmVmPGFueT4sXG4pOiBKU1guRWxlbWVudDtcbmZ1bmN0aW9uIElubGluZUJveDxUUHJvcHM+KFxuICBwcm9wczogQm94Q29tcG9uZW50PFRQcm9wcz4sXG4gIHJlZjogUmVhY3QuUmVmPGFueT4sXG4pOiBKU1guRWxlbWVudDtcblxuZnVuY3Rpb24gSW5saW5lQm94KHByb3BzOiBCb3hQcm9wcywgcmVmOiBSZWFjdC5SZWY8YW55Pikge1xuICBpZiAocHJvcHMuYXMgIT0gbnVsbCkge1xuICAgIGNvbnN0IHsgYXM6IENvbXBvbmVudCwgLi4ucmVzdCB9ID0gcHJvcHM7XG4gICAgLy8gQHRzLWV4cGVjdC1lcnJvclxuICAgIHJldHVybiA8Q29tcG9uZW50IHsuLi5yZXN0fSByZWY9e3JlZn0gLz47XG4gIH1cblxuICBpZiAocHJvcHMuaHJlZiAhPSBudWxsKSB7XG4gICAgcmV0dXJuIDxhIHsuLi5wcm9wc30gcmVmPXtyZWZ9IC8+OyAvL2VzbGludC1kaXNhYmxlLWxpbmUganN4LWExMXkvYW5jaG9yLWhhcy1jb250ZW50XG4gIH1cblxuICByZXR1cm4gPGRpdiB7Li4ucHJvcHN9IHJlZj17cmVmfSAvPjtcbn1cblxuSW5saW5lQm94LmRpc3BsYXlOYW1lID0gJ0lubGluZUJveCc7XG5cbi8qKlxuICogVGhlIEJveCBjb21wb25lbnQgaGFuZGxlcyB0aGUgYGFzYCBwcm9wLCBhbGxvd2luZyB0aGUgY29tcG9uZW50IHRvIGJlIHJlbmRlcmVkIHVzaW5nIGFsdGVybmF0ZSBIVE1MIGVsZW1lbnRzLlxuICpcbiAqIEl0IGFsc28gZGVmYXVsdHMgdG8gYW4gYDxhPmAgdGFnIHdoZW4gYSBgaHJlZmAgcHJvcCBpcyBzZXQuXG4gKi9cbi8vIEB0cy1leHBlY3QtZXJyb3JcbmNvbnN0IEJveCA9IFJlYWN0LmZvcndhcmRSZWYoSW5saW5lQm94KSBhcyB0eXBlb2YgSW5saW5lQm94O1xuXG5Cb3guZGlzcGxheU5hbWUgPSAnQm94JztcblxuLy8gQHRzLWV4cGVjdC1lcnJvclxuQm94LnByb3BUeXBlcyA9IHtcbiAgYXM6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1xuICAgIFByb3BUeXBlcy5lbGVtZW50VHlwZSxcbiAgICBQcm9wVHlwZXMuZWxlbWVudCxcbiAgICBQcm9wVHlwZXMuZnVuYyxcbiAgXSksXG4gIGhyZWY6IFByb3BUeXBlcy5zdHJpbmcsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBCb3g7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRXh0ZW5kYWJsZUJveDxcbiAgRXh0cmFQcm9wcyxcbiAgRGVmYXVsdCBleHRlbmRzIFJlYWN0LkVsZW1lbnRUeXBlID0gJ2RpdicsXG4+IGV4dGVuZHMgUGljazxcbiAgICBSZWFjdC5GdW5jdGlvbkNvbXBvbmVudDxcbiAgICAgIFJlYWN0LlByb3BzV2l0aENoaWxkcmVuPEJveFByb3BzPERlZmF1bHQsIEV4dHJhUHJvcHM+PlxuICAgID4sXG4gICAgJ2Rpc3BsYXlOYW1lJyB8ICdwcm9wVHlwZXMnXG4gID4ge1xuICA8VEVsZW1lbnQgZXh0ZW5kcyBrZXlvZiBKU1guSW50cmluc2ljRWxlbWVudHM+KFxuICAgIHByb3BzOiBCb3hJbnRyaW5zaWM8VEVsZW1lbnQsIEV4dHJhUHJvcHM+LFxuICApOiBKU1guRWxlbWVudCB8IG51bGw7XG4gIChwcm9wczogQm94QW5jaG9yRGVmYXVsdDxFeHRyYVByb3BzPik6IEpTWC5FbGVtZW50IHwgbnVsbDtcbiAgKHByb3BzOiBCb3hEZWZhdWx0PERlZmF1bHQsIEV4dHJhUHJvcHM+KTogSlNYLkVsZW1lbnQgfCBudWxsO1xuICA8VFByb3BzPihwcm9wczogQm94Q29tcG9uZW50PFRQcm9wcywgRXh0cmFQcm9wcz4pOiBKU1guRWxlbWVudCB8IG51bGw7XG59XG4iXSwibmFtZXMiOlsidCIsImEiLCJyIiwiYXMiLCJsIiwiZiIsImUiLCJuIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiaW5kZXhPZiIsIk9iamVjdCIsImdldE93blByb3BlcnR5U3ltYm9scyIsImxlbmd0aCIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwiY3JlYXRlRWxlbWVudCIsInJlZiIsImhyZWYiLCJkaXNwbGF5TmFtZSIsImZvcndhcmRSZWYiLCJwcm9wVHlwZXMiLCJvbmVPZlR5cGUiLCJlbGVtZW50VHlwZSIsImVsZW1lbnQiLCJmdW5jIiwic3RyaW5nIiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./packages/box/dist/esm/index.js\n')},"./packages/segmented-control/src/SegmentedControl/SegmentedControl.types.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   $: () => (/* binding */ Size)\n/* harmony export */ });\n/* unused harmony export DeprecatedSize */\nvar DeprecatedSize = {\n  /** @deprecated */\n  Small: 'small'\n};\nvar Size = {\n  XSmall: 'xsmall',\n  Default: 'default',\n  Large: 'large'\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9zZWdtZW50ZWQtY29udHJvbC9zcmMvU2VnbWVudGVkQ29udHJvbC9TZWdtZW50ZWRDb250cm9sLnR5cGVzLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFJTyxJQUFNQSxjQUFjLEdBQUc7RUFDNUI7RUFDQUMsS0FBSyxFQUFFO0FBQ1QsQ0FBVTtBQUtILElBQU1DLElBQUksR0FBRztFQUNsQkMsTUFBTSxFQUFFLFFBQVE7RUFDaEJDLE9BQU8sRUFBRSxTQUFTO0VBQ2xCQyxLQUFLLEVBQUU7QUFDVCxDQUFVIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVhZnlncmVlbi11aS8uL3BhY2thZ2VzL3NlZ21lbnRlZC1jb250cm9sL3NyYy9TZWdtZW50ZWRDb250cm9sL1NlZ21lbnRlZENvbnRyb2wudHlwZXMudHM/MTA4MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgeyBIVE1MRWxlbWVudFByb3BzIH0gZnJvbSAnQGxlYWZ5Z3JlZW4tdWkvbGliJztcblxuZXhwb3J0IGNvbnN0IERlcHJlY2F0ZWRTaXplID0ge1xuICAvKiogQGRlcHJlY2F0ZWQgKi9cbiAgU21hbGw6ICdzbWFsbCcsXG59IGFzIGNvbnN0O1xuXG5leHBvcnQgdHlwZSBEZXByZWNhdGVkU2l6ZSA9XG4gICh0eXBlb2YgRGVwcmVjYXRlZFNpemUpW2tleW9mIHR5cGVvZiBEZXByZWNhdGVkU2l6ZV07XG5cbmV4cG9ydCBjb25zdCBTaXplID0ge1xuICBYU21hbGw6ICd4c21hbGwnLFxuICBEZWZhdWx0OiAnZGVmYXVsdCcsXG4gIExhcmdlOiAnbGFyZ2UnLFxufSBhcyBjb25zdDtcblxuZXhwb3J0IHR5cGUgU2l6ZSA9ICh0eXBlb2YgU2l6ZSlba2V5b2YgdHlwZW9mIFNpemVdO1xuXG5leHBvcnQgaW50ZXJmYWNlIFNlZ21lbnRlZENvbnRyb2xQcm9wc1xuICBleHRlbmRzIE9taXQ8SFRNTEVsZW1lbnRQcm9wczwnZGl2Jz4sICdvbkNoYW5nZSc+IHtcbiAgLyoqXG4gICAqIE9wdGlvbnMgcHJvdmlkZWQgaW4gdGhlIHNlZ21lbnRlZCBjb250cm9sXG4gICAqXG4gICAqIEB0eXBlIGA8U2VnbWVudGVkQ29udHJvbE9wdGlvbiAvPmBcbiAgICovXG4gIGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGU7XG5cbiAgLyoqXG4gICAqIERlZmluZXMgdGhlIHNpemUgb2YgdGhlIHNlZ21lbnRlZCBjb250cm9sLiBDYW4gYmUgZWl0aGVyIGB4c21hbGxgLCBgZGVmYXVsdGAsIG9yIGBsYXJnZWBcbiAgICovXG4gIHNpemU/OiBTaXplIHwgRGVwcmVjYXRlZFNpemU7XG5cbiAgLyoqXG4gICAqIFRvZ2dsZXMgZGFyayBtb2RlXG4gICAqL1xuICBkYXJrTW9kZT86IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIERlZmluZXMgdGhlIGRlZmF1bHQsIG9yIGluaXRpYWwgdmFsdWUgb2YgdGhlIGNvbXBvbmVudC4gSWdub3JlZCBpZiBgdmFsdWVgIGlzIGFsc28gcHJvdmlkZWQuXG4gICAqL1xuICBkZWZhdWx0VmFsdWU/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIENvbnRyb2xzIHRoZSB2YWx1ZSBvZiB0aGUgY29tcG9uZW50LlxuICAgKiBJZiBwcm92aWRlZCwgeW91IG11c3QgdXBkYXRlIHRoZSB2YWx1ZSBpbiB0aGUgYG9uQ2hhbmdlYCBtZXRob2QsXG4gICAqIG9yIG90aGVyIHVzZXIgYWN0aW9ucyAoc3VjaCBhcyByb3V0aW5nKVxuICAgKi9cbiAgdmFsdWU/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIEEgdGV4dCBsYWJlbCB0byB0aGUgbGVmdCBvZiB0aGUgc2VnbWVudGVkIGNvbnRyb2wuIFNldHMgdGhlIGBuYW1lYCBwcm9wIGlmIG5vbmUgaXMgcHJvdmlkZWQuXG4gICAqL1xuICBsYWJlbD86IFJlYWN0LlJlYWN0Tm9kZTtcblxuICAvKipcbiAgICogSWRlbnRpZmllcyB0aGUgc2VnbWVudGVkIGNvbnRyb2wgZ3JvdXAgdG8gc2NyZWVuIHJlYWRlcnMuIEF1dG8tZ2VuZXJhdGVkIGlmIG5vIGBuYW1lYCBvciBgbGFiZWxgIGlzIHByb3ZpZGVkLlxuICAgKlxuICAgKiBJdCdzIHJlY29tbWVuZGVkIGZvciBhY2Nlc3NhYmlsaXR5IHRvIHNldCB0aGlzIHRvIGEgbWVhbmluZ2Z1bCB2YWx1ZS5cbiAgICovXG4gIG5hbWU/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIERlZmluZXMgd2hldGhlciB0aGUgc2VsZWN0aW9uIHNob3VsZCBhdXRvbWF0aWNhbGx5IGZvbGxvdyBmb2N1cy5cbiAgICogSWYgc2V0IHRvIHRydWUsIHRoZSBhcnJvdyBrZXlzIGNhbiBiZSB1c2VkIHRvIHN3aXRjaCBzZWxlY3Rpb24sXG4gICAqIG90aGVyd2lzZSBhIGtleWJvYXJkIHVzZXIgd2lsbCBuZWVkIHRvIHByZXNzIGVudGVyIHRvIG1ha2UgYSBzZWxlY3Rpb24uXG4gICAqXG4gICAqIERlZmF1bHQ6IGB0cnVlYFxuICAgKi9cbiAgZm9sbG93Rm9jdXM/OiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBJZGVudGlmaWVzIHRoZSBlbGVtZW50KHMpIHdob3NlIGNvbnRlbnRzL3ByZXNlbmNlIGlzIGNvbnRyb2xsZWQgYnkgdGhlIHNlZ21lbnRlZCBjb250cm9sLlxuICAgKlxuICAgKiBSZXF1aXJlZCBhcyBhIHByb3Agb24gdGhlIGNvbnRyb2wsIG9yIG9uIGVhY2ggaW5kaXZpZHVhbCBvcHRpb24uXG4gICAqL1xuICAnYXJpYS1jb250cm9scyc/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIENhbGxiYWNrIHRoYXQgZ2V0cyBjYWxsZWQgd2hlbiBhIHVzZXIgbWFrZXMgYSBuZXcgc2VsZWN0aW9uLlxuICAgKi9cbiAgb25DaGFuZ2U/OiAodmFsdWU6IHN0cmluZykgPT4gdm9pZDtcbn1cbiJdLCJuYW1lcyI6WyJEZXByZWNhdGVkU2l6ZSIsIlNtYWxsIiwiU2l6ZSIsIlhTbWFsbCIsIkRlZmF1bHQiLCJMYXJnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./packages/segmented-control/src/SegmentedControl/SegmentedControl.types.ts\n")},"./tools/storybook-utils/dist/esm/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bN: () => (/* binding */ n),\n/* harmony export */   xZ: () => (/* binding */ r)\n/* harmony export */ });\n/* unused harmony exports IntrinsicElements, StoryMeta, storybookExcludedArgTypes */\n/* harmony import */ var lodash_mergeWith__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/lodash/mergeWith.js");\n/* harmony import */ var lodash_mergeWith__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_mergeWith__WEBPACK_IMPORTED_MODULE_0__);\n\nvar e = ["small", "button", "a", "abbr", "address", "article", "aside", "b", "big", "blockquote", "caption", "cite", "code", "dd", "del", "details", "dfn", "dialog", "div", "em", "fieldset", "figcaption", "figure", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "i", "ins", "kbd", "keygen", "label", "legend", "li", "main", "map", "mark", "menu", "menuitem", "meter", "nav", "noscript", "ol", "p", "picture", "pre", "progress", "q", "rp", "rt", "ruby", "s", "samp", "slot", "script", "section", "select", "span", "strong", "style", "sub", "summary", "sup", "template", "tbody", "td", "tfoot", "th", "thead", "time", "title", "tr", "u", "ul"],\n  n = {\n    baseFontSize: {\n      description: "The base font size passed to the LeafyGreenProvider that wraps the component",\n      control: {\n        type: "radio"\n      },\n      options: [14, 16]\n    },\n    updatedBaseFontSize: {\n      description: "The base font size passed to the LeafyGreenProvider that wraps the component. Uses the updated font size values for Euclid Circular A.",\n      control: {\n        type: "radio"\n      },\n      options: [13, 16]\n    },\n    darkMode: {\n      description: "Render the component in dark mode.",\n      control: "boolean"\n    },\n    children: {\n      description: "Element rendered inside the component",\n      control: "text"\n    },\n    as: {\n      description: "The component will be rendered in HTML as the element selected here",\n      options: e,\n      type: {\n        name: "string"\n      },\n      control: {\n        type: "select"\n      },\n      defaultValue: "button"\n    }\n  },\n  t = {\n    "aria-controls": {\n      control: "none"\n    },\n    "aria-describedby": {\n      control: "none"\n    },\n    "aria-label": {\n      control: "none"\n    },\n    "aria-labelledby": {\n      control: "none"\n    },\n    "data-lgid": {\n      control: "none"\n    },\n    className: {\n      control: "none"\n    },\n    id: {\n      control: "none"\n    },\n    onBlur: {\n      control: "none"\n    },\n    onCancel: {\n      control: "none"\n    },\n    onChange: {\n      control: "none"\n    },\n    onClear: {\n      control: "none"\n    },\n    onClick: {\n      control: "none"\n    },\n    onClose: {\n      control: "none"\n    },\n    onConfirm: {\n      control: "none"\n    },\n    onDismiss: {\n      control: "none"\n    },\n    onFilter: {\n      control: "none"\n    },\n    onSubmit: {\n      control: "none"\n    },\n    portalClassName: {\n      control: "none"\n    },\n    portalContainer: {\n      control: "none"\n    },\n    popoverZIndex: {\n      control: "none"\n    },\n    ref: {\n      control: "none"\n    },\n    scrollContainer: {\n      control: "none"\n    },\n    usePortal: {\n      control: "none"\n    }\n  },\n  r = ["aria-controls", "aria-describedby", "aria-label", "aria-labelledby", "aria-describedby", "className", "data-lgid", "id", "onBlur", "onCancel", "onChange", "onClear", "onClick", "onConfirm", "onDismiss", "onFilter", "popoverZIndex", "portalClassName", "portalContainer", "ref", "setOpen", "scrollContainer", "usePortal"],\n  a = function a() {\n    return o(arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, {}, function (o, e) {\n      return Array.isArray(o) ? o.concat(e) : "string" == typeof o ? o : void 0;\n    });\n  };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./tools/storybook-utils/dist/esm/index.js\n')}}]);