"use strict";(self.webpackChunkleafygreen_ui=self.webpackChunkleafygreen_ui||[]).push([[1281],{"./packages/number-input/src/NumberInput/NumberInput.types.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   $u: () => (/* binding */ Size),\n/* harmony export */   Nm: () => (/* binding */ Direction),\n/* harmony export */   ZM: () => (/* binding */ State)\n/* harmony export */ });\n/* harmony import */ var _leafygreen_ui_form_field__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./packages/form-field/dist/esm/index.js\");\n\nvar Direction = {\n  Increment: 'increment',\n  Decrement: 'decrement'\n};\nvar State = _leafygreen_ui_form_field__WEBPACK_IMPORTED_MODULE_0__/* .FormFieldState */ .nY;\nvar Size = {\n  XSmall: 'xsmall',\n  Small: 'small',\n  Default: 'default',\n  Large: 'large'\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9udW1iZXItaW5wdXQvc3JjL051bWJlcklucHV0L051bWJlcklucHV0LnR5cGVzLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQU8yRDtBQUtwRCxJQUFNQyxTQUFTLEdBQUc7RUFDdkJDLFNBQVMsRUFBRSxXQUFXO0VBQ3RCQyxTQUFTLEVBQUU7QUFDYixDQUFVO0FBSUgsSUFBTUMsS0FBSyxHQUFHSiwrRUFBYztBQUk1QixJQUFNSyxJQUFJLEdBQUc7RUFDbEJDLE1BQU0sRUFBRSxRQUFRO0VBQ2hCQyxLQUFLLEVBQUUsT0FBTztFQUNkQyxPQUFPLEVBQUUsU0FBUztFQUNsQkMsS0FBSyxFQUFFO0FBQ1QsQ0FBVSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlYWZ5Z3JlZW4tdWkvLi9wYWNrYWdlcy9udW1iZXItaW5wdXQvc3JjL051bWJlcklucHV0L051bWJlcklucHV0LnR5cGVzLnRzPzkyYzQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ2hhbmdlRXZlbnRIYW5kbGVyLFxuICBDb21wb25lbnRQcm9wc1dpdGhvdXRSZWYsXG4gIEZvY3VzRXZlbnRIYW5kbGVyLFxufSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7IEFyaWFMYWJlbFByb3BzV2l0aExhYmVsIH0gZnJvbSAnQGxlYWZ5Z3JlZW4tdWkvYTExeSc7XG5pbXBvcnQgeyBGb3JtRmllbGRTdGF0ZSB9IGZyb20gJ0BsZWFmeWdyZWVuLXVpL2Zvcm0tZmllbGQnO1xuaW1wb3J0IHsgRGFya01vZGVQcm9wcyB9IGZyb20gJ0BsZWFmeWdyZWVuLXVpL2xpYic7XG5cbmltcG9ydCB7IFBvcG92ZXJQcm9wcyB9IGZyb20gJy4uL1VuaXRTZWxlY3QvVW5pdFNlbGVjdC50eXBlcyc7XG5cbmV4cG9ydCBjb25zdCBEaXJlY3Rpb24gPSB7XG4gIEluY3JlbWVudDogJ2luY3JlbWVudCcsXG4gIERlY3JlbWVudDogJ2RlY3JlbWVudCcsXG59IGFzIGNvbnN0O1xuXG5leHBvcnQgdHlwZSBEaXJlY3Rpb24gPSAodHlwZW9mIERpcmVjdGlvbilba2V5b2YgdHlwZW9mIERpcmVjdGlvbl07XG5cbmV4cG9ydCBjb25zdCBTdGF0ZSA9IEZvcm1GaWVsZFN0YXRlO1xuXG5leHBvcnQgdHlwZSBTdGF0ZSA9ICh0eXBlb2YgU3RhdGUpW2tleW9mIHR5cGVvZiBTdGF0ZV07XG5cbmV4cG9ydCBjb25zdCBTaXplID0ge1xuICBYU21hbGw6ICd4c21hbGwnLFxuICBTbWFsbDogJ3NtYWxsJyxcbiAgRGVmYXVsdDogJ2RlZmF1bHQnLFxuICBMYXJnZTogJ2xhcmdlJyxcbn0gYXMgY29uc3Q7XG5cbmV4cG9ydCB0eXBlIFNpemUgPSAodHlwZW9mIFNpemUpW2tleW9mIHR5cGVvZiBTaXplXTtcblxuZXhwb3J0IGludGVyZmFjZSBVbml0T3B0aW9uIHtcbiAgZGlzcGxheU5hbWU6IHN0cmluZztcbiAgdmFsdWU6IHN0cmluZztcbn1cblxudHlwZSBBcmlhTGFiZWxrZXlzID0ga2V5b2YgQXJpYUxhYmVsUHJvcHNXaXRoTGFiZWw7XG5cbmV4cG9ydCBpbnRlcmZhY2UgV2l0aFVuaXRTZWxlY3RQcm9wcyB7XG4gIC8qKlxuICAgKiBUaGUgc3RyaW5nIHVuaXQgdGhhdCBhcHBlYXJzIHRvIHRoZSByaWdodCBvZiB0aGUgaW5wdXQgaWYgdXNpbmcgYSBzaW5nbGUgdW5pdC5cbiAgICpcbiAgICogUmVxdWlyZWQgaWYgdXNpbmcgYHVuaXRPcHRpb25zYC4gV2hlbiB1c2luZyBgdW5pdE9wdGlvbnNgIHRoaXMgdmFsdWUgYmVjb21lcyB0aGUgY29udHJvbGxlZCB2YWx1ZSBvZiB0aGUgc2VsZWN0IGlucHV0LlxuICAgKlxuICAgKi9cbiAgdW5pdDogc3RyaW5nO1xuICAvKipcbiAgICogVGhlIG9wdGlvbnMgdGhhdCBhcHBlYXIgaW4gdGhlIHNlbGVjdCBlbGVtZW50IGF0dGFjaGVkIHRvIHRoZSByaWdodCBvZiB0aGUgaW5wdXQuXG4gICAqL1xuICB1bml0T3B0aW9uczogQXJyYXk8VW5pdE9wdGlvbj47XG5cbiAgLyoqXG4gICAqIENhbGxiYWNrIGZpcmVkIHdoZW4gdGhlIHNlbGVjdCB2YWx1ZSBjaGFuZ2VzXG4gICAqL1xuICBvblNlbGVjdENoYW5nZTogKHVuaXQ6IFVuaXRPcHRpb24pID0+IHZvaWQ7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgV2l0aG91dFVuaXRTZWxlY3RQcm9wcyB7XG4gIC8qKlxuICAgKiBUaGUgc3RyaW5nIHVuaXQgdGhhdCBhcHBlYXJzIHRvIHRoZSByaWdodCBvZiB0aGUgaW5wdXQgaWYgdXNpbmcgYSBzaW5nbGUgdW5pdC5cbiAgICpcbiAgICogUmVxdWlyZWQgaWYgdXNpbmcgYHVuaXRPcHRpb25zYC4gV2hlbiB1c2luZyBgdW5pdE9wdGlvbnNgIHRoaXMgdmFsdWUgYmVjb21lcyB0aGUgY29udHJvbGxlZCB2YWx1ZSBvZiB0aGUgc2VsZWN0IGlucHV0LlxuICAgKlxuICAgKi9cbiAgdW5pdD86IHN0cmluZztcbiAgLyoqXG4gICAqIFRoZSBvcHRpb25zIHRoYXQgYXBwZWFyIGluIHRoZSBzZWxlY3QgZWxlbWVudCBhdHRhY2hlZCB0byB0aGUgcmlnaHQgb2YgdGhlIGlucHV0LlxuICAgKi9cbiAgdW5pdE9wdGlvbnM/OiBuZXZlcjtcblxuICAvKipcbiAgICogQ2FsbGJhY2sgZmlyZWQgd2hlbiB0aGUgc2VsZWN0IHZhbHVlIGNoYW5nZXNcbiAgICovXG4gIG9uU2VsZWN0Q2hhbmdlPzogbmV2ZXI7XG59XG5cbmV4cG9ydCB0eXBlIENvbmRpdGlvbmFsVW5pdFNlbGVjdFByb3BzID1cbiAgfCBXaXRoVW5pdFNlbGVjdFByb3BzXG4gIHwgV2l0aG91dFVuaXRTZWxlY3RQcm9wcztcblxuZXhwb3J0IGludGVyZmFjZSBCYXNlTnVtYmVySW5wdXRQcm9wc1xuICBleHRlbmRzIE9taXQ8XG4gICAgICBDb21wb25lbnRQcm9wc1dpdGhvdXRSZWY8J2lucHV0Jz4sXG4gICAgICAndHlwZScgfCBBcmlhTGFiZWxrZXlzIHwgJ3NpemUnXG4gICAgPixcbiAgICBEYXJrTW9kZVByb3BzIHtcbiAgLyoqXG4gICAqIFRoZSBjdXJyZW50IHN0YXRlIG9mIHRoZSBpbnB1dC5cbiAgICpcbiAgICogQGRlZmF1bHQgJ25vbmUnXG4gICAqL1xuICBzdGF0ZT86IFN0YXRlO1xuXG4gIC8qKlxuICAgKiBUaGUgY3VycmVudCB2YWx1ZSBvZiB0aGUgaW5wdXQuIElmIGEgdmFsdWUgaXMgcGFzc2VkIHRvIHRoaXMgcHJvcCwgY29tcG9uZW50IHdpbGwgYmUgY29udHJvbGxlZCBieSBjb25zdW1lci5cbiAgICovXG4gIHZhbHVlPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBDYWxsYmFjayBmaXJlZCB3aGVuIHRoZSBpbnB1dCB2YWx1ZSBjaGFuZ2VzXG4gICAqL1xuICBvbkNoYW5nZT86IENoYW5nZUV2ZW50SGFuZGxlcjxIVE1MSW5wdXRFbGVtZW50PjtcblxuICAvKipcbiAgICogQ2FsbGJhY2sgZmlyZWQgd2hlbiB0aGUgaW5wdXQgb3IgYXJyb3dzIGxvc2UgZm9jdXNcbiAgICovXG4gIG9uQmx1cj86IEZvY3VzRXZlbnRIYW5kbGVyPEhUTUxEaXZFbGVtZW50PjtcblxuICAvKipcbiAgICogaWQgYXNzb2NpYXRlZCB3aXRoIHRoZSBQYXNzd29yZElucHV0IGNvbXBvbmVudCwgcmVmZXJlbmNlZCBieSBgPGxhYmVsPmAgd2l0aCB0aGUgYGZvcmAgYXR0cmlidXRlLlxuICAgKi9cbiAgaWQ/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRleHQgc2hvd24gaW4gYm9sZCBhYm92ZSB0aGUgaW5wdXQgZWxlbWVudC5cbiAgICpcbiAgICogT3B0aW9uYWwgaWYgYGFyaWEtbGFiZWxsZWRieWAgaXMgcHJvdmlkZWRcbiAgICovXG4gIGxhYmVsPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBUZXh0IHRoYXQgZ2l2ZXMgbW9yZSBkZXRhaWwgYWJvdXQgdGhlIHJlcXVpcmVtZW50cyBmb3IgdGhlIGlucHV0LlxuICAgKi9cbiAgZGVzY3JpcHRpb24/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSBtZXNzYWdlIHNob3duIGJlbG93IHRoZSBpbnB1dCBlbGVtZW50IGlmIHRoZSB2YWx1ZSBpcyBpbnZhbGlkLlxuICAgKi9cbiAgZXJyb3JNZXNzYWdlPzogUmVhY3QuUmVhY3ROb2RlO1xuXG4gIC8qKlxuICAgKiBUaGUgbWVzc2FnZSBzaG93biBiZWxvdyB0aGUgaW5wdXQgZWxlbWVudCBpZiB0aGUgdmFsdWUgaXMgdmFsaWQuXG4gICAqL1xuICBzdWNjZXNzTWVzc2FnZT86IFJlYWN0LlJlYWN0Tm9kZTtcblxuICAvKipcbiAgICogRGV0ZXJtaW5lcyB0aGUgZm9udCBzaXplIGFuZCBwYWRkaW5nLlxuICAgKlxuICAgKiBAZGVmYXVsdCAnZGVmYXVsdCdcbiAgICovXG4gIHNpemU/OiBTaXplO1xuXG4gIC8qKlxuICAgKiBUaGUgY2xhc3NOYW1lIGZvciB0aGUgaW5wdXQgY29tcG9uZW50LlxuICAgKi9cbiAgaW5wdXRDbGFzc05hbWU/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSBjbGFzc05hbWUgZm9yIHRoZSBzZWxlY3QgY29tcG9uZW50LlxuICAgKi9cbiAgc2VsZWN0Q2xhc3NOYW1lPzogc3RyaW5nO1xufVxuXG5leHBvcnQgdHlwZSBOdW1iZXJJbnB1dFByb3BzID0gQmFzZU51bWJlcklucHV0UHJvcHMgJlxuICBDb25kaXRpb25hbFVuaXRTZWxlY3RQcm9wcyAmXG4gIFBvcG92ZXJQcm9wcyAmXG4gIEFyaWFMYWJlbFByb3BzV2l0aExhYmVsO1xuIl0sIm5hbWVzIjpbIkZvcm1GaWVsZFN0YXRlIiwiRGlyZWN0aW9uIiwiSW5jcmVtZW50IiwiRGVjcmVtZW50IiwiU3RhdGUiLCJTaXplIiwiWFNtYWxsIiwiU21hbGwiLCJEZWZhdWx0IiwiTGFyZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./packages/number-input/src/NumberInput/NumberInput.types.ts\n")},"./packages/number-input/src/NumberInput/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  Y: () => (/* reexport */ NumberInput)\n});\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js\nvar esm_extends = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/extends.js");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js + 2 modules\nvar defineProperty = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\nvar objectWithoutProperties = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js");\n// EXTERNAL MODULE: consume shared module (default) react@^17.0.2 (singleton) (fallback: ./node_modules/react/index.js)\nvar index_js_ = __webpack_require__("webpack/sharing/consume/default/react/react");\nvar index_js_default = /*#__PURE__*/__webpack_require__.n(index_js_);\n// EXTERNAL MODULE: ./packages/emotion/dist/esm/index.js\nvar esm = __webpack_require__("./packages/emotion/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/form-field/dist/esm/index.js\nvar dist_esm = __webpack_require__("./packages/form-field/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/hooks/dist/esm/index.js\nvar hooks_dist_esm = __webpack_require__("./packages/hooks/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/leafygreen-provider/dist/esm/index.js\nvar leafygreen_provider_dist_esm = __webpack_require__("./packages/leafygreen-provider/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/typography/dist/esm/index.js\nvar typography_dist_esm = __webpack_require__("./packages/typography/dist/esm/index.js");\n// EXTERNAL MODULE: ./node_modules/lodash/isUndefined.js\nvar isUndefined = __webpack_require__("./node_modules/lodash/isUndefined.js");\nvar isUndefined_default = /*#__PURE__*/__webpack_require__.n(isUndefined);\n// EXTERNAL MODULE: ./packages/lib/dist/esm/index.js\nvar lib_dist_esm = __webpack_require__("./packages/lib/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/number-input/src/NumberInput/NumberInput.types.ts\nvar NumberInput_types = __webpack_require__("./packages/number-input/src/NumberInput/NumberInput.types.ts");\n// EXTERNAL MODULE: ./packages/icon/dist/esm/index.js\nvar icon_dist_esm = __webpack_require__("./packages/icon/dist/esm/index.js");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\nvar taggedTemplateLiteral = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js");\n// EXTERNAL MODULE: ./packages/tokens/dist/esm/index.js\nvar tokens_dist_esm = __webpack_require__("./packages/tokens/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/palette/dist/esm/index.js\nvar palette_dist_esm = __webpack_require__("./packages/palette/dist/esm/index.js");\n;// CONCATENATED MODULE: ./packages/number-input/src/Input/Input.styles.ts\n\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14, _templateObject15, _templateObject16, _templateObject17, _templateObject18;\n\n\n\n\n\n\n/**\n * Adds an inset box shadow to hide the UA background styles for autofilled inputs\n */\nvar autofillShadowOverride = function autofillShadowOverride(color) {\n  return "0 0 0 100px ".concat(color, " inset");\n};\nvar wrapperClassName = (0,lib_dist_esm/* createUniqueClassName */.hy)(\'number-input-wrapper\');\nvar inputBaseStyles = (0,esm.css)(_templateObject || (_templateObject = (0,taggedTemplateLiteral/* default */.Z)(["\\n  all: unset;\\n  font-family: ", ";\\n  font-weight: ", ";\\n  width: 100%;\\n  font-size: ", "px;\\n  line-height: ", "px;\\n  height: inherit;\\n  box-sizing: border-box;\\n  transition: ", "ms ease-in-out;\\n  transition-property: background-color;\\n\\n  &::-webkit-outer-spin-button,\\n  &::-webkit-inner-spin-button {\\n    -webkit-appearance: none;\\n    margin: 0;\\n  }\\n\\n  &[type=\'number\'] {\\n    -moz-appearance: textfield;\\n  }\\n\\n  .", ":hover &,\\n  .", ":focus-within & {\\n    transition-property: padding;\\n  }\\n"])), tokens_dist_esm/* fontFamilies */.Vl["default"], tokens_dist_esm/* fontWeights */.vC.regular, tokens_dist_esm/* typeScales */.yL.body1.fontSize, tokens_dist_esm/* typeScales */.yL.body1.lineHeight, tokens_dist_esm/* transitionDuration */.nV["default"], wrapperClassName, wrapperClassName);\nvar inputThemeStyles = (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, lib_dist_esm/* Theme */.Q2.Light, (0,esm.css)(_templateObject2 || (_templateObject2 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    &::placeholder {\\n      color: ", ";\\n    }\\n\\n    &:-webkit-autofill {\\n      -webkit-text-fill-color: ", ";\\n      border: 0;\\n      box-shadow: ", ";\\n\\n      &:focus-visible,\\n      &:hover {\\n        -webkit-text-fill-color: ", ";\\n        box-shadow: ", ";\\n      }\\n    }\\n  "])), palette_dist_esm/* palette */.D.gray.base, tokens_dist_esm/* color */.$_.light.text.primary["default"], autofillShadowOverride(tokens_dist_esm/* color */.$_.light.background.primary["default"]), tokens_dist_esm/* color */.$_.light.text.primary.hover, autofillShadowOverride(tokens_dist_esm/* color */.$_.light.background.primary["default"]))), lib_dist_esm/* Theme */.Q2.Dark, (0,esm.css)(_templateObject3 || (_templateObject3 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    &::placeholder {\\n      color: ", ";\\n    }\\n\\n    &:-webkit-autofill {\\n      -webkit-text-fill-color: ", ";\\n      border: 0;\\n      box-shadow: ", ";\\n\\n      &:focus-visible,\\n      &:hover {\\n        -webkit-text-fill-color: ", ";\\n        box-shadow: ", ";\\n      }\\n    }\\n  "])), palette_dist_esm/* palette */.D.gray.dark1, tokens_dist_esm/* color */.$_.dark.text.primary["default"], autofillShadowOverride(palette_dist_esm/* palette */.D.gray.dark4), tokens_dist_esm/* color */.$_.dark.text.primary.hover, autofillShadowOverride(palette_dist_esm/* palette */.D.gray.dark4)));\nvar wrapperBaseStyles = (0,esm.css)(_templateObject4 || (_templateObject4 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  position: relative;\\n  border: 1px solid;\\n  border-radius: 6px;\\n  transition: ", "ms ease-in-out;\\n  transition-property: border-color, box-shadow;\\n  overflow: hidden;\\n  display: flex;\\n  align-items: center;\\n  flex-grow: 1;\\n  flex-shrink: 0;\\n  z-index: 1;\\n"])), tokens_dist_esm/* transitionDuration */.nV["default"]);\nvar selectBaseStyles = (0,esm.css)(_templateObject5 || (_templateObject5 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  border-top-right-radius: 0;\\n  border-bottom-right-radius: 0;\\n"])));\nvar wrapperThemeStyles = (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, lib_dist_esm/* Theme */.Q2.Light, (0,esm.css)(_templateObject6 || (_templateObject6 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    background-color: ", ";\\n    color: ", ";\\n\\n    &:focus-within {\\n      box-shadow: ", ";\\n      border-color: ", ";\\n    }\\n  "])), tokens_dist_esm/* color */.$_.light.background.primary["default"], tokens_dist_esm/* color */.$_.light.text.primary["default"], tokens_dist_esm/* focusRing */.kN.light.input, tokens_dist_esm/* color */.$_.light.border.primary.focus)), lib_dist_esm/* Theme */.Q2.Dark, (0,esm.css)(_templateObject7 || (_templateObject7 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    background-color: ", ";\\n    color: ", ";\\n\\n    &:focus-within {\\n      box-shadow: ", ";\\n      border-color: ", ";\\n    }\\n  "])), palette_dist_esm/* palette */.D.gray.dark4, tokens_dist_esm/* color */.$_.dark.text.primary["default"], tokens_dist_esm/* focusRing */.kN.dark.input, tokens_dist_esm/* color */.$_.dark.border.primary.focus));\nvar getWrapperStateStyles = function getWrapperStateStyles(theme) {\n  return (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, NumberInput_types/* State */.ZM.Error, (0,esm.css)(_templateObject8 || (_templateObject8 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    border-color: ", ";\\n  "])), tokens_dist_esm/* color */.$_[theme].border.error["default"])), NumberInput_types/* State */.ZM.None, (0,esm.css)(_templateObject9 || (_templateObject9 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    border-color: ", ";\\n  "])), tokens_dist_esm/* color */.$_[theme].border.primary["default"])), NumberInput_types/* State */.ZM.Valid, (0,esm.css)(_templateObject10 || (_templateObject10 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    border-color: ", ";\\n  "])), tokens_dist_esm/* color */.$_[theme].border.success["default"]));\n};\nvar getWrapperHoverStyles = function getWrapperHoverStyles(theme) {\n  return (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, NumberInput_types/* State */.ZM.Error, (0,esm.css)(_templateObject11 || (_templateObject11 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    border-color: ", ";\\n\\n    &:hover,\\n    &:active {\\n      &:not(:focus-within) {\\n        box-shadow: ", ";\\n      }\\n    }\\n  "])), tokens_dist_esm/* color */.$_[theme].border.error["default"], tokens_dist_esm/* hoverRing */.m$[theme].red)), NumberInput_types/* State */.ZM.None, (0,esm.css)(_templateObject12 || (_templateObject12 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    border-color: ", ";\\n\\n    &:hover,\\n    &:active {\\n      &:not(:focus-within) {\\n        box-shadow: ", ";\\n      }\\n    }\\n  "])), tokens_dist_esm/* color */.$_[theme].border.primary["default"], tokens_dist_esm/* hoverRing */.m$[theme].gray)), NumberInput_types/* State */.ZM.Valid, (0,esm.css)(_templateObject13 || (_templateObject13 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    border-color: ", ";\\n\\n    &:hover,\\n    &:active {\\n      &:not(:focus-within) {\\n        box-shadow: ", ";\\n      }\\n    }\\n  "])), tokens_dist_esm/* color */.$_[theme].border.success["default"], tokens_dist_esm/* hoverRing */.m$[theme].green));\n};\nvar getWrapperDisabledStyles = function getWrapperDisabledStyles(theme) {\n  return (0,esm.css)(_templateObject14 || (_templateObject14 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  background-color: ", ";\\n  border-color: ", ";\\n  color: ", ";\\n"])), tokens_dist_esm/* color */.$_[theme].background.disabled["default"], tokens_dist_esm/* color */.$_[theme].border.disabled["default"], tokens_dist_esm/* color */.$_[theme].text.disabled["default"]);\n};\nvar inputSizeStyles = (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, NumberInput_types/* Size */.$u.XSmall, (0,esm.css)(_templateObject15 || (_templateObject15 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    height: 22px;\\n    padding-left: ", "px;\\n    padding-right: ", "px;\\n  "])), tokens_dist_esm/* spacing */.W0[200], tokens_dist_esm/* spacing */.W0[600])), NumberInput_types/* Size */.$u.Small, (0,esm.css)(_templateObject16 || (_templateObject16 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    height: 28px;\\n    padding-left: ", "px;\\n    padding-right: ", "px;\\n  "])), tokens_dist_esm/* spacing */.W0[200], tokens_dist_esm/* spacing */.W0[600])), NumberInput_types/* Size */.$u.Default, (0,esm.css)(_templateObject17 || (_templateObject17 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    height: 36px;\\n    padding-left: ", "px;\\n    padding-right: ", "px;\\n  "])), tokens_dist_esm/* spacing */.W0[300], tokens_dist_esm/* spacing */.W0[800])), NumberInput_types/* Size */.$u.Large, (0,esm.css)(_templateObject18 || (_templateObject18 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    height: 48px;\\n    padding-left: ", "px;\\n    padding-right: ", "px;\\n  "])), tokens_dist_esm/* spacing */.W0[300], tokens_dist_esm/* spacing */.W0[800]));\n;// CONCATENATED MODULE: ./packages/number-input/src/Arrows/Arrows.styles.ts\n\n\nvar Arrows_styles_templateObject, Arrows_styles_templateObject2, Arrows_styles_templateObject3, Arrows_styles_templateObject4, Arrows_styles_templateObject5, Arrows_styles_templateObject6, Arrows_styles_templateObject7, Arrows_styles_templateObject8, Arrows_styles_templateObject9, Arrows_styles_templateObject10;\n\n\n\nvar arrowsBaseStyles = (0,esm.css)(Arrows_styles_templateObject || (Arrows_styles_templateObject = (0,taggedTemplateLiteral/* default */.Z)(["\\n  display: flex;\\n  flex-direction: column;\\n  position: absolute;\\n  top: 0;\\n  height: 100%;\\n  justify-content: center;\\n  transition: translate ", "ms ease-in-out;\\n"])), tokens_dist_esm/* transitionDuration */.nV["default"]);\nvar arrowsSizeStyles = (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, tokens_dist_esm/* Size */.$u.XSmall, (0,esm.css)(Arrows_styles_templateObject2 || (Arrows_styles_templateObject2 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    right: ", "px;\\n    translate: ", "px 0;\\n  "])), tokens_dist_esm/* spacing */.W0[200], tokens_dist_esm/* spacing */.W0[400])), tokens_dist_esm/* Size */.$u.Small, (0,esm.css)(Arrows_styles_templateObject3 || (Arrows_styles_templateObject3 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    right: ", "px;\\n    translate: ", "px 0;\\n  "])), tokens_dist_esm/* spacing */.W0[200], tokens_dist_esm/* spacing */.W0[400])), tokens_dist_esm/* Size */.$u.Default, (0,esm.css)(Arrows_styles_templateObject4 || (Arrows_styles_templateObject4 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    right: ", "px;\\n    translate: ", "px 0;\\n  "])), tokens_dist_esm/* spacing */.W0[300], tokens_dist_esm/* spacing */.W0[600])), tokens_dist_esm/* Size */.$u.Large, (0,esm.css)(Arrows_styles_templateObject5 || (Arrows_styles_templateObject5 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    right: ", "px;\\n    translate: ", "px 0;\\n  "])), tokens_dist_esm/* spacing */.W0[300], tokens_dist_esm/* spacing */.W0[600]));\nvar arrowsAnimateStyles = (0,esm.css)(Arrows_styles_templateObject6 || (Arrows_styles_templateObject6 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  .", ":hover &,\\n  .", ":focus-within & {\\n    translate: 0 0;\\n  }\\n"])), wrapperClassName, wrapperClassName);\nvar arrowDisabledStyles = (0,esm.css)(Arrows_styles_templateObject7 || (Arrows_styles_templateObject7 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  pointer-events: none;\\n"])));\nvar arrowBaseStyles = (0,esm.css)(Arrows_styles_templateObject8 || (Arrows_styles_templateObject8 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  all: unset;\\n  display: flex;\\n  position: relative;\\n  height: 12px;\\n  width: 8px;\\n\\n  &:hover {\\n    cursor: pointer;\\n  }\\n\\n  svg {\\n    position: absolute;\\n    translate: -50% -50%;\\n    top: 50%;\\n    left: 50%;\\n  }\\n"])));\nvar getArrowThemeStyles = function getArrowThemeStyles(theme) {\n  return (0,esm.css)(Arrows_styles_templateObject9 || (Arrows_styles_templateObject9 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  color: ", ";\\n\\n  &:hover,\\n  &:active {\\n    color: ", ";\\n  }\\n"])), tokens_dist_esm/* color */.$_[theme].icon.primary["default"], tokens_dist_esm/* color */.$_[theme].icon.primary.hover);\n};\nvar downArrowRotateStyles = (0,esm.css)(Arrows_styles_templateObject10 || (Arrows_styles_templateObject10 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  rotate: 180deg;\\n"])));\n;// CONCATENATED MODULE: ./packages/number-input/src/Arrows/Arrow.tsx\n\n\n\n\n\n\n\n/**\n * @internal\n */\n\nvar Arrow = function Arrow(_ref) {\n  var disabled = _ref.disabled,\n    _onClick = _ref.onClick,\n    onKeyDown = _ref.onKeyDown,\n    direction = _ref.direction;\n  var _useDarkMode = (0,leafygreen_provider_dist_esm/* useDarkMode */.vs)(),\n    theme = _useDarkMode.theme;\n  return /*#__PURE__*/index_js_default().createElement("button", {\n    "aria-label": "".concat(direction, " number"),\n    onClick: function onClick() {\n      return _onClick(direction);\n    },\n    onKeyDown: onKeyDown,\n    className: (0,esm.cx)(arrowBaseStyles, getArrowThemeStyles(theme)),\n    type: "button",\n    tabIndex: -1 // Mimicking native behavior; you cannot focus on an arrow.\n    ,\n    disabled: disabled,\n    "data-testid": "lg-number_input-".concat(direction, "_button")\n  }, /*#__PURE__*/index_js_default().createElement(icon_dist_esm/* default */.ZP, {\n    className: (0,esm.cx)((0,defineProperty/* default */.Z)({}, downArrowRotateStyles, direction === NumberInput_types/* Direction */.Nm.Decrement)),\n    "aria-hidden": true,\n    glyph: "CaretUp",\n    size: 16\n  }));\n};\nArrow.displayName = \'Arrow\';\n;// CONCATENATED MODULE: ./packages/number-input/src/Arrows/Arrows.tsx\n\n\n\n\n\n\n/**\n * @internal\n */\n\nvar Arrows = function Arrows(_ref) {\n  var disabled = _ref.disabled,\n    onClick = _ref.onClick,\n    onKeyDown = _ref.onKeyDown,\n    size = _ref.size;\n  return /*#__PURE__*/index_js_default().createElement("div", {\n    className: (0,esm.cx)(arrowsBaseStyles, arrowsSizeStyles[size], (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, arrowsAnimateStyles, !disabled), arrowDisabledStyles, disabled))\n  }, /*#__PURE__*/index_js_default().createElement(Arrow, {\n    disabled: disabled,\n    direction: NumberInput_types/* Direction */.Nm.Increment,\n    onClick: onClick,\n    onKeyDown: onKeyDown\n  }), /*#__PURE__*/index_js_default().createElement(Arrow, {\n    disabled: disabled,\n    direction: NumberInput_types/* Direction */.Nm.Decrement,\n    onClick: onClick,\n    onKeyDown: onKeyDown\n  }));\n};\nArrows.displayName = \'Arrows\';\n;// CONCATENATED MODULE: ./packages/number-input/src/Arrows/index.tsx\n\n;// CONCATENATED MODULE: ./packages/number-input/src/Input/Input.tsx\n\n\n\nvar _excluded = ["value", "onChange", "onBlur", "disabled", "size", "state", "hasSelectOptions", "className"];\n\n\n\n\n\n\n\n\n\n/**\n * @internal\n */\n\nvar Input = /*#__PURE__*/index_js_default().forwardRef(function (_ref, forwardRef) {\n  var valueProp = _ref.value,\n    onChangeProp = _ref.onChange,\n    onBlur = _ref.onBlur,\n    _ref$disabled = _ref.disabled,\n    disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? NumberInput_types/* Size */.$u.Default : _ref$size,\n    _ref$state = _ref.state,\n    state = _ref$state === void 0 ? NumberInput_types/* State */.ZM.None : _ref$state,\n    hasSelectOptions = _ref.hasSelectOptions,\n    className = _ref.className,\n    rest = (0,objectWithoutProperties/* default */.Z)(_ref, _excluded);\n  /**\n   * Timeout for error icon transitions, using a ref so its not recreated after each render.\n   */\n  var translateTimeout = (0,index_js_.useRef)();\n  var containerRef = (0,index_js_.useRef)(null);\n  var isFocusedRef = (0,index_js_.useRef)(false);\n  var inputRef = (0,hooks_dist_esm/* useForwardedRef */.ts)(forwardRef, null);\n  var _useDarkMode = (0,leafygreen_provider_dist_esm/* useDarkMode */.vs)(),\n    theme = _useDarkMode.theme;\n  var isControlled = !isUndefined_default()(valueProp);\n  (0,index_js_.useEffect)(function () {\n    // On unmount, removes the timeout that is set on `onMouseLeave` and `\'onBlur` of the wrapper container.\n    return function () {\n      if (translateTimeout.current) {\n        clearTimeout(translateTimeout.current);\n      }\n    };\n  }, []);\n  var _useControlledValue = (0,hooks_dist_esm/* useControlledValue */.OZ)(valueProp, onChangeProp),\n    value = _useControlledValue.value,\n    handleChange = _useControlledValue.handleChange;\n\n  /**\n   * Custom arrow buttons do not trigger a change event on the input.\n   * Creating a synthetic event will trigger a new change event.\n   */\n  var handleSyntheticEvent = function handleSyntheticEvent() {\n    var nativeEvent = new Event(\'change\', {\n      bubbles: true\n    });\n    var synthEvent = (0,lib_dist_esm/* createSyntheticEvent */.yA)(nativeEvent, inputRef.current);\n    handleChange === null || handleChange === void 0 ? void 0 : handleChange(synthEvent);\n  };\n\n  /**\n   * Callback when up/down arrows are clicked. Triggers handleChange callback.\n   */\n  var handleValueChange = function handleValueChange(value) {\n    switch (value) {\n      case NumberInput_types/* Direction */.Nm.Increment:\n        {\n          var _inputRef$current;\n          (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.stepUp();\n          handleSyntheticEvent();\n          break;\n        }\n      case NumberInput_types/* Direction */.Nm.Decrement:\n        {\n          var _inputRef$current2;\n          (_inputRef$current2 = inputRef.current) === null || _inputRef$current2 === void 0 ? void 0 : _inputRef$current2.stepDown();\n          handleSyntheticEvent();\n          break;\n        }\n    }\n  };\n\n  /**\n   * Edge case if the user clicks on an arrow button then switches to keyboard click.\n   * By default if focus is in the input then the keyboard clicks will work automatically but since the buttons are custom and outside of the input we are mimicking native behavior.\n   */\n  var handleArrowKeyDown = function handleArrowKeyDown(e) {\n    if (!disabled) {\n      switch (e.key) {\n        case \'ArrowUp\':\n          {\n            e.preventDefault();\n            handleValueChange(NumberInput_types/* Direction */.Nm.Increment);\n            break;\n          }\n        case \'ArrowDown\':\n          {\n            e.preventDefault();\n            handleValueChange(NumberInput_types/* Direction */.Nm.Decrement);\n            break;\n          }\n      }\n    }\n  };\n  var handleFocus = function handleFocus() {\n    isFocusedRef.current = true;\n  };\n  var handleBlur = function handleBlur(e) {\n    isFocusedRef.current = false;\n    // If newly focused element is a child of the input container, we do not invoke onBlur\n    var inputContainer = e.currentTarget;\n    var possibleChildOfInputContainer = e.relatedTarget;\n    if (inputContainer.contains(possibleChildOfInputContainer)) return;\n    onBlur === null || onBlur === void 0 ? void 0 : onBlur(e);\n  };\n  return /*#__PURE__*/index_js_default().createElement("div", {\n    ref: containerRef,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    className: (0,esm.cx)(wrapperClassName, wrapperBaseStyles, wrapperThemeStyles[theme], getWrapperStateStyles(theme)[state], (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, getWrapperHoverStyles(theme)[state], !disabled), getWrapperDisabledStyles(theme), disabled), selectBaseStyles, hasSelectOptions), className)\n  }, /*#__PURE__*/index_js_default().createElement("input", (0,esm_extends/* default */.Z)({\n    ref: inputRef,\n    className: (0,esm.cx)(inputBaseStyles, inputThemeStyles[theme], inputSizeStyles[size]),\n    type: "number",\n    value: isControlled ? valueProp : value // TODO: temp fix for useControlledValue hook. The hook was not returning the correct value when controlled. For example when typing 2e3 the hook would return 3 but it should return 2e3 like a native number input would.\n    ,\n    onChange: handleChange,\n    "aria-disabled": disabled,\n    readOnly: disabled\n  }, rest)), /*#__PURE__*/index_js_default().createElement(Arrows, {\n    disabled: disabled,\n    onClick: handleValueChange,\n    onKeyDown: handleArrowKeyDown,\n    size: size\n  }));\n});\nInput.displayName = \'Input\';\n;// CONCATENATED MODULE: ./packages/number-input/src/Input/index.tsx\n\n// EXTERNAL MODULE: ./packages/select/dist/esm/index.js\nvar select_dist_esm = __webpack_require__("./packages/select/dist/esm/index.js");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 3 modules\nvar slicedToArray = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js");\n// EXTERNAL MODULE: ./packages/button/dist/esm/index.js\nvar button_dist_esm = __webpack_require__("./packages/button/dist/esm/index.js");\n// EXTERNAL MODULE: ./packages/tooltip/dist/esm/index.js\nvar tooltip_dist_esm = __webpack_require__("./packages/tooltip/dist/esm/index.js");\n;// CONCATENATED MODULE: ./packages/number-input/src/UnitSelectButton/UnitSelectButton.styles.ts\n\n\nvar UnitSelectButton_styles_templateObject, UnitSelectButton_styles_templateObject2, UnitSelectButton_styles_templateObject3, UnitSelectButton_styles_templateObject4, UnitSelectButton_styles_templateObject5, UnitSelectButton_styles_templateObject6, UnitSelectButton_styles_templateObject7, UnitSelectButton_styles_templateObject8, UnitSelectButton_styles_templateObject9, UnitSelectButton_styles_templateObject10;\n\n\n\n\n\nvar wrapperStyles = (0,esm.css)(UnitSelectButton_styles_templateObject || (UnitSelectButton_styles_templateObject = (0,taggedTemplateLiteral/* default */.Z)(["\\n  position: relative;\\n"])));\nvar baseStyles = (0,esm.css)(UnitSelectButton_styles_templateObject2 || (UnitSelectButton_styles_templateObject2 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  border-top-left-radius: 0;\\n  border-bottom-left-radius: 0;\\n\\n  .", " {\\n    text-transform: uppercase;\\n  }\\n"])), select_dist_esm/* menuButtonTextClassName */.uW);\nvar themeStyles = (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, lib_dist_esm/* Theme */.Q2.Light, (0,esm.css)(UnitSelectButton_styles_templateObject3 || (UnitSelectButton_styles_templateObject3 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    background-color: ", ";\\n\\n    &:focus-visible,\\n    &:hover {\\n      background-color: ", ";\\n    }\\n\\n    &:focus {\\n      box-shadow: inherit;\\n    }\\n\\n    &:focus-visible {\\n      box-shadow: ", ";\\n      border-color: ", ";\\n    }\\n  "])), palette_dist_esm/* palette */.D.gray.light3, palette_dist_esm/* palette */.D.white, tokens_dist_esm/* focusRing */.kN[\'light\'].input, palette_dist_esm/* palette */.D.white)), lib_dist_esm/* Theme */.Q2.Dark, (0,esm.css)(UnitSelectButton_styles_templateObject4 || (UnitSelectButton_styles_templateObject4 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    background-color: ", ";\\n\\n    &:focus-visible,\\n    &:hover {\\n      background-color: ", ";\\n    }\\n\\n    &:focus {\\n      box-shadow: inherit;\\n    }\\n\\n    &:focus-visible {\\n      box-shadow: ", ";\\n      border-color: ", ";\\n    }\\n  "])), palette_dist_esm/* palette */.D.gray.dark2, palette_dist_esm/* palette */.D.gray.dark1, tokens_dist_esm/* focusRing */.kN[\'dark\'].input, palette_dist_esm/* palette */.D.gray.dark4));\nvar sizeStyles = (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, tokens_dist_esm/* Size */.$u.XSmall, (0,esm.css)(UnitSelectButton_styles_templateObject5 || (UnitSelectButton_styles_templateObject5 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    > *:last-child {\\n      padding: 0 ", "px 0 ", "px;\\n    }\\n  "])), tokens_dist_esm/* spacing */.W0[100], tokens_dist_esm/* spacing */.W0[200])), tokens_dist_esm/* Size */.$u.Small, (0,esm.css)(UnitSelectButton_styles_templateObject6 || (UnitSelectButton_styles_templateObject6 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    > *:last-child {\\n      padding: 0 ", "px 0 ", "px;\\n    }\\n  "])), tokens_dist_esm/* spacing */.W0[100], tokens_dist_esm/* spacing */.W0[200])), tokens_dist_esm/* Size */.$u.Default, (0,esm.css)(UnitSelectButton_styles_templateObject7 || (UnitSelectButton_styles_templateObject7 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    > *:last-child {\\n      padding: 0 ", "px 0 ", "px;\\n    }\\n  "])), tokens_dist_esm/* spacing */.W0[200], tokens_dist_esm/* spacing */.W0[300])), tokens_dist_esm/* Size */.$u.Large, (0,esm.css)(UnitSelectButton_styles_templateObject8 || (UnitSelectButton_styles_templateObject8 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    > *:last-child {\\n      padding: 0 ", "px 0 ", "px;\\n    }\\n  "])), tokens_dist_esm/* spacing */.W0[200], tokens_dist_esm/* spacing */.W0[300]));\nvar themeDisabledStyles = (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, lib_dist_esm/* Theme */.Q2.Light, (0,esm.css)(UnitSelectButton_styles_templateObject9 || (UnitSelectButton_styles_templateObject9 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    &:hover {\\n      box-shadow: unset;\\n    }\\n\\n    &:focus {\\n      box-shadow: ", ";\\n      border-color: ", ";\\n    }\\n\\n    &:focus-visible,\\n    &:hover {\\n      background-color: ", ";\\n    }\\n  "])), tokens_dist_esm/* focusRing */.kN[\'light\'].input, palette_dist_esm/* palette */.D.white, palette_dist_esm/* palette */.D.gray.light2)), lib_dist_esm/* Theme */.Q2.Dark, (0,esm.css)(UnitSelectButton_styles_templateObject10 || (UnitSelectButton_styles_templateObject10 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    &:hover {\\n      box-shadow: unset;\\n      background-color: ", ";\\n      border-color: ", ";\\n    }\\n\\n    &:focus {\\n      background-color: ", ";\\n      box-shadow: ", ";\\n      border-color: ", ";\\n    }\\n  "])), palette_dist_esm/* palette */.D.gray.dark3, palette_dist_esm/* palette */.D.gray.dark2, palette_dist_esm/* palette */.D.gray.dark4, tokens_dist_esm/* focusRing */.kN[\'dark\'].input, palette_dist_esm/* palette */.D.gray.dark4));\n;// CONCATENATED MODULE: ./packages/number-input/src/UnitSelectButton/UnitSelectButton.tsx\n\n\n\n\nvar UnitSelectButton_excluded = ["className", "children", "disabled", "displayName", "popoverZIndex", "usePortal", "portalClassName", "portalContainer", "portalRef", "scrollContainer"];\n\n// import { flushSync } from \'react-dom\';\n\n\n\n\n\n\n\n\n\n/**\n * Custom unit button with a tooltip.\n * Tooltip will show up if there is an ellipse.\n *\n * @internal\n */\nvar UnitSelectButton = /*#__PURE__*/index_js_default().forwardRef(function (_ref, forwardedRef) {\n  var _buttonRef$current;\n  var className = _ref.className,\n    children = _ref.children,\n    disabled = _ref.disabled,\n    displayName = _ref.displayName,\n    popoverZIndex = _ref.popoverZIndex,\n    usePortal = _ref.usePortal,\n    portalClassName = _ref.portalClassName,\n    portalContainer = _ref.portalContainer,\n    portalRef = _ref.portalRef,\n    scrollContainer = _ref.scrollContainer,\n    props = (0,objectWithoutProperties/* default */.Z)(_ref, UnitSelectButton_excluded);\n  var _useState = (0,index_js_.useState)(false),\n    _useState2 = (0,slicedToArray/* default */.Z)(_useState, 2),\n    open = _useState2[0],\n    setOpen = _useState2[1];\n  var buttonRef = (0,hooks_dist_esm/* useForwardedRef */.ts)(forwardedRef, null);\n  var _useDarkMode = (0,leafygreen_provider_dist_esm/* useDarkMode */.vs)(),\n    theme = _useDarkMode.theme;\n  var popoverProps = {\n    popoverZIndex: popoverZIndex,\n    usePortal: usePortal,\n    portalClassName: portalClassName,\n    portalContainer: portalContainer,\n    portalRef: portalRef,\n    scrollContainer: scrollContainer\n  };\n\n  /**\n   * Gets the text node for the selected option.\n   */\n  var textNode = (_buttonRef$current = buttonRef.current) === null || _buttonRef$current === void 0 ? void 0 : _buttonRef$current.querySelector(".".concat(select_dist_esm/* menuButtonTextClassName */.uW));\n\n  /**\n   * Checks if the selected option has an ellipse.\n   */\n  var hasEllipsis = textNode ? textNode.offsetWidth < textNode.scrollWidth : false;\n  var isEnabled = hasEllipsis && !disabled;\n  var handleMouseEnter = function handleMouseEnter(e) {\n    if (isEnabled) {\n      // Hovering over both the button and the menu popover triggers `onMouseEnter` but we only want the tooltip to show up on hover of the button. If the target has no ancestor with the popoverClassName then that means we are hovering over the button.\n      var popoverParent = e.target.closest(".".concat(select_dist_esm/* popoverClassName */.mq));\n      if (!popoverParent) {\n        // React 18 automatically batches all updates which appears to break the opening transition. flushSync prevents this state update from automically batching. Instead updates are made synchronously.\n        // flushSync(() => {\n        //   setOpen(true);\n        // });\n      }\n    }\n  };\n  var handleMouseLeave = function handleMouseLeave() {\n    return setOpen(false);\n  };\n  var handleOnFocus = function handleOnFocus() {\n    return setOpen(true);\n  };\n  var handleOnBlur = function handleOnBlur() {\n    return setOpen(false);\n  };\n  return /*#__PURE__*/index_js_default().createElement("div", {\n    className: wrapperStyles\n  }, /*#__PURE__*/index_js_default().createElement(tooltip_dist_esm/* default */.ZP, (0,esm_extends/* default */.Z)({\n    enabled: isEnabled,\n    justify: "middle"\n    // Using refEl instead of a trigger element because triggerProps by default, such as onMouseEnter, are added to the trigger element inside the tooltip component. OnMouseEnter is triggered by hovering over the trigger or any of its children. In the case of this custom menu button we don\'t want the tooltip to open when children are hovered so we add our own open logic with onMouseEnter.\n    ,\n    refEl: buttonRef,\n    open: open\n  }, popoverProps), displayName), /*#__PURE__*/index_js_default().createElement(button_dist_esm/* default */.ZP, (0,esm_extends/* default */.Z)({}, props, {\n    className: (0,esm.cx)(baseStyles, themeStyles[theme], sizeStyles[props.size || tokens_dist_esm/* Size */.$u.Default], (0,defineProperty/* default */.Z)({}, themeDisabledStyles[theme], disabled), className),\n    ref: buttonRef,\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    onFocus: handleOnFocus,\n    onBlur: handleOnBlur,\n    disabled: disabled\n  }), children));\n});\nUnitSelectButton.displayName = \'UnitSelectButton\';\n;// CONCATENATED MODULE: ./packages/number-input/src/UnitSelectButton/index.tsx\n\n;// CONCATENATED MODULE: ./packages/number-input/src/UnitSelect/UnitSelect.styles.ts\n\nvar UnitSelect_styles_templateObject, UnitSelect_styles_templateObject2, UnitSelect_styles_templateObject3;\n\n\nvar UnitSelect_styles_wrapperBaseStyles = (0,esm.css)(UnitSelect_styles_templateObject || (UnitSelect_styles_templateObject = (0,taggedTemplateLiteral/* default */.Z)(["\\n  margin-left: -1px;\\n\\n  &:hover,\\n  &:focus-within {\\n    z-index: 2;\\n  }\\n"])));\nvar getSelectDisabledStyles = function getSelectDisabledStyles(theme) {\n  return (0,esm.css)(UnitSelect_styles_templateObject2 || (UnitSelect_styles_templateObject2 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  button {\\n    background-color: ", ";\\n    border-color: ", ";\\n  }\\n"])), tokens_dist_esm/* color */.$_[theme].background.disabled["default"], tokens_dist_esm/* color */.$_[theme].border.disabled["default"]);\n};\nvar selectStyles = (0,esm.css)(UnitSelect_styles_templateObject3 || (UnitSelect_styles_templateObject3 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  > div {\\n    display: flex;\\n  }\\n\\n  button {\\n    font-size: ", "px;\\n    line-height: ", "px;\\n  }\\n"])), tokens_dist_esm/* typeScales */.yL.body1.fontSize, tokens_dist_esm/* typeScales */.yL.body1.lineHeight);\n;// CONCATENATED MODULE: ./packages/number-input/src/UnitSelect/UnitSelect.tsx\n\n\n\n\n\n\n\n\n/**\n * @internal\n */\nfunction UnitSelect(_ref) {\n  var dataTestId = _ref[\'data-testid\'],\n    unit = _ref.unit,\n    id = _ref.id,\n    unitOptions = _ref.unitOptions,\n    onChange = _ref.onChange,\n    disabled = _ref.disabled,\n    usePortal = _ref.usePortal,\n    size = _ref.size,\n    className = _ref.className,\n    portalClassName = _ref.portalClassName,\n    portalContainer = _ref.portalContainer,\n    portalRef = _ref.portalRef,\n    scrollContainer = _ref.scrollContainer,\n    popoverZIndex = _ref.popoverZIndex;\n  var _useDarkMode = (0,leafygreen_provider_dist_esm/* useDarkMode */.vs)(),\n    theme = _useDarkMode.theme;\n  var popoverProps = {\n    popoverZIndex: popoverZIndex,\n    usePortal: usePortal,\n    portalClassName: portalClassName,\n    portalContainer: portalContainer,\n    portalRef: portalRef,\n    scrollContainer: scrollContainer\n  };\n\n  /**\n   * Gets the current unit option using the unit string\n   */\n  var currentUnitOption = unitOptions.find(function (u) {\n    return u.displayName === unit;\n  });\n  var handleChange = function handleChange(val) {\n    var selectedUnit = unitOptions.find(function (u) {\n      return u.displayName === val;\n    });\n    if (selectedUnit !== undefined) {\n      onChange(selectedUnit);\n    }\n  };\n  return /*#__PURE__*/index_js_default().createElement("div", {\n    className: UnitSelect_styles_wrapperBaseStyles\n  }, /*#__PURE__*/index_js_default().createElement(select_dist_esm/* Select */.Ph, (0,esm_extends/* default */.Z)({\n    id: id,\n    onChange: handleChange,\n    "aria-labelledby": "Unit Picker",\n    value: currentUnitOption.displayName,\n    className: (0,esm.cx)(selectStyles, (0,defineProperty/* default */.Z)({}, getSelectDisabledStyles(theme), disabled), className),\n    allowDeselect: false,\n    dropdownWidthBasis: select_dist_esm/* DropdownWidthBasis */.yG.Option,\n    disabled: disabled,\n    size: size,\n    "data-testid": dataTestId\n  }, popoverProps, {\n    __INTERNAL__menuButtonSlot__: UnitSelectButton,\n    __INTERNAL__menuButtonSlotProps__: {\n      disabled: disabled,\n      displayName: currentUnitOption.displayName\n    }\n  }), unitOptions.map(function (option) {\n    return /*#__PURE__*/index_js_default().createElement(select_dist_esm/* Option */.Wx, {\n      key: option.displayName,\n      value: option.displayName\n    }, option.displayName);\n  })));\n}\nUnitSelect.displayName = \'UnitSelect\';\n;// CONCATENATED MODULE: ./packages/number-input/src/UnitSelect/index.tsx\n\n;// CONCATENATED MODULE: ./packages/number-input/src/NumberInput/NumberInput.styles.ts\n\n\nvar NumberInput_styles_templateObject, NumberInput_styles_templateObject2, NumberInput_styles_templateObject3, NumberInput_styles_templateObject4, NumberInput_styles_templateObject5, NumberInput_styles_templateObject6, NumberInput_styles_templateObject7, NumberInput_styles_templateObject8, NumberInput_styles_templateObject9, NumberInput_styles_templateObject10;\n\n\n\nvar labelDescriptionStyles = (0,esm.css)(NumberInput_styles_templateObject || (NumberInput_styles_templateObject = (0,taggedTemplateLiteral/* default */.Z)(["\\n  margin-bottom: ", "px;\\n  display: flex;\\n  flex-direction: column;\\n"])), tokens_dist_esm/* spacing */.W0[1]);\nvar NumberInput_styles_wrapperBaseStyles = (0,esm.css)(NumberInput_styles_templateObject2 || (NumberInput_styles_templateObject2 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  display: flex;\\n"])));\nvar wrapperSizeStyles = (0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)((0,defineProperty/* default */.Z)({}, NumberInput_types/* Size */.$u.XSmall, (0,esm.css)(NumberInput_styles_templateObject3 || (NumberInput_styles_templateObject3 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    height: 22px;\\n  "])))), NumberInput_types/* Size */.$u.Small, (0,esm.css)(NumberInput_styles_templateObject4 || (NumberInput_styles_templateObject4 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    height: 28px;\\n  "])))), NumberInput_types/* Size */.$u.Default, (0,esm.css)(NumberInput_styles_templateObject5 || (NumberInput_styles_templateObject5 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    height: 36px;\\n  "])))), NumberInput_types/* Size */.$u.Large, (0,esm.css)(NumberInput_styles_templateObject6 || (NumberInput_styles_templateObject6 = (0,taggedTemplateLiteral/* default */.Z)(["\\n    height: 48px;\\n  "]))));\nvar wrapperGapStyles = (0,esm.css)(NumberInput_styles_templateObject7 || (NumberInput_styles_templateObject7 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  gap: 12px;\\n"])));\nvar unitBaseStyles = (0,esm.css)(NumberInput_styles_templateObject8 || (NumberInput_styles_templateObject8 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  align-self: center;\\n"])));\nvar getUnitThemeStyles = function getUnitThemeStyles(theme) {\n  return (0,esm.css)(NumberInput_styles_templateObject9 || (NumberInput_styles_templateObject9 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  color: ", ";\\n"])), tokens_dist_esm/* color */.$_[theme].text.secondary["default"]);\n};\nvar getUnitDisabledStyles = function getUnitDisabledStyles(theme) {\n  return (0,esm.css)(NumberInput_styles_templateObject10 || (NumberInput_styles_templateObject10 = (0,taggedTemplateLiteral/* default */.Z)(["\\n  color: ", ";\\n"])), tokens_dist_esm/* color */.$_[theme].text.disabled["default"]);\n};\n;// CONCATENATED MODULE: ./packages/number-input/src/NumberInput/NumberInput.tsx\n\n\n\nvar NumberInput_excluded = ["state", "size", "unitOptions", "onSelectChange", "disabled", "darkMode", "id", "aria-describedby", "aria-labelledby", "aria-label", "unit", "className", "inputClassName", "selectClassName", "label", "value", "description", "errorMessage", "successMessage", "onChange", "popoverZIndex", "usePortal", "portalClassName", "portalContainer", "portalRef", "scrollContainer"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0,defineProperty/* default */.Z)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n\n\n\n\n\n\n\n\n\n\n\nvar NumberInput = /*#__PURE__*/index_js_default().forwardRef(function (_ref, forwardedRef) {\n  var _ref$state = _ref.state,\n    state = _ref$state === void 0 ? NumberInput_types/* State */.ZM.None : _ref$state,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? NumberInput_types/* Size */.$u.Default : _ref$size,\n    _ref$unitOptions = _ref.unitOptions,\n    unitOptions = _ref$unitOptions === void 0 ? [] : _ref$unitOptions,\n    _ref$onSelectChange = _ref.onSelectChange,\n    onSelectChange = _ref$onSelectChange === void 0 ? function () {} : _ref$onSelectChange,\n    _ref$disabled = _ref.disabled,\n    disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n    darkModeProp = _ref.darkMode,\n    idProp = _ref.id,\n    ariaDescribedbyProp = _ref[\'aria-describedby\'],\n    ariaLabelledbyProp = _ref[\'aria-labelledby\'],\n    ariaLabelProp = _ref[\'aria-label\'],\n    unit = _ref.unit,\n    className = _ref.className,\n    inputClassName = _ref.inputClassName,\n    selectClassName = _ref.selectClassName,\n    label = _ref.label,\n    value = _ref.value,\n    description = _ref.description,\n    _ref$errorMessage = _ref.errorMessage,\n    errorMessage = _ref$errorMessage === void 0 ? dist_esm/* DEFAULT_MESSAGES */.Me.error : _ref$errorMessage,\n    _ref$successMessage = _ref.successMessage,\n    successMessage = _ref$successMessage === void 0 ? dist_esm/* DEFAULT_MESSAGES */.Me.success : _ref$successMessage,\n    onChange = _ref.onChange,\n    popoverZIndex = _ref.popoverZIndex,\n    _ref$usePortal = _ref.usePortal,\n    usePortal = _ref$usePortal === void 0 ? true : _ref$usePortal,\n    portalClassName = _ref.portalClassName,\n    portalContainer = _ref.portalContainer,\n    portalRef = _ref.portalRef,\n    scrollContainer = _ref.scrollContainer,\n    rest = (0,objectWithoutProperties/* default */.Z)(_ref, NumberInput_excluded);\n  var prefix = \'lg-number-input\';\n  var inputId = (0,hooks_dist_esm/* useIdAllocator */.ue)({\n    prefix: prefix,\n    id: idProp\n  });\n  var feedbackId = (0,hooks_dist_esm/* useIdAllocator */.ue)({\n    prefix: prefix,\n    id: ariaDescribedbyProp\n  });\n  var descriptionId = (0,hooks_dist_esm/* useIdAllocator */.ue)({\n    prefix: prefix\n  });\n  var selectId = (0,hooks_dist_esm/* useIdAllocator */.ue)({\n    prefix: prefix\n  });\n  var _useDarkMode = (0,leafygreen_provider_dist_esm/* useDarkMode */.vs)(darkModeProp),\n    darkMode = _useDarkMode.darkMode,\n    theme = _useDarkMode.theme;\n  var hasUnit = !!unit;\n  var hasSelectOptions = Array.isArray(unitOptions) && unitOptions.length > 1;\n  var isUnitInOptions = unitOptions.find(function (u) {\n    return u.displayName === unit;\n  });\n  var renderUnitOnly = hasUnit && !hasSelectOptions;\n  var renderSelectOnly = hasUnit && hasSelectOptions && !!isUnitInOptions;\n  var popoverProps = _objectSpread({\n    popoverZIndex: popoverZIndex\n  }, usePortal ? {\n    usePortal: usePortal,\n    portalClassName: portalClassName,\n    portalContainer: portalContainer,\n    portalRef: portalRef,\n    scrollContainer: scrollContainer\n  } : {\n    usePortal: usePortal\n  });\n  var formFieldFeedbackProps = {\n    disabled: disabled,\n    errorMessage: errorMessage,\n    id: feedbackId,\n    size: size,\n    state: state,\n    successMessage: successMessage\n  };\n  return /*#__PURE__*/index_js_default().createElement(leafygreen_provider_dist_esm/* default */.ZP, {\n    darkMode: darkMode\n  }, /*#__PURE__*/index_js_default().createElement("div", {\n    className: className\n  }, (label || description) && /*#__PURE__*/index_js_default().createElement("div", {\n    className: labelDescriptionStyles\n  }, label && /*#__PURE__*/index_js_default().createElement(typography_dist_esm/* Label */.__, {\n    htmlFor: inputId,\n    disabled: disabled\n  }, label), description && /*#__PURE__*/index_js_default().createElement(typography_dist_esm/* Description */.dk, {\n    id: descriptionId,\n    disabled: disabled\n  }, description)), /*#__PURE__*/index_js_default().createElement("div", {\n    className: (0,esm.cx)(NumberInput_styles_wrapperBaseStyles, wrapperSizeStyles[size], (0,defineProperty/* default */.Z)({}, wrapperGapStyles, renderUnitOnly))\n  }, /*#__PURE__*/index_js_default().createElement(Input, (0,esm_extends/* default */.Z)({\n    ref: forwardedRef,\n    className: inputClassName,\n    value: value,\n    onChange: onChange,\n    disabled: disabled,\n    size: size,\n    id: inputId,\n    hasSelectOptions: renderSelectOnly,\n    state: state,\n    errorMessage: errorMessage,\n    "aria-describedby": "".concat(feedbackId, " ").concat(description ? descriptionId : \'\', " ").concat(renderSelectOnly ? selectId : \'\'),\n    "aria-labelledby": !label && ariaLabelledbyProp ? ariaLabelledbyProp : \'\',\n    "aria-label": !label && ariaLabelProp ? ariaLabelProp : \'\'\n  }, rest)), renderUnitOnly && /*#__PURE__*/index_js_default().createElement(typography_dist_esm/* Overline */.Lh, {\n    className: (0,esm.cx)(unitBaseStyles, getUnitThemeStyles(theme), (0,defineProperty/* default */.Z)({}, getUnitDisabledStyles(theme), disabled))\n  }, unit), renderSelectOnly && /*#__PURE__*/index_js_default().createElement(UnitSelect, (0,esm_extends/* default */.Z)({\n    id: selectId,\n    disabled: disabled,\n    unit: unit,\n    unitOptions: unitOptions,\n    onChange: onSelectChange,\n    size: size,\n    className: selectClassName\n  }, popoverProps))), /*#__PURE__*/index_js_default().createElement(dist_esm/* FormFieldFeedback */.e7, formFieldFeedbackProps)));\n});\nNumberInput.displayName = \'NumberInput\';\nNumberInput.propTypes =  false ? 0 : {};\n;// CONCATENATED MODULE: ./packages/number-input/src/NumberInput/index.tsx\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/number-input/src/NumberInput/index.tsx\n')},"./packages/tooltip/dist/esm/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WD: () => (/* reexport safe */ _leafygreen_ui_popover__WEBPACK_IMPORTED_MODULE_6__.WD),\n/* harmony export */   ZP: () => (/* binding */ pe),\n/* harmony export */   jx: () => (/* binding */ ae),\n/* harmony export */   xM: () => (/* binding */ le)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/typeof.js");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("webpack/sharing/consume/default/react/react");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/lodash/debounce.js");\n/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_debounce__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/emotion/dist/esm/index.js");\n/* harmony import */ var _leafygreen_ui_hooks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/hooks/dist/esm/index.js");\n/* harmony import */ var _leafygreen_ui_icon__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/icon/dist/esm/index.js");\n/* harmony import */ var _leafygreen_ui_leafygreen_provider__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/leafygreen-provider/dist/esm/index.js");\n/* harmony import */ var _leafygreen_ui_popover__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./packages/popover/dist/esm/index.js");\n/* harmony import */ var _leafygreen_ui_typography__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./packages/typography/dist/esm/index.js");\n/* harmony import */ var polished__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__("./node_modules/polished/dist/polished.esm.js");\n/* harmony import */ var _leafygreen_ui_lib__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("./packages/lib/dist/esm/index.js");\n/* harmony import */ var _leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("./packages/palette/dist/esm/index.js");\n/* harmony import */ var _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("./packages/tokens/dist/esm/index.js");\n/* harmony import */ var lodash_clamp__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__("./node_modules/lodash/clamp.js");\n/* harmony import */ var lodash_clamp__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(lodash_clamp__WEBPACK_IMPORTED_MODULE_11__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction M(e, t) {\n  t > e.length && (t = e.length);\n  for (var n = 0, r = Array(t); n < t; n++) r[n] = e[n];\n  return r;\n}\nfunction S(e, t, n) {\n  return (t = function (e) {\n    var t = function (e, t) {\n      if ("object" != (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(e) || !e) return e;\n      var n = e[Symbol.toPrimitive];\n      if (void 0 !== n) {\n        var r = n.call(e, t);\n        if ("object" != (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(r)) return r;\n        throw new TypeError("@@toPrimitive must return a primitive value.");\n      }\n      return String(e);\n    }(e, "string");\n    return "symbol" == (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(t) ? t : t + "";\n  }(t)) in e ? Object.defineProperty(e, t, {\n    value: n,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[t] = n, e;\n}\nfunction F() {\n  return F = Object.assign ? Object.assign.bind() : function (e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var n = arguments[t];\n      for (var r in n) ({}).hasOwnProperty.call(n, r) && (e[r] = n[r]);\n    }\n    return e;\n  }, F.apply(null, arguments);\n}\nfunction T(e, t) {\n  var n = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var r = Object.getOwnPropertySymbols(e);\n    t && (r = r.filter(function (t) {\n      return Object.getOwnPropertyDescriptor(e, t).enumerable;\n    })), n.push.apply(n, r);\n  }\n  return n;\n}\nfunction I(e) {\n  for (var t = 1; t < arguments.length; t++) {\n    var n = null != arguments[t] ? arguments[t] : {};\n    t % 2 ? T(Object(n), !0).forEach(function (t) {\n      S(e, t, n[t]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : T(Object(n)).forEach(function (t) {\n      Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));\n    });\n  }\n  return e;\n}\nfunction R(e, t) {\n  return function (e) {\n    if (Array.isArray(e)) return e;\n  }(e) || function (e, t) {\n    var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];\n    if (null != n) {\n      var r,\n        o,\n        i,\n        a,\n        l = [],\n        c = !0,\n        s = !1;\n      try {\n        if (i = (n = n.call(e)).next, 0 === t) ;else for (; !(c = (r = i.call(n)).done) && (l.push(r.value), l.length !== t); c = !0);\n      } catch (e) {\n        s = !0, o = e;\n      } finally {\n        try {\n          if (!c && null != n["return"] && (a = n["return"](), Object(a) !== a)) return;\n        } finally {\n          if (s) throw o;\n        }\n      }\n      return l;\n    }\n  }(e, t) || function (e, t) {\n    if (e) {\n      if ("string" == typeof e) return M(e, t);\n      var n = {}.toString.call(e).slice(8, -1);\n      return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? M(e, t) : void 0;\n    }\n  }(e, t) || function () {\n    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n  }();\n}\nfunction A(e, t) {\n  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, {\n    raw: {\n      value: Object.freeze(t)\n    }\n  }));\n}\nfunction z(t) {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", F({\n    width: 26,\n    height: 8,\n    fill: "#001E2B",\n    xmlns: "http://www.w3.org/2000/svg",\n    viewBox: "0 0 26 8"\n  }, t), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {\n    d: "M27 0H-1v1h.699a10 10 0 017.26 3.123l1.685 1.78a6 6 0 008.712 0l1.686-1.78A10 10 0 0126.302 1H27V0z"\n  }));\n}\nvar L,\n  B,\n  D,\n  H,\n  U,\n  X,\n  Y,\n  Z,\n  G,\n  V,\n  q,\n  J,\n  K,\n  $ = 8,\n  _ = 26,\n  Q = 16,\n  W = (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__.css)(L || (L = A(["\\n  margin: unset;\\n  font-family: ", ";\\n  color: ", ";\\n  font-weight: ", ";\\n  width: 100%;\\n  overflow-wrap: anywhere;\\n"])), _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_10__/* .fontFamilies */ .Vl["default"], _leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_9__/* .palette */ .D.gray.light1, _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_10__/* .fontWeights */ .vC.regular),\n  ee = (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__.css)(B || (B = A(["\\n  display: flex;\\n  align-items: center;\\n  border-radius: ", "px;\\n  padding: 12px ", "px;\\n  box-shadow: 0px 2px 4px -1px ", ";\\n  cursor: default;\\n  width: fit-content;\\n  max-width: 256px;\\n"])), Q, Q, (0,polished__WEBPACK_IMPORTED_MODULE_13__/* .transparentize */ .DZ)(.85, _leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_9__/* .palette */ .D.black)),\n  te = (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__.css)(D || (D = A(["\\n  position: relative;\\n"]))),\n  ne = S(S({}, _leafygreen_ui_lib__WEBPACK_IMPORTED_MODULE_8__/* .Theme */ .Q2.Light, {\n    tooltip: (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__.css)(H || (H = A(["\\n      background-color: ", ";\\n      color: ", ";\\n    "])), _leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_9__/* .palette */ .D.black, _leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_9__/* .palette */ .D.gray.light1),\n    children: (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__.css)(U || (U = A(["\\n      color: inherit;\\n    "]))),\n    notchFill: _leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_9__/* .palette */ .D.black\n  }), _leafygreen_ui_lib__WEBPACK_IMPORTED_MODULE_8__/* .Theme */ .Q2.Dark, {\n    tooltip: (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__.css)(X || (X = A(["\\n      background-color: ", ";\\n      color: ", ";\\n    "])), _leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_9__/* .palette */ .D.gray.light2, _leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_9__/* .palette */ .D.black),\n    children: (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__.css)(Y || (Y = A(["\\n      color: inherit;\\n    "]))),\n    notchFill: _leafygreen_ui_palette__WEBPACK_IMPORTED_MODULE_9__/* .palette */ .D.gray.light2\n  }),\n  re = _ + 2 * Q,\n  oe = (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__.css)(Z || (Z = A(["\\n  min-height: ", "px;\\n"])), re),\n  ie = (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__.css)(G || (G = A(["\\n  transition-delay: ", "ms;\\n"])), _leafygreen_ui_tokens__WEBPACK_IMPORTED_MODULE_10__/* .transitionDuration */ .nV.slowest),\n  ae = {\n    Hover: "hover",\n    Click: "click"\n  },\n  le = {\n    Top: _leafygreen_ui_popover__WEBPACK_IMPORTED_MODULE_6__/* .Align */ .xM.Top,\n    Bottom: _leafygreen_ui_popover__WEBPACK_IMPORTED_MODULE_6__/* .Align */ .xM.Bottom,\n    Left: _leafygreen_ui_popover__WEBPACK_IMPORTED_MODULE_6__/* .Align */ .xM.Left,\n    Right: _leafygreen_ui_popover__WEBPACK_IMPORTED_MODULE_6__/* .Align */ .xM.Right\n  };\nvar ce = ["initialOpen", "open", "setOpen", "darkMode", "baseFontSize", "triggerEvent", "enabled", "align", "justify", "spacing", "usePortal", "onClose", "id", "shouldClose", "portalClassName", "portalContainer", "portalRef", "scrollContainer", "popoverZIndex", "refEl", "className", "children", "trigger"],\n  se = function se(e) {\n    e.stopPropagation();\n  };\nfunction pe(e) {\n  var c,\n    b = e.initialOpen,\n    O = void 0 !== b && b,\n    j = e.open,\n    E = e.setOpen,\n    k = e.darkMode,\n    C = e.baseFontSize,\n    P = e.triggerEvent,\n    M = void 0 === P ? ae.Hover : P,\n    T = e.enabled,\n    L = void 0 === T || T,\n    B = e.align,\n    D = void 0 === B ? "top" : B,\n    H = e.justify,\n    U = void 0 === H ? "start" : H,\n    X = e.spacing,\n    Y = void 0 === X ? 12 : X,\n    Z = e.usePortal,\n    G = void 0 === Z || Z,\n    re = e.onClose,\n    pe = void 0 === re ? function () {} : re,\n    fe = e.id,\n    ue = e.shouldClose,\n    de = e.portalClassName,\n    he = e.portalContainer,\n    ge = e.portalRef,\n    me = e.scrollContainer,\n    ye = e.popoverZIndex,\n    be = e.refEl,\n    ve = e.className,\n    xe = e.children,\n    we = e.trigger,\n    Oe = function (e, t) {\n      if (null == e) return {};\n      var n,\n        r,\n        o = function (e, t) {\n          if (null == e) return {};\n          var n = {};\n          for (var r in e) if ({}.hasOwnProperty.call(e, r)) {\n            if (t.indexOf(r) >= 0) continue;\n            n[r] = e[r];\n          }\n          return n;\n        }(e, t);\n      if (Object.getOwnPropertySymbols) {\n        var i = Object.getOwnPropertySymbols(e);\n        for (r = 0; r < i.length; r++) n = i[r], t.indexOf(n) >= 0 || {}.propertyIsEnumerable.call(e, n) && (o[n] = e[n]);\n      }\n      return o;\n    }(e, ce),\n    je = "boolean" == typeof j,\n    Ee = R((0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(O), 2),\n    ke = Ee[0],\n    Ce = Ee[1],\n    Pe = (0,_leafygreen_ui_typography__WEBPACK_IMPORTED_MODULE_7__/* .useUpdatedBaseFontSize */ .hN)(C),\n    Ne = je ? j : ke,\n    Me = je && E ? E : Ce,\n    Se = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),\n    Fe = null != fe ? fe : null === (c = Se.current) || void 0 === c ? void 0 : c.id,\n    Te = (0,_leafygreen_ui_hooks__WEBPACK_IMPORTED_MODULE_3__/* .useIdAllocator */ .ue)({\n      prefix: "tooltip",\n      id: Fe\n    }),\n    Ie = (0,_leafygreen_ui_leafygreen_provider__WEBPACK_IMPORTED_MODULE_5__/* .useDarkMode */ .vs)(k),\n    Re = Ie.darkMode,\n    Ae = Ie.theme;\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    we && /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(we) && (0,_leafygreen_ui_icon__WEBPACK_IMPORTED_MODULE_4__/* .isComponentGlyph */ .fx)(we) && console.warn("Using a LeafyGreenUI Icon or Glyph component as a trigger will not render a Tooltip, as these components do not render their children. To use, please wrap your trigger element in another HTML tag.");\n  }, [we]);\n  var ze = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n      ("function" != typeof ue || ue()) && (pe(), Me(!1));\n    }, [Me, ue, pe]),\n    Le = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (e, t) {\n      return e === ae.Hover ? {\n        onMouseEnter: lodash_debounce__WEBPACK_IMPORTED_MODULE_1___default()(function (e) {\n          n("onMouseEnter", e);\n        }, 35),\n        onMouseLeave: lodash_debounce__WEBPACK_IMPORTED_MODULE_1___default()(function (e) {\n          n("onMouseLeave", e), ze();\n        }, 35),\n        onFocus: function onFocus(e) {\n          n("onFocus", e), Me(!0);\n        },\n        onBlur: function onBlur(e) {\n          n("onBlur", e), ze();\n        }\n      } : {\n        onClick: function onClick(e) {\n          e.target !== Se.current && (n("onClick", e), Me(function (e) {\n            return !e;\n          }));\n        }\n      };\n      function n(e, n) {\n        t && t[e] && "function" == typeof t[e] && t[e](n);\n      }\n    }, [ze, Me, Se]);\n  (0,_leafygreen_ui_hooks__WEBPACK_IMPORTED_MODULE_3__/* .useEscapeKey */ .qX)(ze, {\n    enabled: Ne\n  }), (0,_leafygreen_ui_hooks__WEBPACK_IMPORTED_MODULE_3__/* .useBackdropClick */ .Sj)(ze, [Se], Ne && "click" === M);\n  var Be = I({\n      refEl: be,\n      popoverZIndex: ye\n    }, G ? {\n      spacing: Y,\n      usePortal: G,\n      portalClassName: de,\n      portalContainer: he,\n      portalRef: ge,\n      scrollContainer: me\n    } : {\n      spacing: Y,\n      usePortal: G\n    }),\n    De = L && Ne,\n    He = ["left", "right"].includes(D),\n    Ue = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_leafygreen_ui_popover__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .ZP, F({\n      key: "tooltip",\n      active: De,\n      align: D,\n      justify: U,\n      adjustOnMutation: !0,\n      onClick: se,\n      className: (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__.cx)(ie, S({}, (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__.css)(K || (K = A(["\\n          // Try to fit all the content on one line (until it hits max-width)\\n          // Overrides default behavior, which is to set width to size of the trigger.\\n          // Except when justify is set to fit because the width should be the size of the trigger.\\n          // Another exception is when justify is set to fit and the alignment is either left or right. In this case only the height should be the size of the trigger so we still want the width to fit the max content.\\n          width: max-content;\\n        "]))), U !== _leafygreen_ui_popover__WEBPACK_IMPORTED_MODULE_6__/* .Justify */ .WD.Fit || U === _leafygreen_ui_popover__WEBPACK_IMPORTED_MODULE_6__/* .Justify */ .WD.Fit && (D === le.Left || D === le.Right)))\n    }, Be), function (e) {\n      var n = function (e) {\n          var t = e.align,\n            n = e.justify,\n            r = e.triggerRect;\n          if (!t || !n || !r) return {\n            notchContainer: "",\n            notch: "",\n            tooltip: ""\n          };\n          var o,\n            i,\n            a = _,\n            l = -(a - $) / 2,\n            c = {},\n            p = {},\n            f = Q,\n            u = 2 * f,\n            d = 0,\n            h = "";\n          switch (t) {\n            case "top":\n            case "bottom":\n              switch (u = 3 * f, o = r.width / 2 - a / 2, d = lodash_clamp__WEBPACK_IMPORTED_MODULE_11___default()(o, f, u), i = o <= f, c.left = "0px", c.right = "0px", "top" === t ? (p.top = "calc(100% - 1px)", c.top = "".concat(l, "px")) : (p.bottom = "calc(100% - 1px)", c.bottom = "".concat(l, "px"), c.transform = "rotate(180deg)"), n) {\n                case _leafygreen_ui_popover__WEBPACK_IMPORTED_MODULE_6__/* .Justify */ .WD.Start:\n                  p.left = "".concat(d, "px"), i && (h = "translateX(-".concat(f - o, "px)"));\n                  break;\n                case _leafygreen_ui_popover__WEBPACK_IMPORTED_MODULE_6__/* .Justify */ .WD.Middle:\n                  p.left = "0px", p.right = "0px";\n                  break;\n                case _leafygreen_ui_popover__WEBPACK_IMPORTED_MODULE_6__/* .Justify */ .WD.Fit:\n                  p.left = "".concat(d, "px"), i && (h = "translateX(-".concat(f - o, "px)"));\n                  break;\n                case _leafygreen_ui_popover__WEBPACK_IMPORTED_MODULE_6__/* .Justify */ .WD.End:\n                  p.right = "".concat(d, "px"), i && (h = "translateX(".concat(f - o, "px)"));\n              }\n              break;\n            case "left":\n            case "right":\n              switch (u = 2 * f, o = r.height / 2 - a / 2, d = lodash_clamp__WEBPACK_IMPORTED_MODULE_11___default()(o, f, u), i = o <= f, c.top = "0px", c.bottom = "0px", "left" === t ? (p.left = "calc(100% - 1px)", c.left = "".concat(l, "px"), c.transform = "rotate(-90deg)") : (p.right = "calc(100% - 1px)", c.right = "".concat(l, "px"), c.transform = "rotate(90deg)"), n) {\n                case _leafygreen_ui_popover__WEBPACK_IMPORTED_MODULE_6__/* .Justify */ .WD.Start:\n                  p.top = "".concat(d, "px"), i && (h = "translateY(-".concat(f - o, "px)"));\n                  break;\n                case _leafygreen_ui_popover__WEBPACK_IMPORTED_MODULE_6__/* .Justify */ .WD.Middle:\n                  p.top = "0px", p.bottom = "0px";\n                  break;\n                case _leafygreen_ui_popover__WEBPACK_IMPORTED_MODULE_6__/* .Justify */ .WD.Fit:\n                  p.top = "".concat(d, "px"), i && (h = "translateY(-".concat(f - o, "px)"));\n                  break;\n                case _leafygreen_ui_popover__WEBPACK_IMPORTED_MODULE_6__/* .Justify */ .WD.End:\n                  p.bottom = "".concat(d, "px"), i && (h = "translateY(".concat(f - o, "px)"));\n              }\n          }\n          return {\n            notchContainer: (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__.css)(V || (V = A(["\\n      position: absolute;\\n      width: ", "px;\\n      height: ", "px;\\n      overflow: hidden;\\n      margin: auto;\\n      pointer-events: none;\\n      ", ";\\n    "])), a, a, (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__.css)(p)),\n            notch: (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__.css)(q || (q = A(["\\n      ", ";\\n      position: absolute;\\n      width: ", "px;\\n      height: ", "px; // Keep it square. Rotating is simpler\\n      margin: 0;\\n    "])), (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__.css)(c), _, _),\n            tooltip: (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__.css)(J || (J = A(["\\n      min-width: ", "px;\\n      transform: ", ";\\n    "])), 2 * d + a, h)\n          };\n        }({\n          align: e.align,\n          justify: e.justify,\n          triggerRect: e.referenceElPos\n        }),\n        r = n.notchContainer,\n        o = n.notch,\n        i = n.tooltip;\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_leafygreen_ui_leafygreen_provider__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP, {\n        darkMode: !Re\n      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", F({\n        role: "tooltip"\n      }, Oe, {\n        id: Te,\n        className: (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__.cx)(ee, i, ne[Ae].tooltip, S({}, oe, He), ve),\n        ref: Se\n      }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {\n        className: (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__.cx)(W, _leafygreen_ui_typography__WEBPACK_IMPORTED_MODULE_7__/* .bodyTypeScaleStyles */ .dF[Pe], ne[Ae].children)\n      }, xe), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {\n        className: r\n      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(z, {\n        className: (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__.cx)(o),\n        fill: ne[Ae].notchFill\n      }))));\n    });\n  return we ? "function" == typeof we ? we(I(I({}, Le(M)), {}, {\n    className: te,\n    "aria-describedby": De ? Te : void 0,\n    children: Ue\n  })) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(we, I(I({}, Le(M, we.props)), {}, {\n    "aria-describedby": De ? Te : void 0,\n    children: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, we.props.children, Ue),\n    className: (0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_2__.cx)(te, we.props.className)\n  })) : Ue;\n}\npe.displayName = "Tooltip", pe.propTypes =  false ? 0 : {};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/tooltip/dist/esm/index.js\n')}}]);