/*! For license information please see 9890.843adecb.iframe.bundle.js.LICENSE.txt */
(self.webpackChunkleafygreen_ui=self.webpackChunkleafygreen_ui||[]).push([[9890],{"./node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";function _objectDestructuringEmpty(obj){if(null==obj)throw new TypeError("Cannot destructure "+obj)}__webpack_require__.d(__webpack_exports__,{Z:()=>_objectDestructuringEmpty})},"./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>_toConsumableArray});var arrayLikeToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js");var unsupportedIterableToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js");function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return(0,arrayLikeToArray.Z)(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||(0,unsupportedIterableToArray.Z)(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},"./node_modules/@storybook/testing-library/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{mV:()=>dist_userEvent,uh:()=>within});var api_namespaceObject={};__webpack_require__.r(api_namespaceObject),__webpack_require__.d(api_namespaceObject,{clear:()=>clear,click:()=>click,copy:()=>copy,cut:()=>cut,dblClick:()=>dblClick,deselectOptions:()=>deselectOptions,hover:()=>hover,keyboard:()=>keyboard,paste:()=>paste,pointer:()=>pointer,selectOptions:()=>selectOptions,tab:()=>tab,tripleClick:()=>tripleClick,type:()=>type,unhover:()=>unhover,upload:()=>upload});var directApi_namespaceObject={};__webpack_require__.r(directApi_namespaceObject),__webpack_require__.d(directApi_namespaceObject,{clear:()=>directApi_clear,click:()=>directApi_click,copy:()=>directApi_copy,cut:()=>directApi_cut,dblClick:()=>directApi_dblClick,deselectOptions:()=>directApi_deselectOptions,hover:()=>directApi_hover,keyboard:()=>directApi_keyboard,paste:()=>directApi_paste,pointer:()=>directApi_pointer,selectOptions:()=>directApi_selectOptions,tab:()=>directApi_tab,tripleClick:()=>directApi_tripleClick,type:()=>directApi_type,unhover:()=>directApi_unhover,upload:()=>directApi_upload});var clickableInputTypes,dom_esm=__webpack_require__("./node_modules/@testing-library/dom/dist/@testing-library/dom.esm.js");function isElementType(element,tag,props){return(!element.namespaceURI||"http://www.w3.org/1999/xhtml"===element.namespaceURI)&&(!!(tag=Array.isArray(tag)?tag:[tag]).includes(element.tagName.toLowerCase())&&(!props||Object.entries(props).every((([k,v])=>element[k]===v))))}function isClickableInput(element){return isElementType(element,"button")||isElementType(element,"input")&&element.type in clickableInputTypes}!function(clickableInputTypes){clickableInputTypes.button="button",clickableInputTypes.color="color",clickableInputTypes.file="file",clickableInputTypes.image="image",clickableInputTypes.reset="reset",clickableInputTypes.submit="submit",clickableInputTypes.checkbox="checkbox",clickableInputTypes.radio="radio"}(clickableInputTypes||(clickableInputTypes={}));var helpers=__webpack_require__("./node_modules/@testing-library/dom/dist/helpers.js");function getWindow(node){return(0,helpers.M2)(node)}function readBlobText(blob,FileReader){return new Promise(((res,rej)=>{const fr=new FileReader;fr.onerror=rej,fr.onabort=rej,fr.onload=()=>{res(String(fr.result))},fr.readAsText(blob)}))}function createFileList(window,files){const list={...files,length:files.length,item:index=>list[index],[Symbol.iterator]:function*nextFile(){for(let i=0;i<list.length;i++)yield list[i]}};return list.constructor=window.FileList,window.FileList&&Object.setPrototypeOf(list,window.FileList.prototype),Object.freeze(list),list}class DataTransferItemStub{getAsFile(){return this.file}getAsString(callback){"string"==typeof this.data&&callback(this.data)}webkitGetAsEntry(){throw new Error("not implemented")}constructor(dataOrFile,type){this.file=null,this.data=void 0,"string"==typeof dataOrFile?(this.kind="string",this.type=String(type),this.data=dataOrFile):(this.kind="file",this.type=dataOrFile.type,this.file=dataOrFile)}}class DataTransferItemListStub extends Array{add(...args){const item=new DataTransferItemStub(args[0],args[1]);return this.push(item),item}clear(){this.splice(0,this.length)}remove(index){this.splice(index,1)}}function getTypeMatcher(type,exact){const[group,sub]=type.split("/"),isGroup=!sub||"*"===sub;return item=>exact?item.type===(isGroup?group:type):isGroup?item.type.startsWith(`${group}/`):item.type===group}function createDataTransfer(window,files=[]){const dt=void 0===window.DataTransfer?function createDataTransferStub(window){return new class DataTransferStub{getData(format){var ref;const match=null!==(ref=this.items.find(getTypeMatcher(format,!0)))&&void 0!==ref?ref:this.items.find(getTypeMatcher(format,!1));let text="";return null==match||match.getAsString((t=>{text=t})),text}setData(format,data){const matchIndex=this.items.findIndex(getTypeMatcher(format,!0)),item=new DataTransferItemStub(data,format);matchIndex>=0?this.items.splice(matchIndex,1,item):this.items.push(item)}clearData(format){if(format){const matchIndex=this.items.findIndex(getTypeMatcher(format,!0));matchIndex>=0&&this.items.remove(matchIndex)}else this.items.clear()}get types(){const t=[];return this.files.length&&t.push("Files"),this.items.forEach((i=>t.push(i.type))),Object.freeze(t),t}setDragImage(){}constructor(){this.dropEffect="none",this.effectAllowed="uninitialized",this.items=new DataTransferItemListStub,this.files=createFileList(window,[])}}}(window):new window.DataTransfer;return Object.defineProperty(dt,"files",{get:()=>createFileList(window,files)}),dt}function getBlobFromDataTransferItem(window,item){if("file"===item.kind)return item.getAsFile();let data="";return item.getAsString((s=>{data=s})),new window.Blob([data],{type:item.type})}function createClipboardItem(window,...blobs){const dataMap=Object.fromEntries(blobs.map((b=>["string"==typeof b?"text/plain":b.type,Promise.resolve(b)])));return void 0!==window.ClipboardItem?new window.ClipboardItem(dataMap):new class ClipboardItem{get types(){return Array.from(Object.keys(this.data))}async getType(type){const value=await this.data[type];if(!value)throw new Error(`${type} is not one of the available MIME types on this item.`);return value instanceof window.Blob?value:new window.Blob([value],{type})}constructor(d){this.data=d}}(dataMap)}const ClipboardStubControl=Symbol("Manage ClipboardSub");function createClipboardStub(window,control){return Object.assign(new class Clipboard extends window.EventTarget{async read(){return Array.from(this.items)}async readText(){let text="";for(const item of this.items){const type=item.types.includes("text/plain")?"text/plain":item.types.find((t=>t.startsWith("text/")));type&&(text+=await item.getType(type).then((b=>readBlobText(b,window.FileReader))))}return text}async write(data){this.items=data}async writeText(text){this.items=[createClipboardItem(window,text)]}constructor(...args){super(...args),this.items=[]}},{[ClipboardStubControl]:control})}function isClipboardStub(clipboard){var ref;return!!(null===(ref=clipboard)||void 0===ref?void 0:ref[ClipboardStubControl])}async function writeDataTransferToClipboard(document,clipboardData){const window=getWindow(document),clipboard=window.navigator.clipboard,items=[];for(let i=0;i<clipboardData.items.length;i++){const blob=getBlobFromDataTransferItem(window,clipboardData.items[i]);items.push(createClipboardItem(window,blob))}if(!(clipboard&&await clipboard.write(items).then((()=>!0),(()=>!1))))throw new Error("The Clipboard API is unavailable.")}function isContentEditable(element){return element.hasAttribute("contenteditable")&&("true"==element.getAttribute("contenteditable")||""==element.getAttribute("contenteditable"))}function getContentEditable(node){const element=function getElement(node){return 1===node.nodeType?node:node.parentElement}(node);return element&&(element.closest('[contenteditable=""]')||element.closest('[contenteditable="true"]'))}function isEditable(element){return isEditableInputOrTextArea(element)&&!element.readOnly||isContentEditable(element)}var editableInputTypes,maxLengthSupportedTypes;function isEditableInputOrTextArea(element){return isElementType(element,"textarea")||isElementType(element,"input")&&element.type in editableInputTypes}"function"==typeof globalThis.afterEach&&globalThis.afterEach((()=>function resetClipboardStubOnView(window){isClipboardStub(window.navigator.clipboard)&&window.navigator.clipboard[ClipboardStubControl].resetClipboardStub()}(globalThis.window))),"function"==typeof globalThis.afterAll&&globalThis.afterAll((()=>function detachClipboardStubFromView(window){isClipboardStub(window.navigator.clipboard)&&window.navigator.clipboard[ClipboardStubControl].detachClipboardStub()}(globalThis.window))),function(editableInputTypes){editableInputTypes.text="text",editableInputTypes.date="date",editableInputTypes["datetime-local"]="datetime-local",editableInputTypes.email="email",editableInputTypes.month="month",editableInputTypes.number="number",editableInputTypes.password="password",editableInputTypes.search="search",editableInputTypes.tel="tel",editableInputTypes.time="time",editableInputTypes.url="url",editableInputTypes.week="week"}(editableInputTypes||(editableInputTypes={})),function(maxLengthSupportedTypes){maxLengthSupportedTypes.email="email",maxLengthSupportedTypes.password="password",maxLengthSupportedTypes.search="search",maxLengthSupportedTypes.telephone="telephone",maxLengthSupportedTypes.text="text",maxLengthSupportedTypes.url="url"}(maxLengthSupportedTypes||(maxLengthSupportedTypes={}));const FOCUSABLE_SELECTOR=["input:not([type=hidden]):not([disabled])","button:not([disabled])","select:not([disabled])","textarea:not([disabled])",'[contenteditable=""]','[contenteditable="true"]',"a[href]","[tabindex]:not([disabled])"].join(", ");function isFocusable(element){return element.matches(FOCUSABLE_SELECTOR)}var bracketDict,ApiLevel,PointerEventsCheckLevel;function readNextDescriptor(text,context){let pos=0;const startBracket=text[pos]in bracketDict?text[pos]:"";pos+=startBracket.length;const type=new RegExp(`^\\${startBracket}{2}`).test(text)?"":startBracket;return{type,...""===type?readPrintableChar(text,pos,context):readTag(text,pos,type,context)}}function readPrintableChar(text,pos,context){const descriptor=text[pos];return assertDescriptor(descriptor,text,pos,context),{consumedLength:pos+=descriptor.length,descriptor,releasePrevious:!1,releaseSelf:!0,repeat:1}}function readTag(text,pos,startBracket,context){var ref,ref1;const releasePreviousModifier="/"===text[pos]?"/":"";pos+=releasePreviousModifier.length;const escapedDescriptor="{"===startBracket&&"\\"===text[pos];pos+=Number(escapedDescriptor);const descriptor=escapedDescriptor?text[pos]:null===(ref=text.slice(pos).match("{"===startBracket?/^\w+|^[^}>/]/:/^\w+/))||void 0===ref?void 0:ref[0];var ref2;assertDescriptor(descriptor,text,pos,context),pos+=descriptor.length;const repeatModifier=null!==(ref2=null===(ref1=text.slice(pos).match(/^>\d+/))||void 0===ref1?void 0:ref1[0])&&void 0!==ref2?ref2:"",releaseSelfModifier="/"===text[pos+=repeatModifier.length]||!repeatModifier&&">"===text[pos]?text[pos]:"";pos+=releaseSelfModifier.length;const expectedEndBracket=bracketDict[startBracket],endBracket=text[pos]===expectedEndBracket?expectedEndBracket:"";if(!endBracket)throw new Error(getErrorMessage([!repeatModifier&&"repeat modifier",!releaseSelfModifier&&"release modifier",`"${expectedEndBracket}"`].filter(Boolean).join(" or "),text[pos],text,context));return{consumedLength:pos+=endBracket.length,descriptor,releasePrevious:!!releasePreviousModifier,repeat:repeatModifier?Math.max(Number(repeatModifier.substr(1)),1):1,releaseSelf:hasReleaseSelf(releaseSelfModifier,repeatModifier)}}function assertDescriptor(descriptor,text,pos,context){if(!descriptor)throw new Error(getErrorMessage("key descriptor",text[pos],text,context))}function hasReleaseSelf(releaseSelfModifier,repeatModifier){return releaseSelfModifier?"/"===releaseSelfModifier:!repeatModifier&&void 0}function getErrorMessage(expected,found,text,context){return`Expected ${expected} but found "${null!=found?found:""}" in "${text}"\n    See ${"pointer"===context?"https://testing-library.com/docs/user-event/pointer#pressing-a-button-or-touching-the-screen":"https://testing-library.com/docs/user-event/keyboard"}\n    for more information about how userEvent parses your input.`}function setLevelRef(instance,level){instance.levelRefs[level]={}}function getLevelRef(instance,level){return instance.levelRefs[level]}function isDisabled(element){for(let el=element;el;el=el.parentElement)if(isElementType(el,["button","input","select","textarea","optgroup","option"])){if(el.hasAttribute("disabled"))return!0}else if(isElementType(el,"fieldset")){var ref;if(el.hasAttribute("disabled")&&!(null===(ref=el.querySelector(":scope > legend"))||void 0===ref?void 0:ref.contains(element)))return!0}else if(el.tagName.includes("-")&&el.constructor.formAssociated&&el.hasAttribute("disabled"))return!0;return!1}function getActiveElement(document){const activeElement=document.activeElement;return(null==activeElement?void 0:activeElement.shadowRoot)?getActiveElement(activeElement.shadowRoot):isDisabled(activeElement)?document.ownerDocument?document.ownerDocument.body:document.body:activeElement}function getActiveElementOrBody(document){var ref;return null!==(ref=getActiveElement(document))&&void 0!==ref?ref:document.body}function hasOwnSelection(node){return isElement(node)&&isEditableInputOrTextArea(node)}function isElement(node){return 1===node.nodeType}function wrapEvent(cb,_element){return(0,dom_esm.getConfig)().eventWrapper(cb)}function focusElement(element){const target=function findClosest(element,callback){let el=element;do{if(callback(el))return el;el=el.parentElement}while(el&&el!==element.ownerDocument.body)}(element,isFocusable),activeElement=getActiveElement(element.ownerDocument);(null!=target?target:element.ownerDocument.body)!==activeElement&&(wrapEvent(target?()=>target.focus():()=>{var ref;return null===(ref=activeElement)||void 0===ref?void 0:ref.blur()}),function updateSelectionOnFocus(element){const selection=element.ownerDocument.getSelection();if((null==selection?void 0:selection.focusNode)&&hasOwnSelection(element)){const contenteditable=getContentEditable(selection.focusNode);if(contenteditable){if(!selection.isCollapsed){var ref;const focusNode=3===(null===(ref=contenteditable.firstChild)||void 0===ref?void 0:ref.nodeType)?contenteditable.firstChild:contenteditable;selection.setBaseAndExtent(focusNode,0,focusNode,0)}}else selection.setBaseAndExtent(element,0,element,0)}}(null!=target?target:element.ownerDocument.body))}!function(bracketDict){bracketDict["{"]="}",bracketDict["["]="]"}(bracketDict||(bracketDict={})),function(ApiLevel){ApiLevel[ApiLevel.Trigger=2]="Trigger",ApiLevel[ApiLevel.Call=1]="Call"}(ApiLevel||(ApiLevel={})),function(PointerEventsCheckLevel){PointerEventsCheckLevel[PointerEventsCheckLevel.EachTrigger=4]="EachTrigger",PointerEventsCheckLevel[PointerEventsCheckLevel.EachApiCall=2]="EachApiCall",PointerEventsCheckLevel[PointerEventsCheckLevel.EachTarget=1]="EachTarget",PointerEventsCheckLevel[PointerEventsCheckLevel.Never=0]="Never"}(PointerEventsCheckLevel||(PointerEventsCheckLevel={}));const behavior={};behavior.click=(event,target,instance)=>{const context=target.closest("button,input,label,select,textarea"),control=context&&isElementType(context,"label")&&context.control;return control?()=>{isFocusable(control)&&focusElement(control),instance.dispatchEvent(control,function cloneEvent(event){return new event.constructor(event.type,event)}(event))}:isElementType(target,"input",{type:"file"})?()=>{!function blurElement(element){if(!isFocusable(element))return;getActiveElement(element.ownerDocument)===element&&wrapEvent((()=>element.blur()))}(target),target.dispatchEvent(new(getWindow(target).Event)("fileDialog")),focusElement(target)}:void 0};const UIValue=Symbol("Displayed value in UI"),UISelection=Symbol("Displayed selection in UI"),InitialValue=Symbol("Initial value to compare on blur");function getUIValue(element){return void 0===element[UIValue]?element.value:String(element[UIValue])}function setUIValueClean(element){element[UIValue]=void 0}function clearInitialValue(element){element[InitialValue]=void 0}function setUISelection(element,{focusOffset:focusOffsetParam,anchorOffset:anchorOffsetParam=focusOffsetParam},mode="replace"){const valueLength=getUIValue(element).length,sanitizeOffset=o=>Math.max(0,Math.min(valueLength,o)),anchorOffset="replace"===mode||void 0===element[UISelection]?sanitizeOffset(anchorOffsetParam):element[UISelection].anchorOffset,focusOffset=sanitizeOffset(focusOffsetParam),startOffset=Math.min(anchorOffset,focusOffset),endOffset=Math.max(anchorOffset,focusOffset);if(element[UISelection]={anchorOffset,focusOffset},element.selectionStart===startOffset&&element.selectionEnd===endOffset)return;const startObj=Object.assign(new Number(startOffset),{[UISelection]:!0});try{element.setSelectionRange(startObj,endOffset)}catch{}}function getUISelection(element){var _selectionStart,_selectionEnd,_UISelection;const sel=null!==(_UISelection=element[UISelection])&&void 0!==_UISelection?_UISelection:{anchorOffset:null!==(_selectionStart=element.selectionStart)&&void 0!==_selectionStart?_selectionStart:0,focusOffset:null!==(_selectionEnd=element.selectionEnd)&&void 0!==_selectionEnd?_selectionEnd:0};return{...sel,startOffset:Math.min(sel.anchorOffset,sel.focusOffset),endOffset:Math.max(sel.anchorOffset,sel.focusOffset)}}function setUISelectionClean(element){element[UISelection]=void 0}const timeValue_parseInt=globalThis.parseInt;function build(onlyDigitsValue,index){const hours=onlyDigitsValue.slice(0,index),validHours=Math.min(timeValue_parseInt(hours,10),23),minuteCharacters=onlyDigitsValue.slice(index),parsedMinutes=timeValue_parseInt(minuteCharacters,10),validMinutes=Math.min(parsedMinutes,59);return`${validHours.toString().padStart(2,"0")}:${validMinutes.toString().padStart(2,"0")}`}function isValidDateOrTimeValue(element,value){const clone=element.cloneNode();return clone.value=value,clone.value===value}function getNextCursorPosition(node,offset,direction,inputType){if(isTextNode(node)&&offset+direction>=0&&offset+direction<=node.nodeValue.length)return{node,offset:offset+direction};const nextNode=getNextCharacterContentNode(node,offset,direction);if(nextNode){if(isTextNode(nextNode))return{node:nextNode,offset:direction>0?Math.min(1,nextNode.nodeValue.length):Math.max(nextNode.nodeValue.length-1,0)};if(isElementType(nextNode,"br")){const nextPlusOne=getNextCharacterContentNode(nextNode,void 0,direction);return nextPlusOne?isTextNode(nextPlusOne)?{node:nextPlusOne,offset:direction>0?0:nextPlusOne.nodeValue.length}:direction<0&&isElementType(nextPlusOne,"br")?{node:nextNode.parentNode,offset:getOffset(nextNode)}:{node:nextPlusOne.parentNode,offset:getOffset(nextPlusOne)+(direction>0?0:1)}:direction<0&&"deleteContentBackward"===inputType?{node:nextNode.parentNode,offset:getOffset(nextNode)}:void 0}return{node:nextNode.parentNode,offset:getOffset(nextNode)+(direction>0?1:0)}}}function getNextCharacterContentNode(node,offset,direction){const nextOffset=Number(offset)+(direction<0?-1:0);return void 0!==offset&&cursor_isElement(node)&&nextOffset>=0&&nextOffset<node.children.length&&(node=node.children[nextOffset]),function walkNodes(node,direction,callback){for(;;){var ref;const sibling=node[`${direction}Sibling`];if(sibling){if(callback(node=getDescendant(sibling,"next"===direction?"first":"last")))return node}else{if(!node.parentNode||cursor_isElement(node.parentNode)&&(isContentEditable(node.parentNode)||node.parentNode===(null===(ref=node.ownerDocument)||void 0===ref?void 0:ref.body)))break;node=node.parentNode}}}(node,1===direction?"next":"previous",isTreatedAsCharacterContent)}function isTreatedAsCharacterContent(node){if(isTextNode(node))return!0;if(cursor_isElement(node)){if(isElementType(node,["input","textarea"]))return"hidden"!==node.type;if(isElementType(node,"br"))return!0}return!1}function getOffset(node){let i=0;for(;node.previousSibling;)i++,node=node.previousSibling;return i}function cursor_isElement(node){return 1===node.nodeType}function isTextNode(node){return 3===node.nodeType}function getDescendant(node,direction){for(;node.hasChildNodes();)node=node[`${direction}Child`];return node}const TrackChanges=Symbol("Track programmatic changes for React workaround");function startTrackValue(element){(function isReact17Element(element){return Object.getOwnPropertyNames(element).some((k=>k.startsWith("__react")))&&17===getWindow(element).REACT_VERSION})(element)&&(element[TrackChanges]={previousValue:String(element.value),tracked:[]})}function commitValueAfterInput(element,cursorOffset){var ref;const changes=element[TrackChanges];if(element[TrackChanges]=void 0,!(null==changes||null===(ref=changes.tracked)||void 0===ref?void 0:ref.length))return;const isJustReactStateUpdate=2===changes.tracked.length&&changes.tracked[0]===changes.previousValue&&changes.tracked[1]===element.value;isJustReactStateUpdate||setUIValueClean(element),function hasUISelection(element){return!!element[UISelection]}(element)&&setUISelection(element,{focusOffset:isJustReactStateUpdate?cursorOffset:element.value.length})}function getTargetTypeAndSelection(node){const element=function getTargetTypeAndSelection_getElement(node){return 1===node.nodeType?node:node.parentElement}(node);if(element&&hasOwnSelection(element))return{type:"input",selection:getUISelection(element)};const selection=null==element?void 0:element.ownerDocument.getSelection();return{type:getContentEditable(node)&&(null==selection?void 0:selection.anchorNode)&&getContentEditable(selection.anchorNode)?"contenteditable":"default",selection}}function setSelection({focusNode,focusOffset,anchorNode=focusNode,anchorOffset=focusOffset}){var ref,ref1;if("input"===getTargetTypeAndSelection(focusNode).type)return setUISelection(focusNode,{anchorOffset,focusOffset});null===(ref1=null===(ref=anchorNode.ownerDocument)||void 0===ref?void 0:ref.getSelection())||void 0===ref1||ref1.setBaseAndExtent(anchorNode,anchorOffset,focusNode,focusOffset)}function isDateOrTime(element){return isElementType(element,"input")&&["date","time"].includes(element.type)}function input(instance,element,data,inputType="insertText"){const inputRange=function getInputRange(focusNode){const typeAndSelection=getTargetTypeAndSelection(focusNode);return"input"===typeAndSelection.type?typeAndSelection.selection:"contenteditable"===typeAndSelection.type?null===(ref=typeAndSelection.selection)||void 0===ref?void 0:ref.getRangeAt(0):void 0;var ref}(element);if(inputRange){if(!isDateOrTime(element)){if(!instance.dispatchUIEvent(element,"beforeinput",{inputType,data}))return}"startContainer"in inputRange?function editContenteditable(instance,element,inputRange,data,inputType){let del=!1;if(inputRange.collapsed){if(["deleteContentBackward","deleteContentForward"].includes(inputType)){const nextPosition=getNextCursorPosition(inputRange.startContainer,inputRange.startOffset,"deleteContentBackward"===inputType?-1:1,inputType);if(nextPosition){del=!0;const delRange=inputRange.cloneRange();delRange.comparePoint(nextPosition.node,nextPosition.offset)<0?delRange.setStart(nextPosition.node,nextPosition.offset):delRange.setEnd(nextPosition.node,nextPosition.offset),delRange.deleteContents()}}}else del=!0,inputRange.deleteContents();if(data)if(3===inputRange.endContainer.nodeType){const offset=inputRange.endOffset;inputRange.endContainer.insertData(offset,data),inputRange.setStart(inputRange.endContainer,offset+data.length),inputRange.setEnd(inputRange.endContainer,offset+data.length)}else{const text=element.ownerDocument.createTextNode(data);inputRange.insertNode(text),inputRange.setStart(text,data.length),inputRange.setEnd(text,data.length)}(del||data)&&instance.dispatchUIEvent(element,"input",{inputType})}(instance,element,inputRange,data,inputType):function editInputElement(instance,element,inputRange,data,inputType){let dataToInsert=data;if(function supportsMaxLength(element){return isElementType(element,"textarea")||isElementType(element,"input")&&element.type in maxLengthSupportedTypes}(element)){const maxLength=function getMaxLength(element){var ref;const attr=null!==(ref=element.getAttribute("maxlength"))&&void 0!==ref?ref:"";return/^\d+$/.test(attr)&&Number(attr)>=0?Number(attr):void 0}(element);if(void 0!==maxLength&&data.length>0){const spaceUntilMaxLength=maxLength-element.value.length;if(!(spaceUntilMaxLength>0))return;dataToInsert=data.substring(0,spaceUntilMaxLength)}}const{newValue,newOffset,oldValue}=function calculateNewValue(inputData,node,{startOffset,endOffset},inputType){const value=getUIValue(node),prologEnd=Math.max(0,startOffset===endOffset&&"deleteContentBackward"===inputType?startOffset-1:startOffset),prolog=value.substring(0,prologEnd),epilogStart=Math.min(value.length,startOffset===endOffset&&"deleteContentForward"===inputType?startOffset+1:endOffset),epilog=value.substring(epilogStart,value.length);let newValue=`${prolog}${inputData}${epilog}`,newOffset=prologEnd+inputData.length;if(isElementType(node,"input",{type:"time"})){const builtValue=function buildTimeValue(value){const onlyDigitsValue=value.replace(/\D/g,"");if(onlyDigitsValue.length<2)return value;const firstDigit=timeValue_parseInt(onlyDigitsValue[0],10),secondDigit=timeValue_parseInt(onlyDigitsValue[1],10);if(firstDigit>=3||2===firstDigit&&secondDigit>=4){let index;return index=firstDigit>=3?1:2,build(onlyDigitsValue,index)}return 2===value.length?value:build(onlyDigitsValue,2)}(newValue);""!==builtValue&&isValidDateOrTimeValue(node,builtValue)&&(newValue=builtValue,newOffset=builtValue.length)}return{oldValue:value,newValue,newOffset}}(dataToInsert,element,inputRange,inputType);if(newValue===oldValue&&newOffset===inputRange.startOffset&&newOffset===inputRange.endOffset)return;if(isElementType(element,"input",{type:"number"})&&!function isValidNumberInput(value){var ref,ref1;const valueParts=value.split("e",2);return!(/[^\d.\-e]/.test(value)||Number(null===(ref=value.match(/-/g))||void 0===ref?void 0:ref.length)>2||Number(null===(ref1=value.match(/\./g))||void 0===ref1?void 0:ref1.length)>1||valueParts[1]&&!/^-?\d*$/.test(valueParts[1]))}(newValue))return;(function setUIValue(element,value){void 0===element[InitialValue]&&(element[InitialValue]=element.value),element[UIValue]=value,element.value=Object.assign(new String(value),{[UIValue]:!0})})(element,newValue),setSelection({focusNode:element,anchorOffset:newOffset,focusOffset:newOffset}),isDateOrTime(element)?isValidDateOrTimeValue(element,newValue)&&(commitInput(instance,element,newOffset,{}),instance.dispatchUIEvent(element,"change"),clearInitialValue(element)):commitInput(instance,element,newOffset,{data,inputType})}(instance,element,inputRange,data,inputType)}}function commitInput(instance,element,newOffset,inputInit){instance.dispatchUIEvent(element,"input",inputInit),commitValueAfterInput(element,newOffset)}function isVisible(element){const window=getWindow(element);for(let el=element;null==el?void 0:el.ownerDocument;el=el.parentElement){const{display,visibility}=window.getComputedStyle(el);if("none"===display)return!1;if("hidden"===visibility)return!1}return!0}function moveSelection(node,direction){if(hasOwnSelection(node)){const selection=getUISelection(node);setSelection({focusNode:node,focusOffset:selection.startOffset===selection.endOffset?selection.focusOffset+direction:direction<0?selection.startOffset:selection.endOffset})}else{const selection1=node.ownerDocument.getSelection();if(!(null==selection1?void 0:selection1.focusNode))return;if(selection1.isCollapsed){const nextPosition=getNextCursorPosition(selection1.focusNode,selection1.focusOffset,direction);nextPosition&&setSelection({focusNode:nextPosition.node,focusOffset:nextPosition.offset})}else selection1[direction<0?"collapseToStart":"collapseToEnd"]()}}function selectAll(target){if(hasOwnSelection(target))return setSelection({focusNode:target,anchorOffset:0,focusOffset:getUIValue(target).length});var ref;const focusNode=null!==(ref=getContentEditable(target))&&void 0!==ref?ref:target.ownerDocument.body;setSelection({focusNode,anchorOffset:0,focusOffset:focusNode.childNodes.length})}function setSelectionRange(element,anchorOffset,focusOffset){var ref;if(hasOwnSelection(element))return setSelection({focusNode:element,anchorOffset,focusOffset});if(isContentEditable(element)&&3===(null===(ref=element.firstChild)||void 0===ref?void 0:ref.nodeType))return setSelection({focusNode:element.firstChild,anchorOffset,focusOffset});throw new Error("Not implemented. The result of this interaction is unreliable.")}function walkRadio(instance,el,direction){const window=getWindow(el),group=Array.from(el.ownerDocument.querySelectorAll(el.name?`input[type="radio"][name="${window.CSS.escape(el.name)}"]`:'input[type="radio"][name=""], input[type="radio"]:not([name])'));for(let i=group.findIndex((e=>e===el))+direction;;i+=direction){if(group[i]||(i=direction>0?0:group.length-1),group[i]===el)return;isDisabled(group[i])||(focusElement(group[i]),instance.dispatchUIEvent(group[i],"click"))}}behavior.cut=(event,target,instance)=>()=>{isEditable(target)&&input(instance,target,"","deleteByCut")},behavior.keydown=(event,target,instance)=>{var ref,ref1;return null!==(ref1=null===(ref=keydownBehavior[event.key])||void 0===ref?void 0:ref.call(keydownBehavior,event,target,instance))&&void 0!==ref1?ref1:combinationBehavior(event,target,instance)};const keydownBehavior={ArrowDown:(event,target,instance)=>{if(isElementType(target,"input",{type:"radio"}))return()=>walkRadio(instance,target,-1)},ArrowLeft:(event,target,instance)=>isElementType(target,"input",{type:"radio"})?()=>walkRadio(instance,target,-1):()=>moveSelection(target,-1),ArrowRight:(event,target,instance)=>isElementType(target,"input",{type:"radio"})?()=>walkRadio(instance,target,1):()=>moveSelection(target,1),ArrowUp:(event,target,instance)=>{if(isElementType(target,"input",{type:"radio"}))return()=>walkRadio(instance,target,1)},Backspace:(event,target,instance)=>{if(isEditable(target))return()=>{input(instance,target,"","deleteContentBackward")}},Delete:(event,target,instance)=>{if(isEditable(target))return()=>{input(instance,target,"","deleteContentForward")}},End:(event,target)=>{if(isElementType(target,["input","textarea"])||isContentEditable(target))return()=>{var ref,ref1;const newPos=null!==(ref1=null===(ref=function getValueOrTextContent(element){return element?isContentEditable(element)?element.textContent:getUIValue(element):null}(target))||void 0===ref?void 0:ref.length)&&void 0!==ref1?ref1:0;setSelectionRange(target,newPos,newPos)}},Home:(event,target)=>{if(isElementType(target,["input","textarea"])||isContentEditable(target))return()=>{setSelectionRange(target,0,0)}},PageDown:(event,target)=>{if(isElementType(target,["input"]))return()=>{const newPos=getUIValue(target).length;setSelectionRange(target,newPos,newPos)}},PageUp:(event,target)=>{if(isElementType(target,["input"]))return()=>{setSelectionRange(target,0,0)}},Tab:(event,target,instance)=>()=>{const dest=function getTabDestination(activeElement,shift){const document=activeElement.ownerDocument,focusableElements=document.querySelectorAll(FOCUSABLE_SELECTOR),enabledElements=Array.from(focusableElements).filter((el=>el===activeElement||!(Number(el.getAttribute("tabindex"))<0||isDisabled(el))));Number(activeElement.getAttribute("tabindex"))>=0&&enabledElements.sort(((a,b)=>{const i=Number(a.getAttribute("tabindex")),j=Number(b.getAttribute("tabindex"));return i===j?0:0===i?1:0===j?-1:i-j}));const checkedRadio={};let prunedElements=[document.body];const activeRadioGroup=isElementType(activeElement,"input",{type:"radio"})?activeElement.name:void 0;enabledElements.forEach((currentElement=>{const el=currentElement;if(isElementType(el,"input",{type:"radio"})&&el.name){if(el===activeElement)return void prunedElements.push(el);if(el.name===activeRadioGroup)return;if(el.checked)return prunedElements=prunedElements.filter((e=>!isElementType(e,"input",{type:"radio",name:el.name}))),prunedElements.push(el),void(checkedRadio[el.name]=el);if(void 0!==checkedRadio[el.name])return}prunedElements.push(el)}));for(let index=prunedElements.findIndex((el=>el===activeElement));;)if(index+=shift?-1:1,index===prunedElements.length?index=0:-1===index&&(index=prunedElements.length-1),prunedElements[index]===activeElement||prunedElements[index]===document.body||isVisible(prunedElements[index]))return prunedElements[index]}(target,instance.system.keyboard.modifiers.Shift);focusElement(dest),hasOwnSelection(dest)&&setUISelection(dest,{anchorOffset:0,focusOffset:dest.value.length})}},combinationBehavior=(event,target,instance)=>{if("KeyA"===event.code&&instance.system.keyboard.modifiers.Control)return()=>selectAll(target)};behavior.keypress=(event,target,instance)=>{if("Enter"===event.key){if(isElementType(target,"button")||isElementType(target,"input")&&ClickInputOnEnter.includes(target.type)||isElementType(target,"a")&&Boolean(target.href))return()=>{instance.dispatchUIEvent(target,"click")};if(isElementType(target,"input")){const form=target.form,submit=null==form?void 0:form.querySelector('input[type="submit"], button:not([type]), button[type="submit"]');return submit?()=>instance.dispatchUIEvent(submit,"click"):form&&SubmitSingleInputOnEnter.includes(target.type)&&1===form.querySelectorAll("input").length?()=>instance.dispatchUIEvent(form,"submit"):void 0}}if(isEditable(target)){const inputType="Enter"===event.key?isContentEditable(target)&&!instance.system.keyboard.modifiers.Shift?"insertParagraph":"insertLineBreak":"insertText",inputData="Enter"===event.key?"\n":event.key;return()=>input(instance,target,inputData,inputType)}};const ClickInputOnEnter=["button","color","file","image","reset","submit"],SubmitSingleInputOnEnter=["email","month","password","search","tel","text","url","week"];behavior.keyup=(event,target,instance)=>{var ref;return null===(ref=keyupBehavior[event.key])||void 0===ref?void 0:ref.call(keyupBehavior,event,target,instance)};const keyupBehavior={" ":(event,target,instance)=>{if(isClickableInput(target))return()=>instance.dispatchUIEvent(target,"click")}};behavior.paste=(event,target,instance)=>{if(isEditable(target))return()=>{var ref;const insertData=null===(ref=event.clipboardData)||void 0===ref?void 0:ref.getData("text");insertData&&input(instance,target,insertData,"insertFromPaste")}};const eventMap={...__webpack_require__("./node_modules/@testing-library/dom/dist/event-map.js").Hx,click:{EventType:"PointerEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},auxclick:{EventType:"PointerEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},contextmenu:{EventType:"PointerEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},beforeInput:{EventType:"InputEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}}},eventMapKeys=Object.fromEntries(Object.keys(eventMap).map((k=>[k.toLowerCase(),k])));function getEventClass(type){const k=eventMapKeys[type];return k&&eventMap[k].EventType}const mouseEvents=["MouseEvent","PointerEvent"];const eventInitializer={ClipboardEvent:[function initClipboardEvent(event,{clipboardData}){assignProps(event,{clipboardData})}],InputEvent:[initUIEvent,function initInputEvent(event,{data,inputType,isComposing}){assignProps(event,{data,isComposing:Boolean(isComposing),inputType:String(inputType)})}],MouseEvent:[initUIEvent,initUIEventModififiers,initMouseEvent],PointerEvent:[initUIEvent,initUIEventModififiers,initMouseEvent,function initPointerEvent(event,{pointerId,width,height,pressure,tangentialPressure,tiltX,tiltY,twist,pointerType,isPrimary}){assignProps(event,{pointerId:sanitizeNumber(pointerId),width:sanitizeNumber(width),height:sanitizeNumber(height),pressure:sanitizeNumber(pressure),tangentialPressure:sanitizeNumber(tangentialPressure),tiltX:sanitizeNumber(tiltX),tiltY:sanitizeNumber(tiltY),twist:sanitizeNumber(twist),pointerType:String(pointerType),isPrimary:Boolean(isPrimary)})}],KeyboardEvent:[initUIEvent,initUIEventModififiers,function initKeyboardEvent(event,{key,code,location,repeat,isComposing,charCode}){assignProps(event,{key:String(key),code:String(code),location:sanitizeNumber(location),repeat:Boolean(repeat),isComposing:Boolean(isComposing),charCode})}]};function createEvent(type,target,init){var ref;const window=getWindow(target),{EventType,defaultInit}=eventMap[eventMapKeys[type]],event=new(function getEventConstructors(window){var _Event;const Event=null!==(_Event=window.Event)&&void 0!==_Event?_Event:class Event{};var _AnimationEvent;const AnimationEvent=null!==(_AnimationEvent=window.AnimationEvent)&&void 0!==_AnimationEvent?_AnimationEvent:class AnimationEvent extends Event{};var _ClipboardEvent;const ClipboardEvent=null!==(_ClipboardEvent=window.ClipboardEvent)&&void 0!==_ClipboardEvent?_ClipboardEvent:class ClipboardEvent extends Event{};var _PopStateEvent;const PopStateEvent=null!==(_PopStateEvent=window.PopStateEvent)&&void 0!==_PopStateEvent?_PopStateEvent:class PopStateEvent extends Event{};var _ProgressEvent;const ProgressEvent=null!==(_ProgressEvent=window.ProgressEvent)&&void 0!==_ProgressEvent?_ProgressEvent:class ProgressEvent extends Event{};var _TransitionEvent;const TransitionEvent=null!==(_TransitionEvent=window.TransitionEvent)&&void 0!==_TransitionEvent?_TransitionEvent:class TransitionEvent extends Event{};var _UIEvent;const UIEvent=null!==(_UIEvent=window.UIEvent)&&void 0!==_UIEvent?_UIEvent:class UIEvent extends Event{};var _CompositionEvent;const CompositionEvent=null!==(_CompositionEvent=window.CompositionEvent)&&void 0!==_CompositionEvent?_CompositionEvent:class CompositionEvent extends UIEvent{};var _FocusEvent;const FocusEvent=null!==(_FocusEvent=window.FocusEvent)&&void 0!==_FocusEvent?_FocusEvent:class FocusEvent extends UIEvent{};var _InputEvent;const InputEvent=null!==(_InputEvent=window.InputEvent)&&void 0!==_InputEvent?_InputEvent:class InputEvent extends UIEvent{};var _KeyboardEvent;const KeyboardEvent=null!==(_KeyboardEvent=window.KeyboardEvent)&&void 0!==_KeyboardEvent?_KeyboardEvent:class KeyboardEvent extends UIEvent{};var _MouseEvent;const MouseEvent=null!==(_MouseEvent=window.MouseEvent)&&void 0!==_MouseEvent?_MouseEvent:class MouseEvent extends UIEvent{};var _DragEvent;const DragEvent=null!==(_DragEvent=window.DragEvent)&&void 0!==_DragEvent?_DragEvent:class DragEvent extends MouseEvent{};var _PointerEvent;const PointerEvent=null!==(_PointerEvent=window.PointerEvent)&&void 0!==_PointerEvent?_PointerEvent:class PointerEvent extends MouseEvent{};var _TouchEvent;const TouchEvent=null!==(_TouchEvent=window.TouchEvent)&&void 0!==_TouchEvent?_TouchEvent:class TouchEvent extends UIEvent{};return{Event,AnimationEvent,ClipboardEvent,PopStateEvent,ProgressEvent,TransitionEvent,UIEvent,CompositionEvent,FocusEvent,InputEvent,KeyboardEvent,MouseEvent,DragEvent,PointerEvent,TouchEvent}}(window)[EventType])(type,defaultInit);return null===(ref=eventInitializer[EventType])||void 0===ref||ref.forEach((f=>f(event,null!=init?init:{}))),event}function assignProps(obj,props){for(const[key,value]of Object.entries(props))Object.defineProperty(obj,key,{get:()=>null!=value?value:null})}function sanitizeNumber(n){return Number(null!=n?n:0)}function initUIEvent(event,{view,detail}){assignProps(event,{view,detail:sanitizeNumber(null!=detail?detail:0)})}function initUIEventModififiers(event,{altKey,ctrlKey,metaKey,shiftKey,modifierAltGraph,modifierCapsLock,modifierFn,modifierFnLock,modifierNumLock,modifierScrollLock,modifierSymbol,modifierSymbolLock}){assignProps(event,{altKey:Boolean(altKey),ctrlKey:Boolean(ctrlKey),metaKey:Boolean(metaKey),shiftKey:Boolean(shiftKey),getModifierState:k=>Boolean({Alt:altKey,AltGraph:modifierAltGraph,CapsLock:modifierCapsLock,Control:ctrlKey,Fn:modifierFn,FnLock:modifierFnLock,Meta:metaKey,NumLock:modifierNumLock,ScrollLock:modifierScrollLock,Shift:shiftKey,Symbol:modifierSymbol,SymbolLock:modifierSymbolLock}[k])})}function initMouseEvent(event,{x,y,screenX,screenY,clientX=x,clientY=y,button,buttons,relatedTarget}){assignProps(event,{screenX:sanitizeNumber(screenX),screenY:sanitizeNumber(screenY),clientX:sanitizeNumber(clientX),x:sanitizeNumber(clientX),clientY:sanitizeNumber(clientY),y:sanitizeNumber(clientY),button:sanitizeNumber(button),buttons:sanitizeNumber(buttons),relatedTarget})}function dispatchUIEvent(target,type,init,preventDefault=!1){(function isMouseEvent(type){return mouseEvents.includes(getEventClass(type))}(type)||function isKeyboardEvent(type){return"KeyboardEvent"===getEventClass(type)}(type))&&(init={...init,...this.system.getUIEventModifiers()});const event=createEvent(type,target,init);return dispatchEvent.call(this,target,event,preventDefault)}function dispatchEvent(target,event,preventDefault=!1){var ref;const type=event.type,behaviorImplementation=preventDefault?()=>{}:null===(ref=behavior[type])||void 0===ref?void 0:ref(event,target,this);if(behaviorImplementation){event.preventDefault();let defaultPrevented=!1;return Object.defineProperty(event,"defaultPrevented",{get:()=>defaultPrevented}),Object.defineProperty(event,"preventDefault",{value:()=>{defaultPrevented=event.cancelable}}),wrapEvent((()=>target.dispatchEvent(event))),defaultPrevented||behaviorImplementation(),!defaultPrevented}return wrapEvent((()=>target.dispatchEvent(event)))}const Interceptor=Symbol("Interceptor for programmatical calls");function prepareInterceptor(element,propName,interceptorImpl){const prototypeDescriptor=Object.getOwnPropertyDescriptor(element.constructor.prototype,propName),objectDescriptor=Object.getOwnPropertyDescriptor(element,propName),target=(null==prototypeDescriptor?void 0:prototypeDescriptor.set)?"set":"value";if("function"!=typeof(null==prototypeDescriptor?void 0:prototypeDescriptor[target])||prototypeDescriptor[target][Interceptor])throw new Error(`Element ${element.tagName} does not implement "${String(propName)}".`);function intercept(...args){const{applyNative=!1,realArgs,then}=interceptorImpl.call(this,...args),realFunc=(!applyNative&&objectDescriptor||prototypeDescriptor)[target];"set"===target?realFunc.call(this,realArgs):realFunc.call(this,...realArgs),null==then||then()}intercept[Interceptor]=Interceptor,Object.defineProperty(element,propName,{...null!=objectDescriptor?objectDescriptor:prototypeDescriptor,[target]:intercept})}function prepareValueInterceptor(element){prepareInterceptor(element,"value",(function interceptorImpl(v){const isUI=function isUIValue(value){return"object"==typeof value&&UIValue in value}(v);return isUI&&startTrackValue(this),{applyNative:!!isUI,realArgs:sanitizeValue(this,v),then:isUI?void 0:()=>function trackOrSetValue(element,v){var ref,ref1;null===(ref=element[TrackChanges])||void 0===ref||null===(ref1=ref.tracked)||void 0===ref1||ref1.push(v),element[TrackChanges]||(setUIValueClean(element),setUISelection(element,{focusOffset:v.length}))}(this,String(v))}}))}function sanitizeValue(element,v){return isElementType(element,"input",{type:"number"})&&""!==String(v)&&!Number.isNaN(Number(v))?String(Number(v)):String(v)}function prepareSelectionInterceptor(element){prepareInterceptor(element,"setSelectionRange",(function interceptorImpl(start,...others){const isUI=function isUISelectionStart(start){return!!start&&"object"==typeof start&&UISelection in start}(start);return{applyNative:!!isUI,realArgs:[Number(start),...others],then:()=>isUI?void 0:setUISelectionClean(element)}})),prepareInterceptor(element,"selectionStart",(function interceptorImpl(v){return{realArgs:v,then:()=>setUISelectionClean(element)}})),prepareInterceptor(element,"selectionEnd",(function interceptorImpl(v){return{realArgs:v,then:()=>setUISelectionClean(element)}})),prepareInterceptor(element,"select",(function interceptorImpl(){return{realArgs:[],then:()=>function setUISelectionRaw(element,selection){element[UISelection]=selection}(element,{anchorOffset:0,focusOffset:getUIValue(element).length})}}))}const isPrepared=Symbol("Node prepared with document state workarounds");function prepareDocument(document){document[isPrepared]||(document.addEventListener("focus",(e=>{prepareElement(e.target)}),{capture:!0,passive:!0}),document.activeElement&&prepareElement(document.activeElement),document.addEventListener("blur",(e=>{const el=e.target,initialValue=function getInitialValue(element){return element[InitialValue]}(el);void 0!==initialValue&&(el.value!==initialValue&&function dispatchDOMEvent(target,type,init){const event=createEvent(type,target,init);wrapEvent((()=>target.dispatchEvent(event)))}(el,"change"),clearInitialValue(el))}),{capture:!0,passive:!0}),document[isPrepared]=isPrepared)}function prepareElement(el){el[isPrepared]||(isElementType(el,["input","textarea"])&&(prepareValueInterceptor(el),prepareSelectionInterceptor(el),function prepareRangeTextInterceptor(element){prepareInterceptor(element,"setRangeText",(function interceptorImpl(...realArgs){return{realArgs,then:()=>{setUIValueClean(element),setUISelectionClean(element)}}}))}(el)),el[isPrepared]=isPrepared)}function wait(config){const delay=config.delay;if("number"==typeof delay)return Promise.all([new Promise((resolve=>globalThis.setTimeout((()=>resolve()),delay))),config.advanceTimers(delay)])}var _pressed,_code,_code1,DOM_KEY_LOCATION;!function(DOM_KEY_LOCATION){DOM_KEY_LOCATION[DOM_KEY_LOCATION.STANDARD=0]="STANDARD",DOM_KEY_LOCATION[DOM_KEY_LOCATION.LEFT=1]="LEFT",DOM_KEY_LOCATION[DOM_KEY_LOCATION.RIGHT=2]="RIGHT",DOM_KEY_LOCATION[DOM_KEY_LOCATION.NUMPAD=3]="NUMPAD"}(DOM_KEY_LOCATION||(DOM_KEY_LOCATION={}));const modifierKeys=["Alt","AltGraph","Control","Fn","Meta","Shift","Symbol"];function isModifierKey(key){return modifierKeys.includes(key)}const modifierLocks=["CapsLock","FnLock","NumLock","ScrollLock","SymbolLock"];function isModifierLock(key){return modifierLocks.includes(key)}class KeyboardHost{isKeyPressed(keyDef){return!!this.pressed[String(keyDef.code)]}getPressedKeys(){return Object.values(this.pressed).map((p=>p.keyDef))}async keydown(instance,keyDef){const key=String(keyDef.key),code=String(keyDef.code),target=getActiveElementOrBody(instance.config.document);var ref;this.setKeydownTarget(target),null!==(ref=(_pressed=this.pressed)[_code=code])&&void 0!==ref||(_pressed[_code]={keyDef,unpreventedDefault:!1}),isModifierKey(key)&&(this.modifiers[key]=!0);const unprevented=instance.dispatchUIEvent(target,"keydown",{key,code});isModifierLock(key)&&!this.modifiers[key]&&(this.modifiers[key]=!0,this.modifierLockStart[key]=!0),(_code1=this.pressed[code]).unpreventedDefault||(_code1.unpreventedDefault=unprevented),unprevented&&this.hasKeyPress(key)&&instance.dispatchUIEvent(getActiveElementOrBody(instance.config.document),"keypress",{key,code,charCode:"Enter"===keyDef.key?13:String(keyDef.key).charCodeAt(0)})}async keyup(instance,keyDef){const key=String(keyDef.key),code=String(keyDef.code),unprevented=this.pressed[code].unpreventedDefault;delete this.pressed[code],isModifierKey(key)&&!Object.values(this.pressed).find((p=>p.keyDef.key===key))&&(this.modifiers[key]=!1),instance.dispatchUIEvent(getActiveElementOrBody(instance.config.document),"keyup",{key,code},!unprevented),isModifierLock(key)&&this.modifiers[key]&&(this.modifierLockStart[key]?this.modifierLockStart[key]=!1:this.modifiers[key]=!1)}setKeydownTarget(target){target!==this.lastKeydownTarget&&(this.carryChar=""),this.lastKeydownTarget=target}hasKeyPress(key){return!(1!==key.length&&"Enter"!==key||this.modifiers.Control||this.modifiers.Alt)}constructor(system){this.modifiers={Alt:!1,AltGraph:!1,CapsLock:!1,Control:!1,Fn:!1,FnLock:!1,Meta:!1,NumLock:!1,ScrollLock:!1,Shift:!1,Symbol:!1,SymbolLock:!1},this.pressed={},this.carryChar="",this.lastKeydownTarget=void 0,this.modifierLockStart={},this.system=system}}const defaultKeyMap=[..."0123456789".split("").map((c=>({code:`Digit${c}`,key:c}))),...")!@#$%^&*(".split("").map(((c,i)=>({code:`Digit${i}`,key:c,shiftKey:!0}))),..."abcdefghijklmnopqrstuvwxyz".split("").map((c=>({code:`Key${c.toUpperCase()}`,key:c}))),..."ABCDEFGHIJKLMNOPQRSTUVWXYZ".split("").map((c=>({code:`Key${c}`,key:c,shiftKey:!0}))),{code:"Space",key:" "},{code:"AltLeft",key:"Alt",location:DOM_KEY_LOCATION.LEFT},{code:"AltRight",key:"Alt",location:DOM_KEY_LOCATION.RIGHT},{code:"ShiftLeft",key:"Shift",location:DOM_KEY_LOCATION.LEFT},{code:"ShiftRight",key:"Shift",location:DOM_KEY_LOCATION.RIGHT},{code:"ControlLeft",key:"Control",location:DOM_KEY_LOCATION.LEFT},{code:"ControlRight",key:"Control",location:DOM_KEY_LOCATION.RIGHT},{code:"MetaLeft",key:"Meta",location:DOM_KEY_LOCATION.LEFT},{code:"MetaRight",key:"Meta",location:DOM_KEY_LOCATION.RIGHT},{code:"OSLeft",key:"OS",location:DOM_KEY_LOCATION.LEFT},{code:"OSRight",key:"OS",location:DOM_KEY_LOCATION.RIGHT},{code:"Tab",key:"Tab"},{code:"CapsLock",key:"CapsLock"},{code:"Backspace",key:"Backspace"},{code:"Enter",key:"Enter"},{code:"Escape",key:"Escape"},{code:"ArrowUp",key:"ArrowUp"},{code:"ArrowDown",key:"ArrowDown"},{code:"ArrowLeft",key:"ArrowLeft"},{code:"ArrowRight",key:"ArrowRight"},{code:"Home",key:"Home"},{code:"End",key:"End"},{code:"Delete",key:"Delete"},{code:"PageUp",key:"PageUp"},{code:"PageDown",key:"PageDown"},{code:"Fn",key:"Fn"},{code:"Symbol",key:"Symbol"},{code:"AltRight",key:"AltGraph"}];class Buttons{getButtons(){let v=0;for(const button of Object.keys(this.pressed))v|=2**Number(button);return v}down(keyDef){const button=getMouseButtonId(keyDef.button);if(!(button in this.pressed))return this.pressed[button]=[keyDef],button;this.pressed[button].push(keyDef)}up(keyDef){const button=getMouseButtonId(keyDef.button);if(button in this.pressed&&(this.pressed[button]=this.pressed[button].filter((k=>k.name!==keyDef.name)),0===this.pressed[button].length))return delete this.pressed[button],button}constructor(){this.pressed={}}}const MouseButton={primary:0,secondary:1,auxiliary:2,back:3,X1:3,forward:4,X2:4};function getMouseButtonId(button=0){return button in MouseButton?MouseButton[button]:Number(button)}const MouseButtonFlip={1:2,2:1};function getMouseEventButton(button){return(button=getMouseButtonId(button))in MouseButtonFlip?MouseButtonFlip[button]:button}class Device{get countPressed(){return this.pressedKeys.size}isPressed(keyDef){return this.pressedKeys.has(keyDef.name)}addPressed(keyDef){return this.pressedKeys.add(keyDef.name)}removePressed(keyDef){return this.pressedKeys.delete(keyDef.name)}constructor(){this.pressedKeys=new Set}}function getTreeDiff(a,b){const treeA=[];for(let el=a;el;el=el.parentElement)treeA.push(el);const treeB=[];for(let el1=b;el1;el1=el1.parentElement)treeB.push(el1);let i=0;for(;!(i>=treeA.length||i>=treeB.length||treeA[treeA.length-1-i]!==treeB[treeB.length-1-i]);i++);return[treeA.slice(0,treeA.length-i),treeB.slice(0,treeB.length-i),treeB.slice(treeB.length-i)]}function resolveCaretPosition({target,node,offset}){return hasOwnSelection(target)?{node:target,offset:null!=offset?offset:getUIValue(target).length}:node?{node,offset:null!=offset?offset:3===node.nodeType?node.nodeValue.length:node.childNodes.length}:findNodeAtTextOffset(target,offset)}function findNodeAtTextOffset(node,offset,isRoot=!0){let i=void 0===offset?node.childNodes.length-1:0;const step=void 0===offset?-1:1;for(;void 0===offset?i>=(isRoot?Math.max(node.childNodes.length-1,0):0):i<=node.childNodes.length;){if(offset&&i===node.childNodes.length)throw new Error("The given offset is out of bounds.");const c=node.childNodes.item(i),text=String(c.textContent);if(text.length)if(void 0!==offset&&text.length<offset)offset-=text.length;else{if(1===c.nodeType)return findNodeAtTextOffset(c,offset,!1);if(3===c.nodeType)return{node:c,offset:null!=offset?offset:c.nodeValue.length}}i+=step}return{node,offset:node.childNodes.length}}function setSelectionPerMouseDown({document,target,clickCount,node,offset}){if(function hasNoSelection(node){return isElement(node)&&isClickableInput(node)}(target))return;const targetHasOwnSelection=hasOwnSelection(target),text=String(targetHasOwnSelection?getUIValue(target):target.textContent),[start,end]=node?[offset,offset]:function getTextRange(text,pos,clickCount){if(clickCount%3==1||0===text.length)return[pos,pos];const textPos=null!=pos?pos:text.length;if(clickCount%3==2)return[textPos-text.substr(0,pos).match(/(\w+|\s+|\W)?$/)[0].length,void 0===pos?pos:pos+text.substr(pos).match(/^(\w+|\s+|\W)?/)[0].length];return[textPos-text.substr(0,pos).match(/[^\r\n]*$/)[0].length,void 0===pos?pos:pos+text.substr(pos).match(/^[^\r\n]*/)[0].length]}(text,offset,clickCount);if(targetHasOwnSelection)return setUISelection(target,{anchorOffset:null!=start?start:text.length,focusOffset:null!=end?end:text.length}),{node:target,start:null!=start?start:0,end:null!=end?end:text.length};{const{node:startNode,offset:startOffset}=resolveCaretPosition({target,node,offset:start}),{node:endNode,offset:endOffset}=resolveCaretPosition({target,node,offset:end}),range=target.ownerDocument.createRange();try{range.setStart(startNode,startOffset),range.setEnd(endNode,endOffset)}catch(e){throw new Error("The given offset is out of bounds.")}const selection=document.getSelection();return null==selection||selection.removeAllRanges(),null==selection||selection.addRange(range.cloneRange()),range}}function isDifferentPointerPosition(positionA,positionB){var ref,ref1,ref2,ref3,ref4,ref5,ref6,ref7;return positionA.target!==positionB.target||(null===(ref=positionA.coords)||void 0===ref?void 0:ref.x)!==(null===(ref1=positionB.coords)||void 0===ref1?void 0:ref1.y)||(null===(ref2=positionA.coords)||void 0===ref2?void 0:ref2.y)!==(null===(ref3=positionB.coords)||void 0===ref3?void 0:ref3.y)||(null===(ref4=positionA.caret)||void 0===ref4?void 0:ref4.node)!==(null===(ref5=positionB.caret)||void 0===ref5?void 0:ref5.node)||(null===(ref6=positionA.caret)||void 0===ref6?void 0:ref6.offset)!==(null===(ref7=positionB.caret)||void 0===ref7?void 0:ref7.offset)}class Mouse{move(instance,position){const prevPosition=this.position,prevTarget=this.getTarget(instance);if(this.position=position,!isDifferentPointerPosition(prevPosition,position))return;const nextTarget=this.getTarget(instance),init=this.getEventInit("mousemove"),[leave,enter]=getTreeDiff(prevTarget,nextTarget);return{leave:()=>{prevTarget!==nextTarget&&(instance.dispatchUIEvent(prevTarget,"mouseout",init),leave.forEach((el=>instance.dispatchUIEvent(el,"mouseleave",init))))},enter:()=>{prevTarget!==nextTarget&&(instance.dispatchUIEvent(nextTarget,"mouseover",init),enter.forEach((el=>instance.dispatchUIEvent(el,"mouseenter",init))))},move:()=>{instance.dispatchUIEvent(nextTarget,"mousemove",init),this.modifySelecting(instance)}}}down(instance,keyDef,pointer){const button=this.buttons.down(keyDef);if(void 0===button)return;const target=this.getTarget(instance);this.buttonDownTarget[button]=target;const disabled=isDisabled(target),init=this.getEventInit("mousedown",keyDef.button);(disabled||instance.dispatchUIEvent(target,"mousedown",init))&&(this.startSelecting(instance,init.detail),focusElement(target)),disabled||2!==getMouseEventButton(keyDef.button)||instance.dispatchUIEvent(target,"contextmenu",this.getEventInit("contextmenu",keyDef.button,pointer))}up(instance,keyDef,pointer){const button=this.buttons.up(keyDef);if(void 0===button)return;const target=this.getTarget(instance);if(!isDisabled(target)){instance.dispatchUIEvent(target,"mouseup",this.getEventInit("mouseup",keyDef.button)),this.endSelecting();const clickTarget=getTreeDiff(this.buttonDownTarget[button],target)[2][0];if(clickTarget){const init=this.getEventInit("click",keyDef.button,pointer);init.detail&&(instance.dispatchUIEvent(clickTarget,0===init.button?"click":"auxclick",init),0===init.button&&2===init.detail&&instance.dispatchUIEvent(clickTarget,"dblclick",{...this.getEventInit("dblclick",keyDef.button),detail:init.detail}))}}}resetClickCount(){this.clickCount.reset()}getEventInit(type,button,pointer){const init={...this.position.coords};return pointer&&(init.pointerId=pointer.pointerId,init.pointerType=pointer.pointerType,init.isPrimary=pointer.isPrimary),init.button=getMouseEventButton(button),init.buttons=this.buttons.getButtons(),"mousedown"===type?init.detail=this.clickCount.getOnDown(init.button):"mouseup"===type?init.detail=this.clickCount.getOnUp(init.button):"click"!==type&&"auxclick"!==type||(init.detail=this.clickCount.incOnClick(init.button)),init}getTarget(instance){var _target;return null!==(_target=this.position.target)&&void 0!==_target?_target:instance.config.document.body}startSelecting(instance,clickCount){var ref,ref1;this.selecting=setSelectionPerMouseDown({document:instance.config.document,target:this.getTarget(instance),node:null===(ref=this.position.caret)||void 0===ref?void 0:ref.node,offset:null===(ref1=this.position.caret)||void 0===ref1?void 0:ref1.offset,clickCount})}modifySelecting(instance){var ref,ref1;this.selecting&&function modifySelectionPerMouseMove(selectionRange,{document,target,node,offset}){const selectionFocus=resolveCaretPosition({target,node,offset});if("node"in selectionRange){if(selectionFocus.node===selectionRange.node){const anchorOffset=selectionFocus.offset<selectionRange.start?selectionRange.end:selectionRange.start,focusOffset=selectionFocus.offset>selectionRange.end||selectionFocus.offset<selectionRange.start?selectionFocus.offset:selectionRange.end;setUISelection(selectionRange.node,{anchorOffset,focusOffset})}}else{const range=selectionRange.cloneRange(),cmp=range.comparePoint(selectionFocus.node,selectionFocus.offset);cmp<0?range.setStart(selectionFocus.node,selectionFocus.offset):cmp>0&&range.setEnd(selectionFocus.node,selectionFocus.offset);const selection=document.getSelection();null==selection||selection.removeAllRanges(),null==selection||selection.addRange(range.cloneRange())}}(this.selecting,{document:instance.config.document,target:this.getTarget(instance),node:null===(ref=this.position.caret)||void 0===ref?void 0:ref.node,offset:null===(ref1=this.position.caret)||void 0===ref1?void 0:ref1.offset})}endSelecting(){this.selecting=void 0}constructor(){this.position={},this.buttons=new Buttons,this.buttonDownTarget={},this.clickCount=new class{incOnClick(button){const current=void 0===this.down[button]?void 0:Number(this.down[button])+1;return this.count=void 0===this.count[button]?{}:{[button]:Number(this.count[button])+1},current}getOnDown(button){var _button,_button1;return this.down={[button]:null!==(_button=this.count[button])&&void 0!==_button?_button:0},this.count={[button]:null!==(_button1=this.count[button])&&void 0!==_button1?_button1:0},Number(this.count[button])+1}getOnUp(button){return void 0===this.down[button]?void 0:Number(this.down[button])+1}reset(){this.count={}}constructor(){this.down={},this.count={}}}}}function hasPointerEvents(instance,element){var ref;return"none"!==(null===(ref=checkPointerEvents(instance,element))||void 0===ref?void 0:ref.pointerEvents)}const PointerEventsCheck=Symbol("Last check for pointer-events");function checkPointerEvents(instance,element){const lastCheck=element[PointerEventsCheck];if(!(instance.config.pointerEventsCheck!==PointerEventsCheckLevel.Never&&(!lastCheck||hasBitFlag(instance.config.pointerEventsCheck,PointerEventsCheckLevel.EachApiCall)&&lastCheck[ApiLevel.Call]!==getLevelRef(instance,ApiLevel.Call)||hasBitFlag(instance.config.pointerEventsCheck,PointerEventsCheckLevel.EachTrigger)&&lastCheck[ApiLevel.Trigger]!==getLevelRef(instance,ApiLevel.Trigger))))return null==lastCheck?void 0:lastCheck.result;const declaration=function closestPointerEventsDeclaration(element){const window=getWindow(element);for(let el=element,tree=[];null==el?void 0:el.ownerDocument;el=el.parentElement){tree.push(el);const pointerEvents=window.getComputedStyle(el).pointerEvents;if(pointerEvents&&!["inherit","unset"].includes(pointerEvents))return{pointerEvents,tree}}}(element);return element[PointerEventsCheck]={[ApiLevel.Call]:getLevelRef(instance,ApiLevel.Call),[ApiLevel.Trigger]:getLevelRef(instance,ApiLevel.Trigger),result:declaration},declaration}function assertPointerEvents(instance,element){const declaration=checkPointerEvents(instance,element);if("none"===(null==declaration?void 0:declaration.pointerEvents))throw new Error([`Unable to perform pointer interaction as the element ${declaration.tree.length>1?"inherits":"has"} \`pointer-events: none\`:`,"",(tree=declaration.tree,tree.reverse().map(((el,i)=>["".padEnd(i),el.tagName,el.id&&`#${el.id}`,el.hasAttribute("data-testid")&&`(testId=${el.getAttribute("data-testid")})`,getLabelDescr(el),tree.length>1&&0===i&&"  <-- This element declared `pointer-events: none`",tree.length>1&&i===tree.length-1&&"  <-- Asserted pointer events here"].filter(Boolean).join(""))).join("\n"))].join("\n"));var tree}function getLabelDescr(element){var ref;let label;if(element.hasAttribute("aria-label"))label=element.getAttribute("aria-label");else if(element.hasAttribute("aria-labelledby")){var ref1,ref2;label=null===(ref1=element.ownerDocument.getElementById(element.getAttribute("aria-labelledby")))||void 0===ref1||null===(ref2=ref1.textContent)||void 0===ref2?void 0:ref2.trim()}else if(isElementType(element,["button","input","meter","output","progress","select","textarea"])&&(null===(ref=element.labels)||void 0===ref?void 0:ref.length))label=Array.from(element.labels).map((el=>{var ref;return null===(ref=el.textContent)||void 0===ref?void 0:ref.trim()})).join("|");else if(isElementType(element,"button")){var ref3;label=null===(ref3=element.textContent)||void 0===ref3?void 0:ref3.trim()}return label=null==label?void 0:label.replace(/\n/g,"  "),Number(null==label?void 0:label.length)>30&&(label=`${null==label?void 0:label.substring(0,29)}…`),label?`(label=${label})`:""}function hasBitFlag(conf,flag){return(conf&flag)>0}class Pointer{init(instance,position){this.position=position;const target=this.getTarget(instance),[,enter]=getTreeDiff(null,target),init=this.getEventInit();return assertPointerEvents(instance,target),instance.dispatchUIEvent(target,"pointerover",init),enter.forEach((el=>instance.dispatchUIEvent(el,"pointerenter",init))),this}move(instance,position){const prevPosition=this.position,prevTarget=this.getTarget(instance);if(this.position=position,!isDifferentPointerPosition(prevPosition,position))return;const nextTarget=this.getTarget(instance),init=this.getEventInit(),[leave,enter]=getTreeDiff(prevTarget,nextTarget);return{leave:()=>{hasPointerEvents(instance,prevTarget)&&prevTarget!==nextTarget&&(instance.dispatchUIEvent(prevTarget,"pointerout",init),leave.forEach((el=>instance.dispatchUIEvent(el,"pointerleave",init))))},enter:()=>{assertPointerEvents(instance,nextTarget),prevTarget!==nextTarget&&(instance.dispatchUIEvent(nextTarget,"pointerover",init),enter.forEach((el=>instance.dispatchUIEvent(el,"pointerenter",init))))},move:()=>{instance.dispatchUIEvent(nextTarget,"pointermove",init)}}}down(instance,_keyDef){if(this.isDown)return;const target=this.getTarget(instance);assertPointerEvents(instance,target),this.isDown=!0,this.isPrevented=!instance.dispatchUIEvent(target,"pointerdown",this.getEventInit())}up(instance,_keyDef){if(!this.isDown)return;const target=this.getTarget(instance);assertPointerEvents(instance,target),this.isDown=!1,instance.dispatchUIEvent(target,"pointerup",this.getEventInit())}release(instance){const target=this.getTarget(instance),[leave]=getTreeDiff(target,null),init=this.getEventInit();hasPointerEvents(instance,target)&&(instance.dispatchUIEvent(target,"pointerout",init),leave.forEach((el=>instance.dispatchUIEvent(el,"pointerleave",init)))),this.isCancelled=!0}getTarget(instance){var _target;return null!==(_target=this.position.target)&&void 0!==_target?_target:instance.config.document.body}getEventInit(){return{...this.position.coords,pointerId:this.pointerId,pointerType:this.pointerType,isPrimary:this.isPrimary}}constructor({pointerId,pointerType,isPrimary}){this.isMultitouch=!1,this.isCancelled=!1,this.isDown=!1,this.isPrevented=!1,this.position={},this.pointerId=pointerId,this.pointerType=pointerType,this.isPrimary=isPrimary,this.isMultitouch=!isPrimary}}var _registry,_k;class PointerHost{isKeyPressed(keyDef){return this.devices.get(keyDef.pointerType).isPressed(keyDef)}async press(instance,keyDef,position){const pointerName=this.getPointerName(keyDef),pointer="touch"===keyDef.pointerType?this.pointers.new(pointerName,keyDef).init(instance,position):this.pointers.get(pointerName);pointer.position=position,"touch"!==pointer.pointerType&&(this.mouse.position=position),this.devices.get(keyDef.pointerType).addPressed(keyDef),this.buttons.down(keyDef),pointer.down(instance,keyDef),"touch"===pointer.pointerType||pointer.isPrevented||this.mouse.down(instance,keyDef,pointer)}async move(instance,pointerName,position){const pointer=this.pointers.get(pointerName),pointermove=pointer.move(instance,position),mousemove="touch"===pointer.pointerType||pointer.isPrevented&&pointer.isDown?void 0:this.mouse.move(instance,position);null==pointermove||pointermove.leave(),null==mousemove||mousemove.leave(),null==pointermove||pointermove.enter(),null==mousemove||mousemove.enter(),null==pointermove||pointermove.move(),null==mousemove||mousemove.move()}async release(instance,keyDef,position){const device=this.devices.get(keyDef.pointerType);device.removePressed(keyDef),this.buttons.up(keyDef);const pointer=this.pointers.get(this.getPointerName(keyDef));if(pointer.position=position,"touch"!==pointer.pointerType&&(this.mouse.position=position),0===device.countPressed&&pointer.up(instance,keyDef),"touch"===pointer.pointerType&&pointer.release(instance),!pointer.isPrevented){if("touch"===pointer.pointerType&&!pointer.isMultitouch){const mousemove=this.mouse.move(instance,pointer.position);null==mousemove||mousemove.leave(),null==mousemove||mousemove.enter(),null==mousemove||mousemove.move(),this.mouse.down(instance,keyDef,pointer)}if(!pointer.isMultitouch){const mousemove1=this.mouse.move(instance,pointer.position);null==mousemove1||mousemove1.leave(),null==mousemove1||mousemove1.enter(),null==mousemove1||mousemove1.move(),this.mouse.up(instance,keyDef,pointer)}}}getPointerName(keyDef){return"touch"===keyDef.pointerType?keyDef.name:keyDef.pointerType}getPreviousPosition(pointerName){return this.pointers.has(pointerName)?this.pointers.get(pointerName).position:void 0}resetClickCount(){this.mouse.resetClickCount()}getMouseTarget(instance){var _target;return null!==(_target=this.mouse.position.target)&&void 0!==_target?_target:instance.config.document.body}setMousePosition(position){this.mouse.position=position,this.pointers.get("mouse").position=position}constructor(system){this.devices=new class{get(k){var ref;return null!==(ref=(_registry=this.registry)[_k=k])&&void 0!==ref||(_registry[_k]=new Device),this.registry[k]}constructor(){this.registry={}}},this.pointers=new class{new(pointerName,keyDef){const isPrimary="touch"!==keyDef.pointerType||!Object.values(this.registry).some((p=>"touch"===p.pointerType&&!p.isCancelled));return isPrimary||Object.values(this.registry).forEach((p=>{p.pointerType!==keyDef.pointerType||p.isCancelled||(p.isMultitouch=!0)})),this.registry[pointerName]=new Pointer({pointerId:this.nextId++,pointerType:keyDef.pointerType,isPrimary}),this.registry[pointerName]}get(pointerName){if(!this.has(pointerName))throw new Error(`Trying to access pointer "${pointerName}" which does not exist.`);return this.registry[pointerName]}has(pointerName){return pointerName in this.registry}constructor(){this.registry={mouse:new Pointer({pointerId:1,pointerType:"mouse",isPrimary:!0})},this.nextId=2}},this.system=system,this.buttons=new Buttons,this.mouse=new Mouse}}class System{getUIEventModifiers(){return{altKey:this.keyboard.modifiers.Alt,ctrlKey:this.keyboard.modifiers.Control,metaKey:this.keyboard.modifiers.Meta,shiftKey:this.keyboard.modifiers.Shift,modifierAltGraph:this.keyboard.modifiers.AltGraph,modifierCapsLock:this.keyboard.modifiers.CapsLock,modifierFn:this.keyboard.modifiers.Fn,modifierFnLock:this.keyboard.modifiers.FnLock,modifierNumLock:this.keyboard.modifiers.NumLock,modifierScrollLock:this.keyboard.modifiers.ScrollLock,modifierSymbol:this.keyboard.modifiers.Symbol,modifierSymbolLock:this.keyboard.modifiers.SymbolLock}}constructor(){this.keyboard=new KeyboardHost(this),this.pointer=new PointerHost(this)}}async function click(element){const pointerIn=[];return this.config.skipHover||pointerIn.push({target:element}),pointerIn.push({keys:"[MouseLeft]",target:element}),this.pointer(pointerIn)}async function dblClick(element){return this.pointer([{target:element},"[MouseLeft][MouseLeft]"])}async function tripleClick(element){return this.pointer([{target:element},"[MouseLeft][MouseLeft][MouseLeft]"])}async function hover(element){return this.pointer({target:element})}async function unhover(element){return assertPointerEvents(this,this.system.pointer.getMouseTarget(this)),this.pointer({target:element.ownerDocument.body})}async function tab({shift}={}){return this.keyboard(!0===shift?"{Shift>}{Tab}{/Shift}":!1===shift?"[/ShiftLeft][/ShiftRight]{Tab}":"{Tab}")}async function keyboard(text){const actions=function parseKeyDef(keyboardMap,text){const defs=[];do{const{type,descriptor,consumedLength,releasePrevious,releaseSelf=!0,repeat}=readNextDescriptor(text,"keyboard");var ref;const keyDef=null!==(ref=keyboardMap.find((def=>{var ref,ref1;return"["===type?(null===(ref=def.code)||void 0===ref?void 0:ref.toLowerCase())===descriptor.toLowerCase():"{"===type?(null===(ref1=def.key)||void 0===ref1?void 0:ref1.toLowerCase())===descriptor.toLowerCase():def.key===descriptor})))&&void 0!==ref?ref:{key:"Unknown",code:"Unknown",["["===type?"code":"key"]:descriptor};defs.push({keyDef,releasePrevious,releaseSelf,repeat}),text=text.slice(consumedLength)}while(text);return defs}(this.config.keyboardMap,text);for(let i=0;i<actions.length;i++)await wait(this.config),await keyboardAction(this,actions[i])}async function keyboardAction(instance,{keyDef,releasePrevious,releaseSelf,repeat}){const{system}=instance;if(system.keyboard.isKeyPressed(keyDef)&&await system.keyboard.keyup(instance,keyDef),!releasePrevious){for(let i=1;i<=repeat;i++)await system.keyboard.keydown(instance,keyDef),i<repeat&&await wait(instance.config);releaseSelf&&await system.keyboard.keyup(instance,keyDef)}}function copySelection(target){const data=hasOwnSelection(target)?{"text/plain":readSelectedValueFromInput(target)}:{"text/plain":String(target.ownerDocument.getSelection())},dt=createDataTransfer(getWindow(target));for(const type in data)data[type]&&dt.setData(type,data[type]);return dt}function readSelectedValueFromInput(target){const sel=getUISelection(target);return getUIValue(target).substring(sel.startOffset,sel.endOffset)}async function copy(){const doc=this.config.document;var _activeElement;const target=null!==(_activeElement=doc.activeElement)&&void 0!==_activeElement?_activeElement:doc.body,clipboardData=copySelection(target);if(0!==clipboardData.items.length)return this.dispatchUIEvent(target,"copy",{clipboardData})&&this.config.writeToClipboard&&await writeDataTransferToClipboard(doc,clipboardData),clipboardData}async function cut(){const doc=this.config.document;var _activeElement;const target=null!==(_activeElement=doc.activeElement)&&void 0!==_activeElement?_activeElement:doc.body,clipboardData=copySelection(target);if(0!==clipboardData.items.length)return this.dispatchUIEvent(target,"cut",{clipboardData})&&this.config.writeToClipboard&&await writeDataTransferToClipboard(target.ownerDocument,clipboardData),clipboardData}async function paste(clipboardData){const doc=this.config.document;var _activeElement;const target=null!==(_activeElement=doc.activeElement)&&void 0!==_activeElement?_activeElement:doc.body;var ref;const dataTransfer=null!==(ref="string"==typeof clipboardData?function getClipboardDataFromString(doc,text){const dt=createDataTransfer(getWindow(doc));return dt.setData("text",text),dt}(doc,clipboardData):clipboardData)&&void 0!==ref?ref:await async function readDataTransferFromClipboard(document){const window=document.defaultView,clipboard=null==window?void 0:window.navigator.clipboard,items=clipboard&&await clipboard.read();if(!items)throw new Error("The Clipboard API is unavailable.");const dt=createDataTransfer(window);for(const item of items)for(const type of item.types)dt.setData(type,await item.getType(type).then((b=>readBlobText(b,window.FileReader))));return dt}(doc).catch((()=>{throw new Error("`userEvent.paste()` without `clipboardData` requires the `ClipboardAPI` to be available.")}));this.dispatchUIEvent(target,"paste",{clipboardData:dataTransfer})}function parseKeyDef_parseKeyDef(pointerMap,keys){const defs=[];do{const{descriptor,consumedLength,releasePrevious,releaseSelf=!0}=readNextDescriptor(keys,"pointer"),keyDef=pointerMap.find((p=>p.name===descriptor));keyDef&&defs.push({keyDef,releasePrevious,releaseSelf}),keys=keys.slice(consumedLength)}while(keys);return defs}async function pointer(input){const{pointerMap}=this.config,actions=[];(Array.isArray(input)?input:[input]).forEach((actionInput=>{"string"==typeof actionInput?actions.push(...parseKeyDef_parseKeyDef(pointerMap,actionInput)):"keys"in actionInput?actions.push(...parseKeyDef_parseKeyDef(pointerMap,actionInput.keys).map((i=>({...actionInput,...i})))):actions.push(actionInput)}));for(let i=0;i<actions.length;i++)await wait(this.config),await pointerAction(this,actions[i]);this.system.pointer.resetClickCount()}async function pointerAction(instance,action){var ref,ref1;const pointerName="pointerName"in action&&action.pointerName?action.pointerName:"keyDef"in action?instance.system.pointer.getPointerName(action.keyDef):"mouse",previousPosition=instance.system.pointer.getPreviousPosition(pointerName);var _target,_coords,_node,_offset;const position={target:null!==(_target=action.target)&&void 0!==_target?_target:getPrevTarget(instance,previousPosition),coords:null!==(_coords=action.coords)&&void 0!==_coords?_coords:null==previousPosition?void 0:previousPosition.coords,caret:{node:null!==(_node=action.node)&&void 0!==_node?_node:hasCaretPosition(action)||null==previousPosition||null===(ref=previousPosition.caret)||void 0===ref?void 0:ref.node,offset:null!==(_offset=action.offset)&&void 0!==_offset?_offset:hasCaretPosition(action)||null==previousPosition||null===(ref1=previousPosition.caret)||void 0===ref1?void 0:ref1.offset}};"keyDef"in action?(instance.system.pointer.isKeyPressed(action.keyDef)&&(setLevelRef(instance,ApiLevel.Trigger),await instance.system.pointer.release(instance,action.keyDef,position)),action.releasePrevious||(setLevelRef(instance,ApiLevel.Trigger),await instance.system.pointer.press(instance,action.keyDef,position),action.releaseSelf&&(setLevelRef(instance,ApiLevel.Trigger),await instance.system.pointer.release(instance,action.keyDef,position)))):(setLevelRef(instance,ApiLevel.Trigger),await instance.system.pointer.move(instance,pointerName,position))}function hasCaretPosition(action){var _target,ref;return!!(null!==(ref=null!==(_target=action.target)&&void 0!==_target?_target:action.node)&&void 0!==ref?ref:void 0!==action.offset)}function getPrevTarget(instance,position){if(!position)throw new Error("This pointer has no previous position. Provide a target property!");var _target;return null!==(_target=position.target)&&void 0!==_target?_target:instance.config.document.body}async function clear(element){if(!isEditable(element)||isDisabled(element))throw new Error("clear()` is only supported on editable elements.");if(focusElement(element),element.ownerDocument.activeElement!==element)throw new Error("The element to be cleared could not be focused.");if(selectAll(element),!function isAllSelected(target){if(hasOwnSelection(target))return 0===getUISelection(target).startOffset&&getUISelection(target).endOffset===getUIValue(target).length;var ref;const focusNode=null!==(ref=getContentEditable(target))&&void 0!==ref?ref:target.ownerDocument.body,selection=target.ownerDocument.getSelection();return(null==selection?void 0:selection.anchorNode)===focusNode&&selection.focusNode===focusNode&&0===selection.anchorOffset&&selection.focusOffset===focusNode.childNodes.length}(element))throw new Error("The element content to be cleared could not be selected.");input(this,element,"","deleteContentBackward")}async function selectOptions(select,values){return selectOptionsBase.call(this,!0,select,values)}async function deselectOptions(select,values){return selectOptionsBase.call(this,!1,select,values)}async function selectOptionsBase(newValue,select,values){if(!newValue&&!select.multiple)throw(0,dom_esm.getConfig)().getElementError("Unable to deselect an option in a non-multiple select. Use selectOptions to change the selection instead.",select);const valArray=Array.isArray(values)?values:[values],allOptions=Array.from(select.querySelectorAll('option, [role="option"]')),selectedOptions=valArray.map((val=>{if("string"!=typeof val&&allOptions.includes(val))return val;{const matchingOption=allOptions.find((o=>o.value===val||o.innerHTML===val));if(matchingOption)return matchingOption;throw(0,dom_esm.getConfig)().getElementError(`Value "${String(val)}" not found in options`,select)}})).filter((option=>!isDisabled(option)));if(isDisabled(select)||!selectedOptions.length)return;const selectOption=option=>{option.selected=newValue,this.dispatchUIEvent(select,"input",{bubbles:!0,cancelable:!1,composed:!0}),this.dispatchUIEvent(select,"change")};if(isElementType(select,"select"))if(select.multiple)for(const option of selectedOptions){const withPointerEvents=0===this.config.pointerEventsCheck||hasPointerEvents(this,option);withPointerEvents&&(this.dispatchUIEvent(option,"pointerover"),this.dispatchUIEvent(select,"pointerenter"),this.dispatchUIEvent(option,"mouseover"),this.dispatchUIEvent(select,"mouseenter"),this.dispatchUIEvent(option,"pointermove"),this.dispatchUIEvent(option,"mousemove"),this.dispatchUIEvent(option,"pointerdown"),this.dispatchUIEvent(option,"mousedown")),focusElement(select),withPointerEvents&&(this.dispatchUIEvent(option,"pointerup"),this.dispatchUIEvent(option,"mouseup")),selectOption(option),withPointerEvents&&this.dispatchUIEvent(option,"click"),await wait(this.config)}else{if(1!==selectedOptions.length)throw(0,dom_esm.getConfig)().getElementError("Cannot select multiple options on a non-multiple select",select);{const withPointerEvents1=0===this.config.pointerEventsCheck||hasPointerEvents(this,select);withPointerEvents1?await this.click(select):focusElement(select),selectOption(selectedOptions[0]),withPointerEvents1&&(this.dispatchUIEvent(select,"pointerover"),this.dispatchUIEvent(select,"pointerenter"),this.dispatchUIEvent(select,"mouseover"),this.dispatchUIEvent(select,"mouseenter"),this.dispatchUIEvent(select,"pointerup"),this.dispatchUIEvent(select,"mouseup"),this.dispatchUIEvent(select,"click")),await wait(this.config)}}else{if("listbox"!==select.getAttribute("role"))throw(0,dom_esm.getConfig)().getElementError("Cannot select options on elements that are neither select nor listbox elements",select);for(const option1 of selectedOptions)await this.click(option1),await this.unhover(option1)}}async function type(element,text,{skipClick=this.config.skipClick,skipAutoClose=this.config.skipAutoClose,initialSelectionStart,initialSelectionEnd}={}){element.disabled||(skipClick||await this.click(element),void 0!==initialSelectionStart&&setSelectionRange(element,initialSelectionStart,null!=initialSelectionEnd?initialSelectionEnd:initialSelectionStart),await this.keyboard(text),skipAutoClose||await async function releaseAllKeys(instance){for(const k of instance.system.keyboard.getPressedKeys())await instance.system.keyboard.keyup(instance,k)}(this))}const fakeFiles=Symbol("files and value properties are mocked");function restoreProperty(obj,prop,descriptor){descriptor?Object.defineProperty(obj,prop,descriptor):delete obj[prop]}async function upload(element,fileOrFiles){const input=isElementType(element,"label")?element.control:element;if(!input||!isElementType(input,"input",{type:"file"}))throw new TypeError(`The ${input===element?"given":"associated"} ${null==input?void 0:input.tagName} element does not accept file uploads`);if(isDisabled(element))return;const files=(Array.isArray(fileOrFiles)?fileOrFiles:[fileOrFiles]).filter((file=>!this.config.applyAccept||function isAcceptableFile(file,accept){if(!accept)return!0;const wildcards=["audio/*","image/*","video/*"];return accept.split(",").some((acceptToken=>acceptToken.startsWith(".")?file.name.endsWith(acceptToken):wildcards.includes(acceptToken)?file.type.startsWith(acceptToken.substr(0,acceptToken.length-1)):file.type===acceptToken))}(file,input.accept))).slice(0,input.multiple?void 0:1),fileDialog=()=>{var ref;files.length===(null===(ref=input.files)||void 0===ref?void 0:ref.length)&&files.every(((f,i)=>{var ref;return f===(null===(ref=input.files)||void 0===ref?void 0:ref.item(i))}))||(!function setFiles(el,files){var ref;null===(ref=el[fakeFiles])||void 0===ref||ref.restore();const typeDescr=Object.getOwnPropertyDescriptor(el,"type"),valueDescr=Object.getOwnPropertyDescriptor(el,"value"),filesDescr=Object.getOwnPropertyDescriptor(el,"files");function restore(){restoreProperty(el,"type",typeDescr),restoreProperty(el,"value",valueDescr),restoreProperty(el,"files",filesDescr)}el[fakeFiles]={restore},Object.defineProperties(el,{files:{configurable:!0,get:()=>files},value:{configurable:!0,get:()=>files.length?`C:\\fakepath\\${files[0].name}`:"",set(v){var ref;""===v?restore():null==valueDescr||null===(ref=valueDescr.set)||void 0===ref||ref.call(el,v)}},type:{configurable:!0,get:()=>"file",set(v){"file"!==v&&(restore(),el.type=v)}}})}(input,createFileList(getWindow(element),files)),this.dispatchUIEvent(input,"input"),this.dispatchUIEvent(input,"change"))};input.addEventListener("fileDialog",fileDialog),await this.click(element),input.removeEventListener("fileDialog",fileDialog)}const defaultOptionsDirect={applyAccept:!0,autoModify:!0,delay:0,document:globalThis.document,keyboardMap:defaultKeyMap,pointerMap:[{name:"MouseLeft",pointerType:"mouse",button:"primary"},{name:"MouseRight",pointerType:"mouse",button:"secondary"},{name:"MouseMiddle",pointerType:"mouse",button:"auxiliary"},{name:"TouchA",pointerType:"touch"},{name:"TouchB",pointerType:"touch"},{name:"TouchC",pointerType:"touch"}],pointerEventsCheck:PointerEventsCheckLevel.EachApiCall,skipAutoClose:!1,skipClick:!1,skipHover:!1,writeToClipboard:!1,advanceTimers:()=>Promise.resolve()},defaultOptionsSetup={...defaultOptionsDirect,writeToClipboard:!0};function createConfig(options={},defaults=defaultOptionsSetup,node){const document=function getDocument(options,node,defaults){var _document,ref;return null!==(ref=null!==(_document=options.document)&&void 0!==_document?_document:node&&function getDocumentFromNode(el){return function isDocument(node){return 9===node.nodeType}(el)?el:el.ownerDocument}(node))&&void 0!==ref?ref:defaults.document}(options,node,defaults);return{...defaults,...options,document}}function setupDirect({keyboardState,pointerState,...options}={},node){const config=createConfig(options,defaultOptionsDirect,node);var ref;prepareDocument(config.document);const system=null!==(ref=null!=pointerState?pointerState:keyboardState)&&void 0!==ref?ref:new System;return{api:createInstance(config,system).api,system}}function setupSub(options){return createInstance({...this.config,...options},this.system).api}function wrapAndBindImpl(instance,impl){function method(...args){return setLevelRef(instance,ApiLevel.Call),function wrapAsync(implementation){return(0,dom_esm.getConfig)().asyncWrapper(implementation)}((()=>impl.apply(instance,args).then((async ret=>(await wait(instance.config),ret)))))}return Object.defineProperty(method,"name",{get:()=>impl.name}),method}function createInstance(config,system=new System){const instance={};return Object.assign(instance,{config,dispatchEvent:dispatchEvent.bind(instance),dispatchUIEvent:dispatchUIEvent.bind(instance),system,levelRefs:{},...api_namespaceObject}),{instance,api:{...Object.fromEntries(Object.entries(api_namespaceObject).map((([name,api])=>[name,wrapAndBindImpl(instance,api)]))),setup:setupSub.bind(instance)}}}function directApi_clear(element){return setupDirect().api.clear(element)}function directApi_click(element,options={}){return setupDirect(options,element).api.click(element)}function directApi_copy(options={}){return setupDirect(options).api.copy()}function directApi_cut(options={}){return setupDirect(options).api.cut()}function directApi_dblClick(element,options={}){return setupDirect(options).api.dblClick(element)}function directApi_deselectOptions(select,values,options={}){return setupDirect(options).api.deselectOptions(select,values)}function directApi_hover(element,options={}){return setupDirect(options).api.hover(element)}async function directApi_keyboard(text,options={}){const{api,system}=setupDirect(options);return api.keyboard(text).then((()=>system))}async function directApi_pointer(input,options={}){const{api,system}=setupDirect(options);return api.pointer(input).then((()=>system))}function directApi_paste(clipboardData,options){return setupDirect(options).api.paste(clipboardData)}function directApi_selectOptions(select,values,options={}){return setupDirect(options).api.selectOptions(select,values)}function directApi_tripleClick(element,options={}){return setupDirect(options).api.tripleClick(element)}function directApi_type(element,text,options={}){return setupDirect(options,element).api.type(element,text,options)}function directApi_unhover(element,options={}){const{api,system}=setupDirect(options);return system.pointer.setMousePosition({target:element}),api.unhover(element)}function directApi_upload(element,fileOrFiles,options={}){return setupDirect(options).api.upload(element,fileOrFiles)}function directApi_tab(options={}){return setupDirect().api.tab(options)}const userEvent={...directApi_namespaceObject,setup:function setupMain(options={}){const config=createConfig(options);var _defaultView;return prepareDocument(config.document),function attachClipboardStubToView(window){if(isClipboardStub(window.navigator.clipboard))return window.navigator.clipboard[ClipboardStubControl];const realClipboard=Object.getOwnPropertyDescriptor(window.navigator,"clipboard");let stub;const control={resetClipboardStub:()=>{stub=createClipboardStub(window,control)},detachClipboardStub:()=>{realClipboard?Object.defineProperty(window.navigator,"clipboard",realClipboard):Object.defineProperty(window.navigator,"clipboard",{value:void 0,configurable:!0})}};return stub=createClipboardStub(window,control),Object.defineProperty(window.navigator,"clipboard",{get:()=>stub,configurable:!0}),stub[ClipboardStubControl]}(null!==(_defaultView=config.document.defaultView)&&void 0!==_defaultView?_defaultView:globalThis.window),createInstance(config).api}};var esm=__webpack_require__("./node_modules/ts-dedent/esm/index.js"),scope=(()=>{let win;return win=typeof window<"u"?window:typeof globalThis<"u"?globalThis:typeof __webpack_require__.g<"u"?__webpack_require__.g:typeof self<"u"?self:{},win})(),{LOGLEVEL}=scope,levels={trace:1,debug:2,info:3,warn:4,error:5,silent:10},currentLogLevelNumber=levels[LOGLEVEL]||levels.info,logger={trace:(message,...rest)=>{currentLogLevelNumber<=levels.trace&&console.trace(message,...rest)},debug:(message,...rest)=>{currentLogLevelNumber<=levels.debug&&console.debug(message,...rest)},info:(message,...rest)=>{currentLogLevelNumber<=levels.info&&console.info(message,...rest)},warn:(message,...rest)=>{currentLogLevelNumber<=levels.warn&&console.warn(message,...rest)},error:(message,...rest)=>{currentLogLevelNumber<=levels.error&&console.error(message,...rest)},log:(message,...rest)=>{currentLogLevelNumber<levels.silent&&console.log(message,...rest)}},logged=new Set,once=type=>(message,...rest)=>{if(!logged.has(message))return logged.add(message),logger[type](message,...rest)};once.clear=()=>logged.clear(),once.trace=once("trace"),once.debug=once("debug"),once.info=once("info"),once.warn=once("warn"),once.error=once("error"),once.log=once("log");once("warn");var pretty=type=>(...args)=>{let argArray=[];if(args.length){let reResultArray,startTagRe=/<span\s+style=(['"])([^'"]*)\1\s*>/gi,endTagRe=/<\/span>/gi;for(argArray.push(args[0].replace(startTagRe,"%c").replace(endTagRe,"%c"));reResultArray=startTagRe.exec(args[0]);)argArray.push(reResultArray[2]),argArray.push("");for(let j=1;j<args.length;j++)argArray.push(args[j])}logger[type].apply(logger,argArray)};pretty.trace=pretty("trace"),pretty.debug=pretty("debug"),pretty.info=pretty("info"),pretty.warn=pretty("warn"),pretty.error=pretty("error");var events2,events=((events2=events||{}).CHANNEL_CREATED="channelCreated",events2.CONFIG_ERROR="configError",events2.STORY_INDEX_INVALIDATED="storyIndexInvalidated",events2.STORY_SPECIFIED="storySpecified",events2.SET_CONFIG="setConfig",events2.SET_STORIES="setStories",events2.SET_INDEX="setIndex",events2.SET_CURRENT_STORY="setCurrentStory",events2.CURRENT_STORY_WAS_SET="currentStoryWasSet",events2.FORCE_RE_RENDER="forceReRender",events2.FORCE_REMOUNT="forceRemount",events2.PRELOAD_ENTRIES="preloadStories",events2.STORY_PREPARED="storyPrepared",events2.DOCS_PREPARED="docsPrepared",events2.STORY_CHANGED="storyChanged",events2.STORY_UNCHANGED="storyUnchanged",events2.STORY_RENDERED="storyRendered",events2.STORY_MISSING="storyMissing",events2.STORY_ERRORED="storyErrored",events2.STORY_THREW_EXCEPTION="storyThrewException",events2.STORY_RENDER_PHASE_CHANGED="storyRenderPhaseChanged",events2.PLAY_FUNCTION_THREW_EXCEPTION="playFunctionThrewException",events2.UPDATE_STORY_ARGS="updateStoryArgs",events2.STORY_ARGS_UPDATED="storyArgsUpdated",events2.RESET_STORY_ARGS="resetStoryArgs",events2.SET_GLOBALS="setGlobals",events2.UPDATE_GLOBALS="updateGlobals",events2.GLOBALS_UPDATED="globalsUpdated",events2.REGISTER_SUBSCRIPTION="registerSubscription",events2.PREVIEW_KEYDOWN="previewKeydown",events2.PREVIEW_BUILDER_PROGRESS="preview_builder_progress",events2.SELECT_STORY="selectStory",events2.STORIES_COLLAPSE_ALL="storiesCollapseAll",events2.STORIES_EXPAND_ALL="storiesExpandAll",events2.DOCS_RENDERED="docsRendered",events2.SHARED_STATE_CHANGED="sharedStateChanged",events2.SHARED_STATE_SET="sharedStateSet",events2.NAVIGATE_URL="navigateUrl",events2.UPDATE_QUERY_PARAMS="updateQueryParams",events2),{CHANNEL_CREATED,CONFIG_ERROR,CURRENT_STORY_WAS_SET,DOCS_PREPARED,DOCS_RENDERED,FORCE_RE_RENDER,FORCE_REMOUNT,GLOBALS_UPDATED,NAVIGATE_URL,PLAY_FUNCTION_THREW_EXCEPTION,PRELOAD_ENTRIES,PREVIEW_BUILDER_PROGRESS,PREVIEW_KEYDOWN,REGISTER_SUBSCRIPTION,RESET_STORY_ARGS,SELECT_STORY,SET_CONFIG,SET_CURRENT_STORY,SET_GLOBALS,SET_INDEX,SET_STORIES,SHARED_STATE_CHANGED,SHARED_STATE_SET,STORIES_COLLAPSE_ALL,STORIES_EXPAND_ALL,STORY_ARGS_UPDATED,STORY_CHANGED,STORY_ERRORED,STORY_INDEX_INVALIDATED,STORY_MISSING,STORY_PREPARED,STORY_RENDER_PHASE_CHANGED,STORY_RENDERED,STORY_SPECIFIED,STORY_THREW_EXCEPTION,STORY_UNCHANGED,UPDATE_GLOBALS,UPDATE_QUERY_PARAMS,UPDATE_STORY_ARGS}=events,IGNORED_EXCEPTION=new Error("ignoredException");function mockChannel(){return new class{constructor({transport,async=!1}={}){this.sender=Math.random().toString(16).slice(2),this.events={},this.data={},this.transport=void 0,this.isAsync=async,transport&&(this.transport=transport,this.transport.setHandler((event=>this.handleEvent(event))))}get hasTransport(){return!!this.transport}addListener(eventName,listener){this.events[eventName]=this.events[eventName]||[],this.events[eventName].push(listener)}emit(eventName,...args){let event={type:eventName,args,from:this.sender},options={};args.length>=1&&args[0]&&args[0].options&&(options=args[0].options);let handler=()=>{this.transport&&this.transport.send(event,options),this.handleEvent(event)};this.isAsync?setImmediate(handler):handler()}last(eventName){return this.data[eventName]}eventNames(){return Object.keys(this.events)}listenerCount(eventName){let listeners=this.listeners(eventName);return listeners?listeners.length:0}listeners(eventName){return this.events[eventName]||void 0}once(eventName,listener){let onceListener=this.onceListener(eventName,listener);this.addListener(eventName,onceListener)}removeAllListeners(eventName){eventName?this.events[eventName]&&delete this.events[eventName]:this.events={}}removeListener(eventName,listener){let listeners=this.listeners(eventName);listeners&&(this.events[eventName]=listeners.filter((l=>l!==listener)))}on(eventName,listener){this.addListener(eventName,listener)}off(eventName,listener){this.removeListener(eventName,listener)}handleEvent(event){let listeners=this.listeners(event.type);listeners&&listeners.length&&listeners.forEach((fn=>{fn.apply(event,event.args)})),this.data[event.type]=event.args}onceListener(eventName,listener){let onceListener=(...args)=>(this.removeListener(eventName,onceListener),listener(...args));return onceListener}}({transport:{setHandler:()=>{},send:()=>{}}})}var KEY="__STORYBOOK_ADDONS_PREVIEW";var CallStates2,addons=function getAddonsStore(){return scope[KEY]||(scope[KEY]=new class{constructor(){this.getChannel=()=>{if(!this.channel){let channel=mockChannel();return this.setChannel(channel),channel}return this.channel},this.getServerChannel=()=>{if(!this.serverChannel)throw new Error("Accessing non-existent serverChannel");return this.serverChannel},this.ready=()=>this.promise,this.hasChannel=()=>!!this.channel,this.hasServerChannel=()=>!!this.serverChannel,this.setChannel=channel=>{this.channel=channel,this.resolve()},this.setServerChannel=channel=>{this.serverChannel=channel},this.promise=new Promise((res=>{this.resolve=()=>res(this.getChannel())}))}}),scope[KEY]}(),CallStates=((CallStates2=CallStates||{}).DONE="done",CallStates2.ERROR="error",CallStates2.ACTIVE="active",CallStates2.WAITING="waiting",CallStates2),EVENTS_CALL="storybook/instrumenter/call",EVENTS_SYNC="storybook/instrumenter/sync",EVENTS_START="storybook/instrumenter/start",EVENTS_BACK="storybook/instrumenter/back",EVENTS_GOTO="storybook/instrumenter/goto",EVENTS_NEXT="storybook/instrumenter/next",EVENTS_END="storybook/instrumenter/end",controlsDisabled={start:!1,back:!1,goto:!1,next:!1,end:!1},alreadyCompletedException=new Error("This function ran after the play function completed. Did you forget to `await` it?"),isObject=o=>"[object Object]"===Object.prototype.toString.call(o),isInstrumentable=o=>{if(!isObject(o)&&!(o=>"[object Module]"===Object.prototype.toString.call(o))(o))return!1;if(void 0===o.constructor)return!0;let proto=o.constructor.prototype;return!(!isObject(proto)||!1===Object.prototype.hasOwnProperty.call(proto,"isPrototypeOf"))},getInitialState=()=>({renderPhase:void 0,isDebugging:!1,isPlaying:!1,isLocked:!1,cursor:0,calls:[],shadowCalls:[],callRefsByResult:new Map,chainedCallIds:new Set,ancestors:[],playUntil:void 0,resolvers:{},syncTimeout:void 0}),getRetainedState=(state,isDebugging=!1)=>{let calls=(isDebugging?state.shadowCalls:state.calls).filter((call=>call.retain));if(!calls.length)return;let callRefsByResult=new Map(Array.from(state.callRefsByResult.entries()).filter((([,ref])=>ref.retain)));return{cursor:calls.length,calls,callRefsByResult}};function instrument(obj,options={}){try{let forceInstrument=!1,skipInstrument=!1;return scope.window.location?.search?.includes("instrument=true")?forceInstrument=!0:scope.window.location?.search?.includes("instrument=false")&&(skipInstrument=!0),scope.window.parent===scope.window&&!forceInstrument||skipInstrument?obj:(scope.window.__STORYBOOK_ADDON_INTERACTIONS_INSTRUMENTER__||(scope.window.__STORYBOOK_ADDON_INTERACTIONS_INSTRUMENTER__=new class{constructor(){this.initialized=!1,this.channel=addons.getChannel(),this.state=scope.window.parent.__STORYBOOK_ADDON_INTERACTIONS_INSTRUMENTER_STATE__||{};let resetState=({storyId,isPlaying=!0,isDebugging=!1})=>{let state=this.getState(storyId);this.setState(storyId,{...getInitialState(),...getRetainedState(state,isDebugging),shadowCalls:isDebugging?state.shadowCalls:[],chainedCallIds:isDebugging?state.chainedCallIds:new Set,playUntil:isDebugging?state.playUntil:void 0,isPlaying,isDebugging}),this.sync(storyId)};this.channel.on(FORCE_REMOUNT,resetState),this.channel.on(STORY_RENDER_PHASE_CHANGED,(({storyId,newPhase})=>{let{isDebugging}=this.getState(storyId);this.setState(storyId,{renderPhase:newPhase}),"preparing"===newPhase&&isDebugging&&resetState({storyId}),"playing"===newPhase&&resetState({storyId,isDebugging}),"played"===newPhase&&this.setState(storyId,{isLocked:!1,isPlaying:!1,isDebugging:!1}),"errored"===newPhase&&this.setState(storyId,{isLocked:!1,isPlaying:!1})})),this.channel.on(SET_CURRENT_STORY,(()=>{this.initialized?this.cleanup():this.initialized=!0}));let start=({storyId,playUntil})=>{this.getState(storyId).isDebugging||this.setState(storyId,(({calls})=>({calls:[],shadowCalls:calls.map((call=>({...call,status:"waiting"}))),isDebugging:!0})));let log=this.getLog(storyId);this.setState(storyId,(({shadowCalls})=>{if(playUntil||!log.length)return{playUntil};let firstRowIndex=shadowCalls.findIndex((call=>call.id===log[0].callId));return{playUntil:shadowCalls.slice(0,firstRowIndex).filter((call=>call.interceptable&&!call.ancestors.length)).slice(-1)[0]?.id}})),this.channel.emit(FORCE_REMOUNT,{storyId,isDebugging:!0})},end=({storyId})=>{this.setState(storyId,{playUntil:void 0,isDebugging:!1}),Object.values(this.getState(storyId).resolvers).forEach((resolve=>resolve()))};this.channel.on(EVENTS_START,start),this.channel.on(EVENTS_BACK,(({storyId})=>{let log=this.getLog(storyId).filter((call=>!call.ancestors.length)),last=log.reduceRight(((res,item,index)=>res>=0||"waiting"===item.status?res:index),-1);start({storyId,playUntil:log[last-1]?.callId})})),this.channel.on(EVENTS_GOTO,(({storyId,callId})=>{let{calls,shadowCalls,resolvers}=this.getState(storyId),call=calls.find((({id})=>id===callId)),shadowCall=shadowCalls.find((({id})=>id===callId));if(!call&&shadowCall&&Object.values(resolvers).length>0){let nextId=this.getLog(storyId).find((c=>"waiting"===c.status))?.callId;shadowCall.id!==nextId&&this.setState(storyId,{playUntil:shadowCall.id}),Object.values(resolvers).forEach((resolve=>resolve()))}else start({storyId,playUntil:callId})})),this.channel.on(EVENTS_NEXT,(({storyId})=>{let{resolvers}=this.getState(storyId);if(Object.values(resolvers).length>0)Object.values(resolvers).forEach((resolve=>resolve()));else{let nextId=this.getLog(storyId).find((c=>"waiting"===c.status))?.callId;nextId?start({storyId,playUntil:nextId}):end({storyId})}})),this.channel.on(EVENTS_END,end)}getState(storyId){return this.state[storyId]||getInitialState()}setState(storyId,update){let state=this.getState(storyId),patch="function"==typeof update?update(state):update;this.state={...this.state,[storyId]:{...state,...patch}},scope.window.parent.__STORYBOOK_ADDON_INTERACTIONS_INSTRUMENTER_STATE__=this.state}cleanup(){this.state=Object.entries(this.state).reduce(((acc,[storyId,state])=>{let retainedState=getRetainedState(state);return retainedState&&(acc[storyId]=Object.assign(getInitialState(),retainedState)),acc}),{});let payload={controlStates:controlsDisabled,logItems:[]};this.channel.emit(EVENTS_SYNC,payload),scope.window.parent.__STORYBOOK_ADDON_INTERACTIONS_INSTRUMENTER_STATE__=this.state}getLog(storyId){let{calls,shadowCalls}=this.getState(storyId),merged=[...shadowCalls];calls.forEach(((call,index)=>{merged[index]=call}));let seen=new Set;return merged.reduceRight(((acc,call)=>(call.args.forEach((arg=>{arg?.__callId__&&seen.add(arg.__callId__)})),call.path.forEach((node=>{node.__callId__&&seen.add(node.__callId__)})),(call.interceptable||call.exception)&&!seen.has(call.id)&&(acc.unshift({callId:call.id,status:call.status,ancestors:call.ancestors}),seen.add(call.id)),acc)),[])}instrument(obj,options){if(!isInstrumentable(obj))return obj;let{mutate=!1,path=[]}=options;return Object.keys(obj).reduce(((acc,key)=>{let value=obj[key];return"function"!=typeof value?(acc[key]=this.instrument(value,{...options,path:path.concat(key)}),acc):"function"==typeof value.__originalFn__?(acc[key]=value,acc):(acc[key]=(...args)=>this.track(key,value,args,options),acc[key].__originalFn__=value,Object.defineProperty(acc[key],"name",{value:key,writable:!1}),Object.keys(value).length>0&&Object.assign(acc[key],this.instrument({...value},{...options,path:path.concat(key)})),acc)}),mutate?obj:(obj=>{try{return new obj.constructor}catch{return{}}})(obj))}track(method,fn,args,options){let storyId=args?.[0]?.__storyId__||scope.__STORYBOOK_PREVIEW__?.selectionStore?.selection?.storyId,{cursor,ancestors}=this.getState(storyId);this.setState(storyId,{cursor:cursor+1});let id=`${ancestors.slice(-1)[0]||storyId} [${cursor}] ${method}`,{path=[],intercept=!1,retain=!1}=options,interceptable="function"==typeof intercept?intercept(method,path):intercept,call={id,cursor,storyId,ancestors,path,method,args,interceptable,retain},result=(interceptable&&!ancestors.length?this.intercept:this.invoke).call(this,fn,call,options);return this.instrument(result,{...options,mutate:!0,path:[{__callId__:call.id}]})}intercept(fn,call,options){let{chainedCallIds,isDebugging,playUntil}=this.getState(call.storyId),isChainedUpon=chainedCallIds.has(call.id);return!isDebugging||isChainedUpon||playUntil?(playUntil===call.id&&this.setState(call.storyId,{playUntil:void 0}),this.invoke(fn,call,options)):new Promise((resolve=>{this.setState(call.storyId,(({resolvers})=>({isLocked:!1,resolvers:{...resolvers,[call.id]:resolve}})))})).then((()=>(this.setState(call.storyId,(state=>{let{[call.id]:_,...resolvers}=state.resolvers;return{isLocked:!0,resolvers}})),this.invoke(fn,call,options))))}invoke(fn,call,options){let{callRefsByResult,renderPhase}=this.getState(call.storyId),serializeValues=value=>{if(callRefsByResult.has(value))return callRefsByResult.get(value);if(value instanceof Array)return value.map(serializeValues);if(value instanceof Date)return{__date__:{value:value.toISOString()}};if(value instanceof Error){let{name,message,stack}=value;return{__error__:{name,message,stack}}}if(value instanceof RegExp){let{flags,source}=value;return{__regexp__:{flags,source}}}if(value instanceof scope.window.HTMLElement){let{prefix,localName,id,classList,innerText}=value;return{__element__:{prefix,localName,id,classNames:Array.from(classList),innerText}}}return"function"==typeof value?{__function__:{name:value.name}}:"symbol"==typeof value?{__symbol__:{description:value.description}}:"object"==typeof value&&value?.constructor?.name&&"Object"!==value?.constructor?.name?{__class__:{name:value.constructor.name}}:"[object Object]"===Object.prototype.toString.call(value)?Object.fromEntries(Object.entries(value).map((([key,val])=>[key,serializeValues(val)]))):value},info={...call,args:call.args.map(serializeValues)};call.path.forEach((ref=>{ref?.__callId__&&this.setState(call.storyId,(({chainedCallIds})=>({chainedCallIds:new Set(Array.from(chainedCallIds).concat(ref.__callId__))})))}));let handleException=e=>{if(e instanceof Error){let{name,message,stack,callId=call.id}=e,exception={name,message,stack,callId};if(this.update({...info,status:"error",exception}),this.setState(call.storyId,(state=>({callRefsByResult:new Map([...Array.from(state.callRefsByResult.entries()),[e,{__callId__:call.id,retain:call.retain}]])}))),call.ancestors.length)throw Object.prototype.hasOwnProperty.call(e,"callId")||Object.defineProperty(e,"callId",{value:call.id}),e;if(e!==alreadyCompletedException)throw logger.warn(e),IGNORED_EXCEPTION}throw e};try{if("played"===renderPhase&&!call.retain)throw alreadyCompletedException;let result=fn(...(options.getArgs?options.getArgs(call,this.getState(call.storyId)):call.args).map((arg=>"function"!=typeof arg||Object.keys(arg).length?arg:(...args)=>{let{cursor,ancestors}=this.getState(call.storyId);this.setState(call.storyId,{cursor:0,ancestors:[...ancestors,call.id]});let restore=()=>this.setState(call.storyId,{cursor,ancestors}),willRestore=!1;try{let res=arg(...args);return res instanceof Promise?(willRestore=!0,res.finally(restore)):res}finally{willRestore||restore()}})));return result&&["object","function","symbol"].includes(typeof result)&&this.setState(call.storyId,(state=>({callRefsByResult:new Map([...Array.from(state.callRefsByResult.entries()),[result,{__callId__:call.id,retain:call.retain}]])}))),this.update({...info,status:result instanceof Promise?"active":"done"}),result instanceof Promise?result.then((value=>(this.update({...info,status:"done"}),value)),handleException):result}catch(e){return handleException(e)}}update(call){this.channel.emit(EVENTS_CALL,call),this.setState(call.storyId,(({calls})=>{let callsById=calls.concat(call).reduce(((a,c)=>Object.assign(a,{[c.id]:c})),{});return{calls:Object.values(callsById).sort(((a,b)=>a.id.localeCompare(b.id,void 0,{numeric:!0})))}})),this.sync(call.storyId)}sync(storyId){let synchronize=()=>{let{isLocked,isPlaying}=this.getState(storyId),logItems=this.getLog(storyId),pausedAt=logItems.filter((({ancestors})=>!ancestors.length)).find((item=>"waiting"===item.status))?.callId,hasActive=logItems.some((item=>"active"===item.status));if(isLocked||hasActive||0===logItems.length){let payload2={controlStates:controlsDisabled,logItems};return void this.channel.emit(EVENTS_SYNC,payload2)}let hasPrevious=logItems.some((item=>["done","error"].includes(item.status))),payload={controlStates:{start:hasPrevious,back:hasPrevious,goto:!0,next:isPlaying,end:isPlaying},logItems,pausedAt};this.channel.emit(EVENTS_SYNC,payload)};this.setState(storyId,(({syncTimeout})=>(clearTimeout(syncTimeout),{syncTimeout:setTimeout(synchronize,0)})))}}),scope.window.__STORYBOOK_ADDON_INTERACTIONS_INSTRUMENTER__.instrument(obj,options))}catch(e){return once.warn(e),obj}}var _userEvent=userEvent.default||userEvent,testingLibrary=instrument({...dom_esm},{intercept:(method,path)=>"fireEvent"===path[0]||method.startsWith("findBy")||method.startsWith("waitFor")});testingLibrary.screen=Object.entries(testingLibrary.screen).reduce(((acc,[key,val])=>Object.defineProperty(acc,key,{get:()=>(once.warn(esm.C`
          You are using Testing Library's \`screen\` object. Use \`within(canvasElement)\` instead.
          More info: https://storybook.js.org/docs/react/essentials/interactions
        `),val)})),{...testingLibrary.screen});var{buildQueries,configure,createEvent:dist_createEvent,findAllByAltText,findAllByDisplayValue,findAllByLabelText,findAllByPlaceholderText,findAllByRole,findAllByTestId,findAllByText,findAllByTitle,findByAltText,findByDisplayValue,findByLabelText,findByPlaceholderText,findByRole,findByTestId,findByText,findByTitle,fireEvent,getAllByAltText,getAllByDisplayValue,getAllByLabelText,getAllByPlaceholderText,getAllByRole,getAllByTestId,getAllByText,getAllByTitle,getByAltText,getByDisplayValue,getByLabelText,getByPlaceholderText,getByRole,getByTestId,getByText,getByTitle,getConfig,getDefaultNormalizer,getElementError,getNodeText,getQueriesForElement,getRoles,getSuggestedQuery,isInaccessible,logDOM,logRoles,prettyDOM,queries,queryAllByAltText,queryAllByAttribute,queryAllByDisplayValue,queryAllByLabelText,queryAllByPlaceholderText,queryAllByRole,queryAllByTestId,queryAllByText,queryAllByTitle,queryByAltText,queryByAttribute,queryByDisplayValue,queryByLabelText,queryByPlaceholderText,queryByRole,queryByTestId,queryByText,queryByTitle,queryHelpers,screen,waitFor,waitForElementToBeRemoved,within,prettyFormat}=testingLibrary,dist_userEvent=instrument({userEvent:_userEvent},{intercept:!0}).userEvent},"./node_modules/@testing-library/dom/dist/event-map.js":(__unused_webpack_module,exports)=>{"use strict";exports.Hx=void 0;exports.Hx={copy:{EventType:"ClipboardEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},cut:{EventType:"ClipboardEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},paste:{EventType:"ClipboardEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},compositionEnd:{EventType:"CompositionEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},compositionStart:{EventType:"CompositionEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},compositionUpdate:{EventType:"CompositionEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},keyDown:{EventType:"KeyboardEvent",defaultInit:{bubbles:!0,cancelable:!0,charCode:0,composed:!0}},keyPress:{EventType:"KeyboardEvent",defaultInit:{bubbles:!0,cancelable:!0,charCode:0,composed:!0}},keyUp:{EventType:"KeyboardEvent",defaultInit:{bubbles:!0,cancelable:!0,charCode:0,composed:!0}},focus:{EventType:"FocusEvent",defaultInit:{bubbles:!1,cancelable:!1,composed:!0}},blur:{EventType:"FocusEvent",defaultInit:{bubbles:!1,cancelable:!1,composed:!0}},focusIn:{EventType:"FocusEvent",defaultInit:{bubbles:!0,cancelable:!1,composed:!0}},focusOut:{EventType:"FocusEvent",defaultInit:{bubbles:!0,cancelable:!1,composed:!0}},change:{EventType:"Event",defaultInit:{bubbles:!0,cancelable:!1}},input:{EventType:"InputEvent",defaultInit:{bubbles:!0,cancelable:!1,composed:!0}},invalid:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!0}},submit:{EventType:"Event",defaultInit:{bubbles:!0,cancelable:!0}},reset:{EventType:"Event",defaultInit:{bubbles:!0,cancelable:!0}},click:{EventType:"MouseEvent",defaultInit:{bubbles:!0,cancelable:!0,button:0,composed:!0}},contextMenu:{EventType:"MouseEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},dblClick:{EventType:"MouseEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},drag:{EventType:"DragEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},dragEnd:{EventType:"DragEvent",defaultInit:{bubbles:!0,cancelable:!1,composed:!0}},dragEnter:{EventType:"DragEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},dragExit:{EventType:"DragEvent",defaultInit:{bubbles:!0,cancelable:!1,composed:!0}},dragLeave:{EventType:"DragEvent",defaultInit:{bubbles:!0,cancelable:!1,composed:!0}},dragOver:{EventType:"DragEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},dragStart:{EventType:"DragEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},drop:{EventType:"DragEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},mouseDown:{EventType:"MouseEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},mouseEnter:{EventType:"MouseEvent",defaultInit:{bubbles:!1,cancelable:!1,composed:!0}},mouseLeave:{EventType:"MouseEvent",defaultInit:{bubbles:!1,cancelable:!1,composed:!0}},mouseMove:{EventType:"MouseEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},mouseOut:{EventType:"MouseEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},mouseOver:{EventType:"MouseEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},mouseUp:{EventType:"MouseEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},select:{EventType:"Event",defaultInit:{bubbles:!0,cancelable:!1}},touchCancel:{EventType:"TouchEvent",defaultInit:{bubbles:!0,cancelable:!1,composed:!0}},touchEnd:{EventType:"TouchEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},touchMove:{EventType:"TouchEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},touchStart:{EventType:"TouchEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},resize:{EventType:"UIEvent",defaultInit:{bubbles:!1,cancelable:!1}},scroll:{EventType:"UIEvent",defaultInit:{bubbles:!1,cancelable:!1}},wheel:{EventType:"WheelEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},abort:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},canPlay:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},canPlayThrough:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},durationChange:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},emptied:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},encrypted:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},ended:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},loadedData:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},loadedMetadata:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},loadStart:{EventType:"ProgressEvent",defaultInit:{bubbles:!1,cancelable:!1}},pause:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},play:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},playing:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},progress:{EventType:"ProgressEvent",defaultInit:{bubbles:!1,cancelable:!1}},rateChange:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},seeked:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},seeking:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},stalled:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},suspend:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},timeUpdate:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},volumeChange:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},waiting:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},load:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},error:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},animationStart:{EventType:"AnimationEvent",defaultInit:{bubbles:!0,cancelable:!1}},animationEnd:{EventType:"AnimationEvent",defaultInit:{bubbles:!0,cancelable:!1}},animationIteration:{EventType:"AnimationEvent",defaultInit:{bubbles:!0,cancelable:!1}},transitionCancel:{EventType:"TransitionEvent",defaultInit:{bubbles:!0,cancelable:!1}},transitionEnd:{EventType:"TransitionEvent",defaultInit:{bubbles:!0,cancelable:!0}},transitionRun:{EventType:"TransitionEvent",defaultInit:{bubbles:!0,cancelable:!1}},transitionStart:{EventType:"TransitionEvent",defaultInit:{bubbles:!0,cancelable:!1}},pointerOver:{EventType:"PointerEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},pointerEnter:{EventType:"PointerEvent",defaultInit:{bubbles:!1,cancelable:!1}},pointerDown:{EventType:"PointerEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},pointerMove:{EventType:"PointerEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},pointerUp:{EventType:"PointerEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},pointerCancel:{EventType:"PointerEvent",defaultInit:{bubbles:!0,cancelable:!1,composed:!0}},pointerOut:{EventType:"PointerEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},pointerLeave:{EventType:"PointerEvent",defaultInit:{bubbles:!1,cancelable:!1}},gotPointerCapture:{EventType:"PointerEvent",defaultInit:{bubbles:!0,cancelable:!1,composed:!0}},lostPointerCapture:{EventType:"PointerEvent",defaultInit:{bubbles:!0,cancelable:!1,composed:!0}},popState:{EventType:"PopStateEvent",defaultInit:{bubbles:!0,cancelable:!1}},offline:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},online:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}}}},"./node_modules/@testing-library/dom/dist/helpers.js":(__unused_webpack_module,exports)=>{"use strict";exports.M2=function getWindowFromNode(node){if(node.defaultView)return node.defaultView;if(node.ownerDocument&&node.ownerDocument.defaultView)return node.ownerDocument.defaultView;if(node.window)return node.window;throw node.ownerDocument&&null===node.ownerDocument.defaultView?new Error("It looks like the window object is not available for the provided node."):node.then instanceof Function?new Error("It looks like you passed a Promise object instead of a DOM node. Did you do something like `fireEvent.click(screen.findBy...` when you meant to use a `getBy` query `fireEvent.click(screen.getBy...`, or await the findBy query `fireEvent.click(await screen.findBy...`?"):Array.isArray(node)?new Error("It looks like you passed an Array instead of a DOM node. Did you do something like `fireEvent.click(screen.getAllBy...` when you meant to use a `getBy` query `fireEvent.click(screen.getBy...`?"):"function"==typeof node.debug&&"function"==typeof node.logTestingPlaygroundURL?new Error("It looks like you passed a `screen` object. Did you do something like `fireEvent.click(screen, ...` when you meant to use a query, e.g. `fireEvent.click(screen.getBy..., `?"):new Error(`The given node is not an Element, the node type is: ${typeof node}.`)}},"./node_modules/date-fns/esm/isAfter/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>isAfter});var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/date-fns/esm/toDate/index.js"),_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/date-fns/esm/_lib/requiredArgs/index.js");function isAfter(dirtyDate,dirtyDateToCompare){(0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__.Z)(2,arguments);var date=(0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__.Z)(dirtyDate),dateToCompare=(0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__.Z)(dirtyDateToCompare);return date.getTime()>dateToCompare.getTime()}},"./node_modules/mockdate/lib/mockdate.js":function(__unused_webpack_module,exports){!function(exports){"use strict";var extendStatics=function(d,b){return extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)Object.prototype.hasOwnProperty.call(b,p)&&(d[p]=b[p])},extendStatics(d,b)};function __extends(d,b){if("function"!=typeof b&&null!==b)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}var RealDate=Date,now=null,MockDate=function(_super){function Date(y,m,d,h,M,s,ms){var date;switch(_super.call(this),arguments.length){case 0:date=null!==now?new RealDate(now.valueOf()):new RealDate;break;case 1:date=new RealDate(y);break;default:date=new RealDate(y,m,d=void 0===d?1:d,h=h||0,M=M||0,s=s||0,ms=ms||0)}return date}return __extends(Date,_super),Date}(RealDate);function set(date){var dateObj=new Date(date.valueOf());if(isNaN(dateObj.getTime()))throw new TypeError("mockdate: The time set is an invalid date: "+date);Date=MockDate,now=dateObj.valueOf()}function reset(){Date=RealDate}MockDate.prototype=RealDate.prototype,MockDate.UTC=RealDate.UTC,MockDate.now=function(){return(new MockDate).valueOf()},MockDate.parse=function(dateString){return RealDate.parse(dateString)},MockDate.toString=function(){return RealDate.toString()};var mockdate={set,reset};exports.default=mockdate,exports.reset=reset,exports.set=set,Object.defineProperty(exports,"__esModule",{value:!0})}(exports)}}]);
//# sourceMappingURL=9890.843adecb.iframe.bundle.js.map