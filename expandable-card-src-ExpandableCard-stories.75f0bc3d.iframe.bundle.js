"use strict";(self.webpackChunkleafygreen_ui=self.webpackChunkleafygreen_ui||[]).push([[6556],{"./packages/expandable-card/src/ExpandableCard.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Controlled:()=>Controlled,Generated:()=>Generated,LiveExample:()=>LiveExample,__namedExportsOrder:()=>__namedExportsOrder,default:()=>ExpandableCard_stories});var esm_extends=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/extends.js"),slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),toConsumableArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),index_js_=__webpack_require__("webpack/sharing/consume/default/react/react"),index_js_default=__webpack_require__.n(index_js_),esm=__webpack_require__("./tools/storybook-utils/dist/esm/index.js"),ExpandableCard=__webpack_require__("./packages/expandable-card/src/ExpandableCard/ExpandableCard.tsx"),loremIpsum="Donec id elit non mi porta gravida at eget metus.";const ExpandableCard_stories={title:"Components/ExpandableCard",component:ExpandableCard.Z,parameters:{default:"LiveExample",controls:{exclude:[].concat((0,toConsumableArray.Z)(esm.xZ),["isOpen","defaultOpen"])},generate:{combineArgs:{darkMode:[!1,!0],description:[void 0,loremIpsum],flagText:[void 0,"flagText"],isOpen:[!1,!0]}}},args:{title:"Title",description:loremIpsum,flagText:"flagText",children:"Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus."},argTypes:{description:{control:"text"},flagText:{control:"text"},children:esm.bN.children,darkMode:esm.bN.darkMode,defaultOpen:{control:"boolean"},isOpen:{control:"boolean"},id:{control:"text"},contentClassName:{control:"text"}}};var LiveExample=function LiveExample(args){return index_js_default().createElement(ExpandableCard.Z,args)};LiveExample.parameters={chromatic:{disableSnapshot:!0}};var Controlled=function Controlled(args){var _useState=(0,index_js_.useState)(!1),_useState2=(0,slicedToArray.Z)(_useState,2),isOpen=_useState2[0],setIsOpen=_useState2[1],handleClick=function handleClick(e){console.log("Parent controlling isOpen:",e),setIsOpen((function(isOpen){return!isOpen}))};return index_js_default().createElement("div",null,index_js_default().createElement("button",{onClick:handleClick},"handleClick"),index_js_default().createElement(ExpandableCard.Z,(0,esm_extends.Z)({},args,{isOpen,onClick:handleClick})))};Controlled.parameters={chromatic:{disableSnapshot:!0}};var Generated=function Generated(){};LiveExample.parameters={...LiveExample.parameters,docs:{...LiveExample.parameters?.docs,source:{originalSource:"args => <ExpandableCard {...args} />",...LiveExample.parameters?.docs?.source}}},Controlled.parameters={...Controlled.parameters,docs:{...Controlled.parameters?.docs,source:{originalSource:"args => {\n  const [isOpen, setIsOpen] = useState(false);\n  const handleClick = (e: SyntheticEvent<HTMLDivElement | HTMLButtonElement, MouseEvent | KeyboardEvent>) => {\n    // eslint-disable-next-line no-console\n    console.log(`Parent controlling isOpen:`, e);\n    setIsOpen(isOpen => !isOpen);\n  };\n  return <div>\n      <button onClick={handleClick}>handleClick</button>\n      <ExpandableCard {...args} isOpen={isOpen} onClick={handleClick} />\n    </div>;\n}",...Controlled.parameters?.docs?.source}}},Generated.parameters={...Generated.parameters,docs:{...Generated.parameters?.docs,source:{originalSource:"() => {}",...Generated.parameters?.docs?.source}}};const __namedExportsOrder=["LiveExample","Controlled","Generated"]},"./tools/storybook-utils/dist/esm/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{bN:()=>n,xZ:()=>r});__webpack_require__("./node_modules/lodash/mergeWith.js");var n={baseFontSize:{description:"The base font size passed to the LeafyGreenProvider that wraps the component",control:{type:"radio"},options:[14,16]},updatedBaseFontSize:{description:"The base font size passed to the LeafyGreenProvider that wraps the component. Uses the updated font size values for Euclid Circular A.",control:{type:"radio"},options:[13,16]},darkMode:{description:"Render the component in dark mode.",control:"boolean"},children:{description:"Element rendered inside the component",control:"text"},as:{description:"The component will be rendered in HTML as the element selected here",options:["small","button","a","abbr","address","article","aside","b","big","blockquote","caption","cite","code","dd","del","details","dfn","dialog","div","em","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","i","ins","kbd","keygen","label","legend","li","main","map","mark","menu","menuitem","meter","nav","noscript","ol","p","picture","pre","progress","q","rp","rt","ruby","s","samp","slot","script","section","select","span","strong","style","sub","summary","sup","template","tbody","td","tfoot","th","thead","time","title","tr","u","ul"],type:{name:"string"},control:{type:"select"},defaultValue:"button"}},r=["aria-controls","aria-describedby","aria-label","aria-labelledby","aria-describedby","className","data-lgid","id","onBlur","onCancel","onChange","onClear","onClick","onConfirm","onDismiss","onFilter","popoverZIndex","portalClassName","portalContainer","ref","setOpen","scrollContainer","usePortal"]}}]);